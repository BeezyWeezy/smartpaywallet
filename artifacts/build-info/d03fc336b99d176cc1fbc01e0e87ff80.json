{"id":"d03fc336b99d176cc1fbc01e0e87ff80","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@account-abstraction/contracts/core/Helpers.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\n/* solhint-disable no-inline-assembly */\n\n/**\n * returned data from validateUserOp.\n * validateUserOp returns a uint256, with is created by `_packedValidationData` and parsed by `_parseValidationData`\n * @param aggregator - address(0) - the account validated the signature by itself.\n *              address(1) - the account failed to validate the signature.\n *              otherwise - this is an address of a signature aggregator that must be used to validate the signature.\n * @param validAfter - this UserOp is valid only after this timestamp.\n * @param validaUntil - this UserOp is valid only up to this timestamp.\n */\n    struct ValidationData {\n        address aggregator;\n        uint48 validAfter;\n        uint48 validUntil;\n    }\n\n//extract sigFailed, validAfter, validUntil.\n// also convert zero validUntil to type(uint48).max\n    function _parseValidationData(uint validationData) pure returns (ValidationData memory data) {\n        address aggregator = address(uint160(validationData));\n        uint48 validUntil = uint48(validationData >> 160);\n        if (validUntil == 0) {\n            validUntil = type(uint48).max;\n        }\n        uint48 validAfter = uint48(validationData >> (48 + 160));\n        return ValidationData(aggregator, validAfter, validUntil);\n    }\n\n// intersect account and paymaster ranges.\n    function _intersectTimeRange(uint256 validationData, uint256 paymasterValidationData) pure returns (ValidationData memory) {\n        ValidationData memory accountValidationData = _parseValidationData(validationData);\n        ValidationData memory pmValidationData = _parseValidationData(paymasterValidationData);\n        address aggregator = accountValidationData.aggregator;\n        if (aggregator == address(0)) {\n            aggregator = pmValidationData.aggregator;\n        }\n        uint48 validAfter = accountValidationData.validAfter;\n        uint48 validUntil = accountValidationData.validUntil;\n        uint48 pmValidAfter = pmValidationData.validAfter;\n        uint48 pmValidUntil = pmValidationData.validUntil;\n\n        if (validAfter < pmValidAfter) validAfter = pmValidAfter;\n        if (validUntil > pmValidUntil) validUntil = pmValidUntil;\n        return ValidationData(aggregator, validAfter, validUntil);\n    }\n\n/**\n * helper to pack the return value for validateUserOp\n * @param data - the ValidationData to pack\n */\n    function _packValidationData(ValidationData memory data) pure returns (uint256) {\n        return uint160(data.aggregator) | (uint256(data.validUntil) << 160) | (uint256(data.validAfter) << (160 + 48));\n    }\n\n/**\n * helper to pack the return value for validateUserOp, when not using an aggregator\n * @param sigFailed - true for signature failure, false for success\n * @param validUntil last timestamp this UserOperation is valid (or zero for infinite)\n * @param validAfter first timestamp this UserOperation is valid\n */\n    function _packValidationData(bool sigFailed, uint48 validUntil, uint48 validAfter) pure returns (uint256) {\n        return (sigFailed ? 1 : 0) | (uint256(validUntil) << 160) | (uint256(validAfter) << (160 + 48));\n    }\n\n/**\n * keccak function over calldata.\n * @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it.\n */\n    function calldataKeccak(bytes calldata data) pure returns (bytes32 ret) {\n        assembly {\n            let mem := mload(0x40)\n            let len := data.length\n            calldatacopy(mem, data.offset, len)\n            ret := keccak256(mem, len)\n        }\n    }\n\n"},"@account-abstraction/contracts/interfaces/IAggregator.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\nimport \"./UserOperation.sol\";\n\n/**\n * Aggregated Signatures validator.\n */\ninterface IAggregator {\n\n    /**\n     * validate aggregated signature.\n     * revert if the aggregated signature does not match the given list of operations.\n     */\n    function validateSignatures(UserOperation[] calldata userOps, bytes calldata signature) external view;\n\n    /**\n     * validate signature of a single userOp\n     * This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation\n     * First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\n     * @param userOp the userOperation received from the user.\n     * @return sigForUserOp the value to put into the signature field of the userOp when calling handleOps.\n     *    (usually empty, unless account and aggregator support some kind of \"multisig\"\n     */\n    function validateUserOpSignature(UserOperation calldata userOp)\n    external view returns (bytes memory sigForUserOp);\n\n    /**\n     * aggregate multiple signatures into a single value.\n     * This method is called off-chain to calculate the signature to pass with handleOps()\n     * bundler MAY use optimized custom code perform this aggregation\n     * @param userOps array of UserOperations to collect the signatures from.\n     * @return aggregatedSignature the aggregated signature\n     */\n    function aggregateSignatures(UserOperation[] calldata userOps) external view returns (bytes memory aggregatedSignature);\n}\n"},"@account-abstraction/contracts/interfaces/IEntryPoint.sol":{"content":"/**\n ** Account-Abstraction (EIP-4337) singleton EntryPoint implementation.\n ** Only one instance required on each chain.\n **/\n// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\n/* solhint-disable avoid-low-level-calls */\n/* solhint-disable no-inline-assembly */\n/* solhint-disable reason-string */\n\nimport \"./UserOperation.sol\";\nimport \"./IStakeManager.sol\";\nimport \"./IAggregator.sol\";\nimport \"./INonceManager.sol\";\n\ninterface IEntryPoint is IStakeManager, INonceManager {\n\n    /***\n     * An event emitted after each successful request\n     * @param userOpHash - unique identifier for the request (hash its entire content, except signature).\n     * @param sender - the account that generates this request.\n     * @param paymaster - if non-null, the paymaster that pays for this request.\n     * @param nonce - the nonce value from the request.\n     * @param success - true if the sender transaction succeeded, false if reverted.\n     * @param actualGasCost - actual amount paid (by account or paymaster) for this UserOperation.\n     * @param actualGasUsed - total gas used by this UserOperation (including preVerification, creation, validation and execution).\n     */\n    event UserOperationEvent(bytes32 indexed userOpHash, address indexed sender, address indexed paymaster, uint256 nonce, bool success, uint256 actualGasCost, uint256 actualGasUsed);\n\n    /**\n     * account \"sender\" was deployed.\n     * @param userOpHash the userOp that deployed this account. UserOperationEvent will follow.\n     * @param sender the account that is deployed\n     * @param factory the factory used to deploy this account (in the initCode)\n     * @param paymaster the paymaster used by this UserOp\n     */\n    event AccountDeployed(bytes32 indexed userOpHash, address indexed sender, address factory, address paymaster);\n\n    /**\n     * An event emitted if the UserOperation \"callData\" reverted with non-zero length\n     * @param userOpHash the request unique identifier.\n     * @param sender the sender of this request\n     * @param nonce the nonce used in the request\n     * @param revertReason - the return bytes from the (reverted) call to \"callData\".\n     */\n    event UserOperationRevertReason(bytes32 indexed userOpHash, address indexed sender, uint256 nonce, bytes revertReason);\n\n    /**\n     * an event emitted by handleOps(), before starting the execution loop.\n     * any event emitted before this event, is part of the validation.\n     */\n    event BeforeExecution();\n\n    /**\n     * signature aggregator used by the following UserOperationEvents within this bundle.\n     */\n    event SignatureAggregatorChanged(address indexed aggregator);\n\n    /**\n     * a custom revert error of handleOps, to identify the offending op.\n     *  NOTE: if simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\n     *  @param opIndex - index into the array of ops to the failed one (in simulateValidation, this is always zero)\n     *  @param reason - revert reason\n     *      The string starts with a unique code \"AAmn\", where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\n     *      so a failure can be attributed to the correct entity.\n     *   Should be caught in off-chain handleOps simulation and not happen on-chain.\n     *   Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\n     */\n    error FailedOp(uint256 opIndex, string reason);\n\n    /**\n     * error case when a signature aggregator fails to verify the aggregated signature it had created.\n     */\n    error SignatureValidationFailed(address aggregator);\n\n    /**\n     * Successful result from simulateValidation.\n     * @param returnInfo gas and time-range returned values\n     * @param senderInfo stake information about the sender\n     * @param factoryInfo stake information about the factory (if any)\n     * @param paymasterInfo stake information about the paymaster (if any)\n     */\n    error ValidationResult(ReturnInfo returnInfo,\n        StakeInfo senderInfo, StakeInfo factoryInfo, StakeInfo paymasterInfo);\n\n    /**\n     * Successful result from simulateValidation, if the account returns a signature aggregator\n     * @param returnInfo gas and time-range returned values\n     * @param senderInfo stake information about the sender\n     * @param factoryInfo stake information about the factory (if any)\n     * @param paymasterInfo stake information about the paymaster (if any)\n     * @param aggregatorInfo signature aggregation info (if the account requires signature aggregator)\n     *      bundler MUST use it to verify the signature, or reject the UserOperation\n     */\n    error ValidationResultWithAggregation(ReturnInfo returnInfo,\n        StakeInfo senderInfo, StakeInfo factoryInfo, StakeInfo paymasterInfo,\n        AggregatorStakeInfo aggregatorInfo);\n\n    /**\n     * return value of getSenderAddress\n     */\n    error SenderAddressResult(address sender);\n\n    /**\n     * return value of simulateHandleOp\n     */\n    error ExecutionResult(uint256 preOpGas, uint256 paid, uint48 validAfter, uint48 validUntil, bool targetSuccess, bytes targetResult);\n\n    //UserOps handled, per aggregator\n    struct UserOpsPerAggregator {\n        UserOperation[] userOps;\n\n        // aggregator address\n        IAggregator aggregator;\n        // aggregated signature\n        bytes signature;\n    }\n\n    /**\n     * Execute a batch of UserOperation.\n     * no signature aggregator is used.\n     * if any account requires an aggregator (that is, it returned an aggregator when\n     * performing simulateValidation), then handleAggregatedOps() must be used instead.\n     * @param ops the operations to execute\n     * @param beneficiary the address to receive the fees\n     */\n    function handleOps(UserOperation[] calldata ops, address payable beneficiary) external;\n\n    /**\n     * Execute a batch of UserOperation with Aggregators\n     * @param opsPerAggregator the operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)\n     * @param beneficiary the address to receive the fees\n     */\n    function handleAggregatedOps(\n        UserOpsPerAggregator[] calldata opsPerAggregator,\n        address payable beneficiary\n    ) external;\n\n    /**\n     * generate a request Id - unique identifier for this request.\n     * the request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\n     */\n    function getUserOpHash(UserOperation calldata userOp) external view returns (bytes32);\n\n    /**\n     * Simulate a call to account.validateUserOp and paymaster.validatePaymasterUserOp.\n     * @dev this method always revert. Successful result is ValidationResult error. other errors are failures.\n     * @dev The node must also verify it doesn't use banned opcodes, and that it doesn't reference storage outside the account's data.\n     * @param userOp the user operation to validate.\n     */\n    function simulateValidation(UserOperation calldata userOp) external;\n\n    /**\n     * gas and return values during simulation\n     * @param preOpGas the gas used for validation (including preValidationGas)\n     * @param prefund the required prefund for this operation\n     * @param sigFailed validateUserOp's (or paymaster's) signature check failed\n     * @param validAfter - first timestamp this UserOp is valid (merging account and paymaster time-range)\n     * @param validUntil - last timestamp this UserOp is valid (merging account and paymaster time-range)\n     * @param paymasterContext returned by validatePaymasterUserOp (to be passed into postOp)\n     */\n    struct ReturnInfo {\n        uint256 preOpGas;\n        uint256 prefund;\n        bool sigFailed;\n        uint48 validAfter;\n        uint48 validUntil;\n        bytes paymasterContext;\n    }\n\n    /**\n     * returned aggregated signature info.\n     * the aggregator returned by the account, and its current stake.\n     */\n    struct AggregatorStakeInfo {\n        address aggregator;\n        StakeInfo stakeInfo;\n    }\n\n    /**\n     * Get counterfactual sender address.\n     *  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\n     * this method always revert, and returns the address in SenderAddressResult error\n     * @param initCode the constructor code to be passed into the UserOperation.\n     */\n    function getSenderAddress(bytes memory initCode) external;\n\n\n    /**\n     * simulate full execution of a UserOperation (including both validation and target execution)\n     * this method will always revert with \"ExecutionResult\".\n     * it performs full validation of the UserOperation, but ignores signature error.\n     * an optional target address is called after the userop succeeds, and its value is returned\n     * (before the entire call is reverted)\n     * Note that in order to collect the the success/failure of the target call, it must be executed\n     * with trace enabled to track the emitted events.\n     * @param op the UserOperation to simulate\n     * @param target if nonzero, a target address to call after userop simulation. If called, the targetSuccess and targetResult\n     *        are set to the return from that call.\n     * @param targetCallData callData to pass to target address\n     */\n    function simulateHandleOp(UserOperation calldata op, address target, bytes calldata targetCallData) external;\n}\n\n"},"@account-abstraction/contracts/interfaces/INonceManager.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\ninterface INonceManager {\n\n    /**\n     * Return the next nonce for this sender.\n     * Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\n     * But UserOp with different keys can come with arbitrary order.\n     *\n     * @param sender the account address\n     * @param key the high 192 bit of the nonce\n     * @return nonce a full nonce to pass for next UserOp with this sender.\n     */\n    function getNonce(address sender, uint192 key)\n    external view returns (uint256 nonce);\n\n    /**\n     * Manually increment the nonce of the sender.\n     * This method is exposed just for completeness..\n     * Account does NOT need to call it, neither during validation, nor elsewhere,\n     * as the EntryPoint will update the nonce regardless.\n     * Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\n     * UserOperations will not pay extra for the first transaction with a given key.\n     */\n    function incrementNonce(uint192 key) external;\n}\n"},"@account-abstraction/contracts/interfaces/IPaymaster.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\nimport \"./UserOperation.sol\";\n\n/**\n * the interface exposed by a paymaster contract, who agrees to pay the gas for user's operations.\n * a paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction.\n */\ninterface IPaymaster {\n\n    enum PostOpMode {\n        opSucceeded, // user op succeeded\n        opReverted, // user op reverted. still has to pay for gas.\n        postOpReverted //user op succeeded, but caused postOp to revert. Now it's a 2nd call, after user's op was deliberately reverted.\n    }\n\n    /**\n     * payment validation: check if paymaster agrees to pay.\n     * Must verify sender is the entryPoint.\n     * Revert to reject this request.\n     * Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted)\n     * The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\n     * @param userOp the user operation\n     * @param userOpHash hash of the user's request data.\n     * @param maxCost the maximum cost of this transaction (based on maximum gas and gas price from userOp)\n     * @return context value to send to a postOp\n     *      zero length to signify postOp is not required.\n     * @return validationData signature and time-range of this operation, encoded the same as the return value of validateUserOperation\n     *      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n     *         otherwise, an address of an \"authorizer\" contract.\n     *      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n     *      <6-byte> validAfter - first timestamp this operation is valid\n     *      Note that the validation code cannot use block.timestamp (or block.number) directly.\n     */\n    function validatePaymasterUserOp(UserOperation calldata userOp, bytes32 userOpHash, uint256 maxCost)\n    external returns (bytes memory context, uint256 validationData);\n\n    /**\n     * post-operation handler.\n     * Must verify sender is the entryPoint\n     * @param mode enum with the following options:\n     *      opSucceeded - user operation succeeded.\n     *      opReverted  - user op reverted. still has to pay for gas.\n     *      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.\n     *                       Now this is the 2nd call, after user's op was deliberately reverted.\n     * @param context - the context value returned by validatePaymasterUserOp\n     * @param actualGasCost - actual gas used so far (without this postOp call).\n     */\n    function postOp(PostOpMode mode, bytes calldata context, uint256 actualGasCost) external;\n}\n"},"@account-abstraction/contracts/interfaces/IStakeManager.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.12;\n\n/**\n * manage deposits and stakes.\n * deposit is just a balance used to pay for UserOperations (either by a paymaster or an account)\n * stake is value locked for at least \"unstakeDelay\" by the staked entity.\n */\ninterface IStakeManager {\n\n    event Deposited(\n        address indexed account,\n        uint256 totalDeposit\n    );\n\n    event Withdrawn(\n        address indexed account,\n        address withdrawAddress,\n        uint256 amount\n    );\n\n    /// Emitted when stake or unstake delay are modified\n    event StakeLocked(\n        address indexed account,\n        uint256 totalStaked,\n        uint256 unstakeDelaySec\n    );\n\n    /// Emitted once a stake is scheduled for withdrawal\n    event StakeUnlocked(\n        address indexed account,\n        uint256 withdrawTime\n    );\n\n    event StakeWithdrawn(\n        address indexed account,\n        address withdrawAddress,\n        uint256 amount\n    );\n\n    /**\n     * @param deposit the entity's deposit\n     * @param staked true if this entity is staked.\n     * @param stake actual amount of ether staked for this entity.\n     * @param unstakeDelaySec minimum delay to withdraw the stake.\n     * @param withdrawTime - first block timestamp where 'withdrawStake' will be callable, or zero if already locked\n     * @dev sizes were chosen so that (deposit,staked, stake) fit into one cell (used during handleOps)\n     *    and the rest fit into a 2nd cell.\n     *    112 bit allows for 10^15 eth\n     *    48 bit for full timestamp\n     *    32 bit allows 150 years for unstake delay\n     */\n    struct DepositInfo {\n        uint112 deposit;\n        bool staked;\n        uint112 stake;\n        uint32 unstakeDelaySec;\n        uint48 withdrawTime;\n    }\n\n    //API struct used by getStakeInfo and simulateValidation\n    struct StakeInfo {\n        uint256 stake;\n        uint256 unstakeDelaySec;\n    }\n\n    /// @return info - full deposit information of given account\n    function getDepositInfo(address account) external view returns (DepositInfo memory info);\n\n    /// @return the deposit (for gas payment) of the account\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * add to the deposit of the given account\n     */\n    function depositTo(address account) external payable;\n\n    /**\n     * add to the account's stake - amount and delay\n     * any pending unstake is first cancelled.\n     * @param _unstakeDelaySec the new lock duration before the deposit can be withdrawn.\n     */\n    function addStake(uint32 _unstakeDelaySec) external payable;\n\n    /**\n     * attempt to unlock the stake.\n     * the value can be withdrawn (using withdrawStake) after the unstake delay.\n     */\n    function unlockStake() external;\n\n    /**\n     * withdraw from the (unlocked) stake.\n     * must first call unlockStake and wait for the unstakeDelay to pass\n     * @param withdrawAddress the address to send withdrawn value.\n     */\n    function withdrawStake(address payable withdrawAddress) external;\n\n    /**\n     * withdraw from the deposit.\n     * @param withdrawAddress the address to send withdrawn value.\n     * @param withdrawAmount the amount to withdraw.\n     */\n    function withdrawTo(address payable withdrawAddress, uint256 withdrawAmount) external;\n}\n"},"@account-abstraction/contracts/interfaces/UserOperation.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\n/* solhint-disable no-inline-assembly */\n\nimport {calldataKeccak} from \"../core/Helpers.sol\";\n\n/**\n * User Operation struct\n * @param sender the sender account of this request.\n     * @param nonce unique value the sender uses to verify it is not a replay.\n     * @param initCode if set, the account contract will be created by this constructor/\n     * @param callData the method call to execute on this account.\n     * @param callGasLimit the gas limit passed to the callData method call.\n     * @param verificationGasLimit gas used for validateUserOp and validatePaymasterUserOp.\n     * @param preVerificationGas gas not calculated by the handleOps method, but added to the gas paid. Covers batch overhead.\n     * @param maxFeePerGas same as EIP-1559 gas parameter.\n     * @param maxPriorityFeePerGas same as EIP-1559 gas parameter.\n     * @param paymasterAndData if set, this field holds the paymaster address and paymaster-specific data. the paymaster will pay for the transaction instead of the sender.\n     * @param signature sender-verified signature over the entire request, the EntryPoint address and the chain ID.\n     */\n    struct UserOperation {\n\n        address sender;\n        uint256 nonce;\n        bytes initCode;\n        bytes callData;\n        uint256 callGasLimit;\n        uint256 verificationGasLimit;\n        uint256 preVerificationGas;\n        uint256 maxFeePerGas;\n        uint256 maxPriorityFeePerGas;\n        bytes paymasterAndData;\n        bytes signature;\n    }\n\n/**\n * Utility functions helpful when working with UserOperation structs.\n */\nlibrary UserOperationLib {\n\n    function getSender(UserOperation calldata userOp) internal pure returns (address) {\n        address data;\n        //read sender from userOp, which is first userOp member (saves 800 gas...)\n        assembly {data := calldataload(userOp)}\n        return address(uint160(data));\n    }\n\n    //relayer/block builder might submit the TX with higher priorityFee, but the user should not\n    // pay above what he signed for.\n    function gasPrice(UserOperation calldata userOp) internal view returns (uint256) {\n    unchecked {\n        uint256 maxFeePerGas = userOp.maxFeePerGas;\n        uint256 maxPriorityFeePerGas = userOp.maxPriorityFeePerGas;\n        if (maxFeePerGas == maxPriorityFeePerGas) {\n            //legacy mode (for networks that don't support basefee opcode)\n            return maxFeePerGas;\n        }\n        return min(maxFeePerGas, maxPriorityFeePerGas + block.basefee);\n    }\n    }\n\n    function pack(UserOperation calldata userOp) internal pure returns (bytes memory ret) {\n        address sender = getSender(userOp);\n        uint256 nonce = userOp.nonce;\n        bytes32 hashInitCode = calldataKeccak(userOp.initCode);\n        bytes32 hashCallData = calldataKeccak(userOp.callData);\n        uint256 callGasLimit = userOp.callGasLimit;\n        uint256 verificationGasLimit = userOp.verificationGasLimit;\n        uint256 preVerificationGas = userOp.preVerificationGas;\n        uint256 maxFeePerGas = userOp.maxFeePerGas;\n        uint256 maxPriorityFeePerGas = userOp.maxPriorityFeePerGas;\n        bytes32 hashPaymasterAndData = calldataKeccak(userOp.paymasterAndData);\n\n        return abi.encode(\n            sender, nonce,\n            hashInitCode, hashCallData,\n            callGasLimit, verificationGasLimit, preVerificationGas,\n            maxFeePerGas, maxPriorityFeePerGas,\n            hashPaymasterAndData\n        );\n    }\n\n    function hash(UserOperation calldata userOp) internal pure returns (bytes32) {\n        return keccak256(pack(userOp));\n    }\n\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"contracts/base/CustomBasePaymaster.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@account-abstraction/contracts/interfaces/IEntryPoint.sol\";\nimport \"@account-abstraction/contracts/interfaces/IPaymaster.sol\";\nimport \"@account-abstraction/contracts/interfaces/UserOperation.sol\";\n\nabstract contract CustomBasePaymaster is IPaymaster {\n    IEntryPoint public immutable entryPoint;\n\n    constructor(IEntryPoint _entryPoint) {\n        entryPoint = _entryPoint;\n    }\n\n    modifier onlyEntryPoint() {\n        require(msg.sender == address(entryPoint), \"Only EntryPoint\");\n        _;\n    }\n\n    function validatePaymasterUserOp(\n        UserOperation calldata userOp,\n        bytes32 userOpHash,\n        uint256 maxCost\n    ) external override onlyEntryPoint returns (bytes memory context, uint256 validationData) {\n        return _validatePaymasterUserOp(userOp, userOpHash, maxCost);\n    }\n\n    function postOp(\n        PostOpMode mode,\n        bytes calldata context,\n        uint256 actualGasCost\n    ) external virtual override onlyEntryPoint {\n        _postOp(mode, context, actualGasCost);\n    }\n\n    function _validatePaymasterUserOp(\n        UserOperation calldata userOp,\n        bytes32 userOpHash,\n        uint256 maxCost\n    ) internal virtual returns (bytes memory context, uint256 validationData);\n\n    function _postOp(\n        PostOpMode mode,\n        bytes calldata context,\n        uint256 actualGasCost\n    ) internal virtual;\n}\n"},"contracts/SmartPayPaymaster.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"./base/CustomBasePaymaster.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract SmartPayPaymaster is CustomBasePaymaster, Ownable {\n    event GasSponsored(address indexed sender, uint256 gasUsed, uint256 timestamp);\n\n    constructor(IEntryPoint _entryPoint, address initialOwner)\n    CustomBasePaymaster(_entryPoint)\n    Ownable(initialOwner)\n    {}\n\n    receive() external payable {}\n\n    function _validatePaymasterUserOp(\n        UserOperation calldata userOp,\n        bytes32,\n        uint256\n    ) internal pure override returns (bytes memory context, uint256 validationData) {\n        // Пропускаем всех — можно добавить валидацию\n        return (abi.encode(userOp.sender), 0);\n    }\n\n    function _postOp(\n        PostOpMode,\n        bytes calldata context,\n        uint256 actualGasCost\n    ) internal override {\n        address sender = abi.decode(context, (address));\n        emit GasSponsored(sender, actualGasCost, block.timestamp);\n    }\n\n    function withdrawTo(address payable to, uint256 amount) external onlyOwner {\n        (bool success,) = to.call{value: amount}(\"\");\n        require(success, \"Withdraw failed\");\n    }\n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@account-abstraction/contracts/core/Helpers.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/core/Helpers.sol","exportedSymbols":{"ValidationData":[9],"_intersectTimeRange":[153],"_packValidationData":[190,228],"_parseValidationData":[68],"calldataKeccak":[238]},"id":239,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"36:24:0"},{"canonicalName":"ValidationData","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"104:581:0","text":" returned data from validateUserOp.\n validateUserOp returns a uint256, with is created by `_packedValidationData` and parsed by `_parseValidationData`\n @param aggregator - address(0) - the account validated the signature by itself.\n              address(1) - the account failed to validate the signature.\n              otherwise - this is an address of a signature aggregator that must be used to validate the signature.\n @param validAfter - this UserOp is valid only after this timestamp.\n @param validaUntil - this UserOp is valid only up to this timestamp."},"id":9,"members":[{"constant":false,"id":4,"mutability":"mutable","name":"aggregator","nameLocation":"730:10:0","nodeType":"VariableDeclaration","scope":9,"src":"722:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3,"name":"address","nodeType":"ElementaryTypeName","src":"722:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6,"mutability":"mutable","name":"validAfter","nameLocation":"757:10:0","nodeType":"VariableDeclaration","scope":9,"src":"750:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5,"name":"uint48","nodeType":"ElementaryTypeName","src":"750:6:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":8,"mutability":"mutable","name":"validUntil","nameLocation":"784:10:0","nodeType":"VariableDeclaration","scope":9,"src":"777:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7,"name":"uint48","nodeType":"ElementaryTypeName","src":"777:6:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"ValidationData","nameLocation":"697:14:0","nodeType":"StructDefinition","scope":239,"src":"690:111:0","visibility":"public"},{"body":{"id":67,"nodeType":"Block","src":"997:346:0","statements":[{"assignments":[18],"declarations":[{"constant":false,"id":18,"mutability":"mutable","name":"aggregator","nameLocation":"1015:10:0","nodeType":"VariableDeclaration","scope":67,"src":"1007:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17,"name":"address","nodeType":"ElementaryTypeName","src":"1007:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":26,"initialValue":{"arguments":[{"arguments":[{"id":23,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"1044:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":22,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1036:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":21,"name":"uint160","nodeType":"ElementaryTypeName","src":"1036:7:0","typeDescriptions":{}}},"id":24,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1036:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":20,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1028:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1028:7:0","typeDescriptions":{}}},"id":25,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1028:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1007:53:0"},{"assignments":[28],"declarations":[{"constant":false,"id":28,"mutability":"mutable","name":"validUntil","nameLocation":"1077:10:0","nodeType":"VariableDeclaration","scope":67,"src":"1070:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":27,"name":"uint48","nodeType":"ElementaryTypeName","src":"1070:6:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":35,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":33,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":31,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"1097:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313630","id":32,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1115:3:0","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"1097:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":30,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1090:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":29,"name":"uint48","nodeType":"ElementaryTypeName","src":"1090:6:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1090:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1070:49:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":38,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":36,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"1133:10:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":37,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1147:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1133:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":48,"nodeType":"IfStatement","src":"1129:75:0","trueBody":{"id":47,"nodeType":"Block","src":"1150:54:0","statements":[{"expression":{"id":45,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":39,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"1164:10:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":42,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1182:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":41,"name":"uint48","nodeType":"ElementaryTypeName","src":"1182:6:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":40,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1177:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":43,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1177:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":44,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1190:3:0","memberName":"max","nodeType":"MemberAccess","src":"1177:16:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"1164:29:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":46,"nodeType":"ExpressionStatement","src":"1164:29:0"}]}},{"assignments":[50],"declarations":[{"constant":false,"id":50,"mutability":"mutable","name":"validAfter","nameLocation":"1220:10:0","nodeType":"VariableDeclaration","scope":67,"src":"1213:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":49,"name":"uint48","nodeType":"ElementaryTypeName","src":"1213:6:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":60,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":53,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"1240:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":56,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":54,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1259:2:0","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"313630","id":55,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1264:3:0","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"1259:8:0","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":57,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1258:10:0","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"1240:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":52,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1233:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":51,"name":"uint48","nodeType":"ElementaryTypeName","src":"1233:6:0","typeDescriptions":{}}},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1233:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1213:56:0"},{"expression":{"arguments":[{"id":62,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1301:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":63,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":50,"src":"1313:10:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":64,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"1325:10:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":61,"name":"ValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"1286:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ValidationData_$9_storage_ptr_$","typeString":"type(struct ValidationData storage pointer)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1286:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_memory_ptr","typeString":"struct ValidationData memory"}},"functionReturnParameters":16,"id":66,"nodeType":"Return","src":"1279:57:0"}]},"id":68,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_parseValidationData","nameLocation":"913:20:0","nodeType":"FunctionDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"validationData","nameLocation":"939:14:0","nodeType":"VariableDeclaration","scope":68,"src":"934:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10,"name":"uint","nodeType":"ElementaryTypeName","src":"934:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"933:21:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15,"mutability":"mutable","name":"data","nameLocation":"991:4:0","nodeType":"VariableDeclaration","scope":68,"src":"969:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":14,"nodeType":"UserDefinedTypeName","pathNode":{"id":13,"name":"ValidationData","nameLocations":["969:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":9,"src":"969:14:0"},"referencedDeclaration":9,"src":"969:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"968:28:0"},"scope":239,"src":"904:439:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":152,"nodeType":"Block","src":"1515:804:0","statements":[{"assignments":[80],"declarations":[{"constant":false,"id":80,"mutability":"mutable","name":"accountValidationData","nameLocation":"1547:21:0","nodeType":"VariableDeclaration","scope":152,"src":"1525:43:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":79,"nodeType":"UserDefinedTypeName","pathNode":{"id":78,"name":"ValidationData","nameLocations":["1525:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":9,"src":"1525:14:0"},"referencedDeclaration":9,"src":"1525:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"id":84,"initialValue":{"arguments":[{"id":82,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":70,"src":"1592:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":81,"name":"_parseValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"1571:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_ValidationData_$9_memory_ptr_$","typeString":"function (uint256) pure returns (struct ValidationData memory)"}},"id":83,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1571:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_memory_ptr","typeString":"struct ValidationData memory"}},"nodeType":"VariableDeclarationStatement","src":"1525:82:0"},{"assignments":[87],"declarations":[{"constant":false,"id":87,"mutability":"mutable","name":"pmValidationData","nameLocation":"1639:16:0","nodeType":"VariableDeclaration","scope":152,"src":"1617:38:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":86,"nodeType":"UserDefinedTypeName","pathNode":{"id":85,"name":"ValidationData","nameLocations":["1617:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":9,"src":"1617:14:0"},"referencedDeclaration":9,"src":"1617:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"id":91,"initialValue":{"arguments":[{"id":89,"name":"paymasterValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"1679:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":88,"name":"_parseValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"1658:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_ValidationData_$9_memory_ptr_$","typeString":"function (uint256) pure returns (struct ValidationData memory)"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1658:45:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_memory_ptr","typeString":"struct ValidationData memory"}},"nodeType":"VariableDeclarationStatement","src":"1617:86:0"},{"assignments":[93],"declarations":[{"constant":false,"id":93,"mutability":"mutable","name":"aggregator","nameLocation":"1721:10:0","nodeType":"VariableDeclaration","scope":152,"src":"1713:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"1713:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":96,"initialValue":{"expression":{"id":94,"name":"accountValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"1734:21:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_memory_ptr","typeString":"struct ValidationData memory"}},"id":95,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1756:10:0","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":4,"src":"1734:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1713:53:0"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":97,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"1780:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1802:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":99,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1794:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":98,"name":"address","nodeType":"ElementaryTypeName","src":"1794:7:0","typeDescriptions":{}}},"id":101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1794:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1780:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":109,"nodeType":"IfStatement","src":"1776:95:0","trueBody":{"id":108,"nodeType":"Block","src":"1806:65:0","statements":[{"expression":{"id":106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":103,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"1820:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":104,"name":"pmValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87,"src":"1833:16:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_memory_ptr","typeString":"struct ValidationData memory"}},"id":105,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1850:10:0","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":4,"src":"1833:27:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1820:40:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":107,"nodeType":"ExpressionStatement","src":"1820:40:0"}]}},{"assignments":[111],"declarations":[{"constant":false,"id":111,"mutability":"mutable","name":"validAfter","nameLocation":"1887:10:0","nodeType":"VariableDeclaration","scope":152,"src":"1880:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":110,"name":"uint48","nodeType":"ElementaryTypeName","src":"1880:6:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":114,"initialValue":{"expression":{"id":112,"name":"accountValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"1900:21:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_memory_ptr","typeString":"struct ValidationData memory"}},"id":113,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1922:10:0","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":6,"src":"1900:32:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1880:52:0"},{"assignments":[116],"declarations":[{"constant":false,"id":116,"mutability":"mutable","name":"validUntil","nameLocation":"1949:10:0","nodeType":"VariableDeclaration","scope":152,"src":"1942:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":115,"name":"uint48","nodeType":"ElementaryTypeName","src":"1942:6:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":119,"initialValue":{"expression":{"id":117,"name":"accountValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"1962:21:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_memory_ptr","typeString":"struct ValidationData memory"}},"id":118,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1984:10:0","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":8,"src":"1962:32:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1942:52:0"},{"assignments":[121],"declarations":[{"constant":false,"id":121,"mutability":"mutable","name":"pmValidAfter","nameLocation":"2011:12:0","nodeType":"VariableDeclaration","scope":152,"src":"2004:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":120,"name":"uint48","nodeType":"ElementaryTypeName","src":"2004:6:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":124,"initialValue":{"expression":{"id":122,"name":"pmValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87,"src":"2026:16:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_memory_ptr","typeString":"struct ValidationData memory"}},"id":123,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2043:10:0","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":6,"src":"2026:27:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"2004:49:0"},{"assignments":[126],"declarations":[{"constant":false,"id":126,"mutability":"mutable","name":"pmValidUntil","nameLocation":"2070:12:0","nodeType":"VariableDeclaration","scope":152,"src":"2063:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":125,"name":"uint48","nodeType":"ElementaryTypeName","src":"2063:6:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":129,"initialValue":{"expression":{"id":127,"name":"pmValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87,"src":"2085:16:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_memory_ptr","typeString":"struct ValidationData memory"}},"id":128,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2102:10:0","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":8,"src":"2085:27:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"2063:49:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":130,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2127:10:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":131,"name":"pmValidAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"2140:12:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2127:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":137,"nodeType":"IfStatement","src":"2123:56:0","trueBody":{"expression":{"id":135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":133,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2154:10:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":134,"name":"pmValidAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"2167:12:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2154:25:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":136,"nodeType":"ExpressionStatement","src":"2154:25:0"}},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":138,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"2193:10:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":139,"name":"pmValidUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"2206:12:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2193:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":145,"nodeType":"IfStatement","src":"2189:56:0","trueBody":{"expression":{"id":143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":141,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"2220:10:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":142,"name":"pmValidUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"2233:12:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2220:25:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":144,"nodeType":"ExpressionStatement","src":"2220:25:0"}},{"expression":{"arguments":[{"id":147,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"2277:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":148,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2289:10:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":149,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"2301:10:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":146,"name":"ValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"2262:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ValidationData_$9_storage_ptr_$","typeString":"type(struct ValidationData storage pointer)"}},"id":150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2262:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_memory_ptr","typeString":"struct ValidationData memory"}},"functionReturnParameters":77,"id":151,"nodeType":"Return","src":"2255:57:0"}]},"id":153,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_intersectTimeRange","nameLocation":"1401:19:0","nodeType":"FunctionDefinition","parameters":{"id":73,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"validationData","nameLocation":"1429:14:0","nodeType":"VariableDeclaration","scope":153,"src":"1421:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":69,"name":"uint256","nodeType":"ElementaryTypeName","src":"1421:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":72,"mutability":"mutable","name":"paymasterValidationData","nameLocation":"1453:23:0","nodeType":"VariableDeclaration","scope":153,"src":"1445:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":71,"name":"uint256","nodeType":"ElementaryTypeName","src":"1445:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1420:57:0"},"returnParameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":76,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":153,"src":"1492:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":75,"nodeType":"UserDefinedTypeName","pathNode":{"id":74,"name":"ValidationData","nameLocations":["1492:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":9,"src":"1492:14:0"},"referencedDeclaration":9,"src":"1492:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"1491:23:0"},"scope":239,"src":"1392:927:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":189,"nodeType":"Block","src":"2511:127:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":164,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"2536:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_memory_ptr","typeString":"struct ValidationData memory"}},"id":165,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2541:10:0","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":4,"src":"2536:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2528:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":162,"name":"uint160","nodeType":"ElementaryTypeName","src":"2528:7:0","typeDescriptions":{}}},"id":166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2528:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":169,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"2564:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_memory_ptr","typeString":"struct ValidationData memory"}},"id":170,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2569:10:0","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":8,"src":"2564:15:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2556:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":167,"name":"uint256","nodeType":"ElementaryTypeName","src":"2556:7:0","typeDescriptions":{}}},"id":171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2556:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2584:3:0","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"2556:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":174,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2555:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2528:60:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":178,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"2600:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_memory_ptr","typeString":"struct ValidationData memory"}},"id":179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2605:10:0","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":6,"src":"2600:15:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2592:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":176,"name":"uint256","nodeType":"ElementaryTypeName","src":"2592:7:0","typeDescriptions":{}}},"id":180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2592:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313630","id":181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2621:3:0","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3438","id":182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2627:2:0","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"2621:8:0","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":184,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2620:10:0","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"2592:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":186,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2591:40:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2528:103:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":161,"id":188,"nodeType":"Return","src":"2521:110:0"}]},"documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"2321:105:0","text":" helper to pack the return value for validateUserOp\n @param data - the ValidationData to pack"},"id":190,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_packValidationData","nameLocation":"2440:19:0","nodeType":"FunctionDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":157,"mutability":"mutable","name":"data","nameLocation":"2482:4:0","nodeType":"VariableDeclaration","scope":190,"src":"2460:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":156,"nodeType":"UserDefinedTypeName","pathNode":{"id":155,"name":"ValidationData","nameLocations":["2460:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":9,"src":"2460:14:0"},"referencedDeclaration":9,"src":"2460:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"2459:28:0"},"returnParameters":{"id":161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":190,"src":"2502:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":159,"name":"uint256","nodeType":"ElementaryTypeName","src":"2502:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2501:9:0"},"scope":239,"src":"2431:207:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":227,"nodeType":"Block","src":"3062:112:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"condition":{"id":202,"name":"sigFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3080:9:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3096:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3080:17:0","trueExpression":{"hexValue":"31","id":203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3092:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":206,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3079:19:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":209,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"3110:10:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3102:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":207,"name":"uint256","nodeType":"ElementaryTypeName","src":"3102:7:0","typeDescriptions":{}}},"id":210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3102:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3125:3:0","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"3102:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":213,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3101:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3079:50:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":217,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"3141:10:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3133:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":215,"name":"uint256","nodeType":"ElementaryTypeName","src":"3133:7:0","typeDescriptions":{}}},"id":218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3133:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313630","id":219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3157:3:0","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3438","id":220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3163:2:0","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"3157:8:0","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":222,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3156:10:0","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"3133:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":224,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3132:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3079:88:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":201,"id":226,"nodeType":"Return","src":"3072:95:0"}]},"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"2640:311:0","text":" helper to pack the return value for validateUserOp, when not using an aggregator\n @param sigFailed - true for signature failure, false for success\n @param validUntil last timestamp this UserOperation is valid (or zero for infinite)\n @param validAfter first timestamp this UserOperation is valid"},"id":228,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_packValidationData","nameLocation":"2965:19:0","nodeType":"FunctionDefinition","parameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"sigFailed","nameLocation":"2990:9:0","nodeType":"VariableDeclaration","scope":228,"src":"2985:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":192,"name":"bool","nodeType":"ElementaryTypeName","src":"2985:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"validUntil","nameLocation":"3008:10:0","nodeType":"VariableDeclaration","scope":228,"src":"3001:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":194,"name":"uint48","nodeType":"ElementaryTypeName","src":"3001:6:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"validAfter","nameLocation":"3027:10:0","nodeType":"VariableDeclaration","scope":228,"src":"3020:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":196,"name":"uint48","nodeType":"ElementaryTypeName","src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2984:54:0"},"returnParameters":{"id":201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":228,"src":"3053:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":199,"name":"uint256","nodeType":"ElementaryTypeName","src":"3053:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3052:9:0"},"scope":239,"src":"2956:218:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":237,"nodeType":"Block","src":"3429:193:0","statements":[{"AST":{"nativeSrc":"3448:168:0","nodeType":"YulBlock","src":"3448:168:0","statements":[{"nativeSrc":"3462:22:0","nodeType":"YulVariableDeclaration","src":"3462:22:0","value":{"arguments":[{"kind":"number","nativeSrc":"3479:4:0","nodeType":"YulLiteral","src":"3479:4:0","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3473:5:0","nodeType":"YulIdentifier","src":"3473:5:0"},"nativeSrc":"3473:11:0","nodeType":"YulFunctionCall","src":"3473:11:0"},"variables":[{"name":"mem","nativeSrc":"3466:3:0","nodeType":"YulTypedName","src":"3466:3:0","type":""}]},{"nativeSrc":"3497:22:0","nodeType":"YulVariableDeclaration","src":"3497:22:0","value":{"name":"data.length","nativeSrc":"3508:11:0","nodeType":"YulIdentifier","src":"3508:11:0"},"variables":[{"name":"len","nativeSrc":"3501:3:0","nodeType":"YulTypedName","src":"3501:3:0","type":""}]},{"expression":{"arguments":[{"name":"mem","nativeSrc":"3545:3:0","nodeType":"YulIdentifier","src":"3545:3:0"},{"name":"data.offset","nativeSrc":"3550:11:0","nodeType":"YulIdentifier","src":"3550:11:0"},{"name":"len","nativeSrc":"3563:3:0","nodeType":"YulIdentifier","src":"3563:3:0"}],"functionName":{"name":"calldatacopy","nativeSrc":"3532:12:0","nodeType":"YulIdentifier","src":"3532:12:0"},"nativeSrc":"3532:35:0","nodeType":"YulFunctionCall","src":"3532:35:0"},"nativeSrc":"3532:35:0","nodeType":"YulExpressionStatement","src":"3532:35:0"},{"nativeSrc":"3580:26:0","nodeType":"YulAssignment","src":"3580:26:0","value":{"arguments":[{"name":"mem","nativeSrc":"3597:3:0","nodeType":"YulIdentifier","src":"3597:3:0"},{"name":"len","nativeSrc":"3602:3:0","nodeType":"YulIdentifier","src":"3602:3:0"}],"functionName":{"name":"keccak256","nativeSrc":"3587:9:0","nodeType":"YulIdentifier","src":"3587:9:0"},"nativeSrc":"3587:19:0","nodeType":"YulFunctionCall","src":"3587:19:0"},"variableNames":[{"name":"ret","nativeSrc":"3580:3:0","nodeType":"YulIdentifier","src":"3580:3:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":231,"isOffset":false,"isSlot":false,"src":"3508:11:0","suffix":"length","valueSize":1},{"declaration":231,"isOffset":true,"isSlot":false,"src":"3550:11:0","suffix":"offset","valueSize":1},{"declaration":234,"isOffset":false,"isSlot":false,"src":"3580:3:0","valueSize":1}],"id":236,"nodeType":"InlineAssembly","src":"3439:177:0"}]},"documentation":{"id":229,"nodeType":"StructuredDocumentation","src":"3176:176:0","text":" keccak function over calldata.\n @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it."},"id":238,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"calldataKeccak","nameLocation":"3366:14:0","nodeType":"FunctionDefinition","parameters":{"id":232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":231,"mutability":"mutable","name":"data","nameLocation":"3396:4:0","nodeType":"VariableDeclaration","scope":238,"src":"3381:19:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":230,"name":"bytes","nodeType":"ElementaryTypeName","src":"3381:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3380:21:0"},"returnParameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"ret","nameLocation":"3424:3:0","nodeType":"VariableDeclaration","scope":238,"src":"3416:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":233,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3416:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3415:13:0"},"scope":239,"src":"3357:265:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"src":"36:3588:0"},"id":0},"@account-abstraction/contracts/interfaces/IAggregator.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/IAggregator.sol","exportedSymbols":{"IAggregator":[272],"UserOperation":[666],"UserOperationLib":[836],"calldataKeccak":[238]},"id":273,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":240,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"36:24:1"},{"absolutePath":"@account-abstraction/contracts/interfaces/UserOperation.sol","file":"./UserOperation.sol","id":241,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":273,"sourceUnit":837,"src":"62:29:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IAggregator","contractDependencies":[],"contractKind":"interface","documentation":{"id":242,"nodeType":"StructuredDocumentation","src":"93:43:1","text":" Aggregated Signatures validator."},"fullyImplemented":false,"id":272,"linearizedBaseContracts":[272],"name":"IAggregator","nameLocation":"147:11:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":243,"nodeType":"StructuredDocumentation","src":"166:136:1","text":" validate aggregated signature.\n revert if the aggregated signature does not match the given list of operations."},"functionSelector":"e3563a4f","id":252,"implemented":false,"kind":"function","modifiers":[],"name":"validateSignatures","nameLocation":"316:18:1","nodeType":"FunctionDefinition","parameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":247,"mutability":"mutable","name":"userOps","nameLocation":"360:7:1","nodeType":"VariableDeclaration","scope":252,"src":"335:32:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$666_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":245,"nodeType":"UserDefinedTypeName","pathNode":{"id":244,"name":"UserOperation","nameLocations":["335:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":666,"src":"335:13:1"},"referencedDeclaration":666,"src":"335:13:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_storage_ptr","typeString":"struct UserOperation"}},"id":246,"nodeType":"ArrayTypeName","src":"335:15:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$666_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"},{"constant":false,"id":249,"mutability":"mutable","name":"signature","nameLocation":"384:9:1","nodeType":"VariableDeclaration","scope":252,"src":"369:24:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":248,"name":"bytes","nodeType":"ElementaryTypeName","src":"369:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"334:60:1"},"returnParameters":{"id":251,"nodeType":"ParameterList","parameters":[],"src":"408:0:1"},"scope":272,"src":"307:102:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":253,"nodeType":"StructuredDocumentation","src":"415:576:1","text":" validate signature of a single userOp\n This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation\n First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\n @param userOp the userOperation received from the user.\n @return sigForUserOp the value to put into the signature field of the userOp when calling handleOps.\n    (usually empty, unless account and aggregator support some kind of \"multisig\""},"functionSelector":"64c530cd","id":261,"implemented":false,"kind":"function","modifiers":[],"name":"validateUserOpSignature","nameLocation":"1005:23:1","nodeType":"FunctionDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":256,"mutability":"mutable","name":"userOp","nameLocation":"1052:6:1","nodeType":"VariableDeclaration","scope":261,"src":"1029:29:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":255,"nodeType":"UserDefinedTypeName","pathNode":{"id":254,"name":"UserOperation","nameLocations":["1029:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":666,"src":"1029:13:1"},"referencedDeclaration":666,"src":"1029:13:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"1028:31:1"},"returnParameters":{"id":260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"sigForUserOp","nameLocation":"1100:12:1","nodeType":"VariableDeclaration","scope":261,"src":"1087:25:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":258,"name":"bytes","nodeType":"ElementaryTypeName","src":"1087:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1086:27:1"},"scope":272,"src":"996:118:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":262,"nodeType":"StructuredDocumentation","src":"1120:368:1","text":" aggregate multiple signatures into a single value.\n This method is called off-chain to calculate the signature to pass with handleOps()\n bundler MAY use optimized custom code perform this aggregation\n @param userOps array of UserOperations to collect the signatures from.\n @return aggregatedSignature the aggregated signature"},"functionSelector":"275e2d79","id":271,"implemented":false,"kind":"function","modifiers":[],"name":"aggregateSignatures","nameLocation":"1502:19:1","nodeType":"FunctionDefinition","parameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":266,"mutability":"mutable","name":"userOps","nameLocation":"1547:7:1","nodeType":"VariableDeclaration","scope":271,"src":"1522:32:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$666_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":264,"nodeType":"UserDefinedTypeName","pathNode":{"id":263,"name":"UserOperation","nameLocations":["1522:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":666,"src":"1522:13:1"},"referencedDeclaration":666,"src":"1522:13:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_storage_ptr","typeString":"struct UserOperation"}},"id":265,"nodeType":"ArrayTypeName","src":"1522:15:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$666_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"}],"src":"1521:34:1"},"returnParameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"aggregatedSignature","nameLocation":"1592:19:1","nodeType":"VariableDeclaration","scope":271,"src":"1579:32:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":268,"name":"bytes","nodeType":"ElementaryTypeName","src":"1579:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1578:34:1"},"scope":272,"src":"1493:120:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":273,"src":"137:1478:1","usedErrors":[],"usedEvents":[]}],"src":"36:1580:1"},"id":1},"@account-abstraction/contracts/interfaces/IEntryPoint.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/IEntryPoint.sol","exportedSymbols":{"IAggregator":[272],"IEntryPoint":[478],"INonceManager":[497],"IStakeManager":[638],"UserOperation":[666],"UserOperationLib":[836],"calldataKeccak":[238]},"id":479,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":274,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"163:24:2"},{"absolutePath":"@account-abstraction/contracts/interfaces/UserOperation.sol","file":"./UserOperation.sol","id":275,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":479,"sourceUnit":837,"src":"311:29:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/interfaces/IStakeManager.sol","file":"./IStakeManager.sol","id":276,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":479,"sourceUnit":639,"src":"341:29:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/interfaces/IAggregator.sol","file":"./IAggregator.sol","id":277,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":479,"sourceUnit":273,"src":"371:27:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/interfaces/INonceManager.sol","file":"./INonceManager.sol","id":278,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":479,"sourceUnit":498,"src":"399:29:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":279,"name":"IStakeManager","nameLocations":["455:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":638,"src":"455:13:2"},"id":280,"nodeType":"InheritanceSpecifier","src":"455:13:2"},{"baseName":{"id":281,"name":"INonceManager","nameLocations":["470:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":497,"src":"470:13:2"},"id":282,"nodeType":"InheritanceSpecifier","src":"470:13:2"}],"canonicalName":"IEntryPoint","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":478,"linearizedBaseContracts":[478,497,638],"name":"IEntryPoint","nameLocation":"440:11:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f","id":298,"name":"UserOperationEvent","nameLocation":"1191:18:2","nodeType":"EventDefinition","parameters":{"id":297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":284,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"1226:10:2","nodeType":"VariableDeclaration","scope":298,"src":"1210:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":283,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1210:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":286,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1254:6:2","nodeType":"VariableDeclaration","scope":298,"src":"1238:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":285,"name":"address","nodeType":"ElementaryTypeName","src":"1238:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":288,"indexed":true,"mutability":"mutable","name":"paymaster","nameLocation":"1278:9:2","nodeType":"VariableDeclaration","scope":298,"src":"1262:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":287,"name":"address","nodeType":"ElementaryTypeName","src":"1262:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":290,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"1297:5:2","nodeType":"VariableDeclaration","scope":298,"src":"1289:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":289,"name":"uint256","nodeType":"ElementaryTypeName","src":"1289:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":292,"indexed":false,"mutability":"mutable","name":"success","nameLocation":"1309:7:2","nodeType":"VariableDeclaration","scope":298,"src":"1304:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":291,"name":"bool","nodeType":"ElementaryTypeName","src":"1304:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":294,"indexed":false,"mutability":"mutable","name":"actualGasCost","nameLocation":"1326:13:2","nodeType":"VariableDeclaration","scope":298,"src":"1318:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":293,"name":"uint256","nodeType":"ElementaryTypeName","src":"1318:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":296,"indexed":false,"mutability":"mutable","name":"actualGasUsed","nameLocation":"1349:13:2","nodeType":"VariableDeclaration","scope":298,"src":"1341:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":295,"name":"uint256","nodeType":"ElementaryTypeName","src":"1341:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1209:154:2"},"src":"1185:179:2"},{"anonymous":false,"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"1370:333:2","text":" account \"sender\" was deployed.\n @param userOpHash the userOp that deployed this account. UserOperationEvent will follow.\n @param sender the account that is deployed\n @param factory the factory used to deploy this account (in the initCode)\n @param paymaster the paymaster used by this UserOp"},"eventSelector":"d51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d","id":309,"name":"AccountDeployed","nameLocation":"1714:15:2","nodeType":"EventDefinition","parameters":{"id":308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"1746:10:2","nodeType":"VariableDeclaration","scope":309,"src":"1730:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":300,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1730:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":303,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1774:6:2","nodeType":"VariableDeclaration","scope":309,"src":"1758:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":302,"name":"address","nodeType":"ElementaryTypeName","src":"1758:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":305,"indexed":false,"mutability":"mutable","name":"factory","nameLocation":"1790:7:2","nodeType":"VariableDeclaration","scope":309,"src":"1782:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":304,"name":"address","nodeType":"ElementaryTypeName","src":"1782:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":307,"indexed":false,"mutability":"mutable","name":"paymaster","nameLocation":"1807:9:2","nodeType":"VariableDeclaration","scope":309,"src":"1799:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"1799:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1729:88:2"},"src":"1708:110:2"},{"anonymous":false,"documentation":{"id":310,"nodeType":"StructuredDocumentation","src":"1824:337:2","text":" An event emitted if the UserOperation \"callData\" reverted with non-zero length\n @param userOpHash the request unique identifier.\n @param sender the sender of this request\n @param nonce the nonce used in the request\n @param revertReason - the return bytes from the (reverted) call to \"callData\"."},"eventSelector":"1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a201","id":320,"name":"UserOperationRevertReason","nameLocation":"2172:25:2","nodeType":"EventDefinition","parameters":{"id":319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"2214:10:2","nodeType":"VariableDeclaration","scope":320,"src":"2198:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":311,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2198:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":314,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"2242:6:2","nodeType":"VariableDeclaration","scope":320,"src":"2226:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":313,"name":"address","nodeType":"ElementaryTypeName","src":"2226:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":316,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"2258:5:2","nodeType":"VariableDeclaration","scope":320,"src":"2250:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":315,"name":"uint256","nodeType":"ElementaryTypeName","src":"2250:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":318,"indexed":false,"mutability":"mutable","name":"revertReason","nameLocation":"2271:12:2","nodeType":"VariableDeclaration","scope":320,"src":"2265:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":317,"name":"bytes","nodeType":"ElementaryTypeName","src":"2265:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2197:87:2"},"src":"2166:119:2"},{"anonymous":false,"documentation":{"id":321,"nodeType":"StructuredDocumentation","src":"2291:158:2","text":" an event emitted by handleOps(), before starting the execution loop.\n any event emitted before this event, is part of the validation."},"eventSelector":"bb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972","id":323,"name":"BeforeExecution","nameLocation":"2460:15:2","nodeType":"EventDefinition","parameters":{"id":322,"nodeType":"ParameterList","parameters":[],"src":"2475:2:2"},"src":"2454:24:2"},{"anonymous":false,"documentation":{"id":324,"nodeType":"StructuredDocumentation","src":"2484:101:2","text":" signature aggregator used by the following UserOperationEvents within this bundle."},"eventSelector":"575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d","id":328,"name":"SignatureAggregatorChanged","nameLocation":"2596:26:2","nodeType":"EventDefinition","parameters":{"id":327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":326,"indexed":true,"mutability":"mutable","name":"aggregator","nameLocation":"2639:10:2","nodeType":"VariableDeclaration","scope":328,"src":"2623:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":325,"name":"address","nodeType":"ElementaryTypeName","src":"2623:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2622:28:2"},"src":"2590:61:2"},{"documentation":{"id":329,"nodeType":"StructuredDocumentation","src":"2657:756:2","text":" a custom revert error of handleOps, to identify the offending op.\n  NOTE: if simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\n  @param opIndex - index into the array of ops to the failed one (in simulateValidation, this is always zero)\n  @param reason - revert reason\n      The string starts with a unique code \"AAmn\", where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\n      so a failure can be attributed to the correct entity.\n   Should be caught in off-chain handleOps simulation and not happen on-chain.\n   Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts."},"errorSelector":"220266b6","id":335,"name":"FailedOp","nameLocation":"3424:8:2","nodeType":"ErrorDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":331,"mutability":"mutable","name":"opIndex","nameLocation":"3441:7:2","nodeType":"VariableDeclaration","scope":335,"src":"3433:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":330,"name":"uint256","nodeType":"ElementaryTypeName","src":"3433:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":333,"mutability":"mutable","name":"reason","nameLocation":"3457:6:2","nodeType":"VariableDeclaration","scope":335,"src":"3450:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":332,"name":"string","nodeType":"ElementaryTypeName","src":"3450:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3432:32:2"},"src":"3418:47:2"},{"documentation":{"id":336,"nodeType":"StructuredDocumentation","src":"3471:114:2","text":" error case when a signature aggregator fails to verify the aggregated signature it had created."},"errorSelector":"86a9f750","id":340,"name":"SignatureValidationFailed","nameLocation":"3596:25:2","nodeType":"ErrorDefinition","parameters":{"id":339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"mutability":"mutable","name":"aggregator","nameLocation":"3630:10:2","nodeType":"VariableDeclaration","scope":340,"src":"3622:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":337,"name":"address","nodeType":"ElementaryTypeName","src":"3622:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3621:20:2"},"src":"3590:52:2"},{"documentation":{"id":341,"nodeType":"StructuredDocumentation","src":"3648:327:2","text":" Successful result from simulateValidation.\n @param returnInfo gas and time-range returned values\n @param senderInfo stake information about the sender\n @param factoryInfo stake information about the factory (if any)\n @param paymasterInfo stake information about the paymaster (if any)"},"errorSelector":"e0cff05f","id":355,"name":"ValidationResult","nameLocation":"3986:16:2","nodeType":"ErrorDefinition","parameters":{"id":354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"mutability":"mutable","name":"returnInfo","nameLocation":"4014:10:2","nodeType":"VariableDeclaration","scope":355,"src":"4003:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ReturnInfo_$453_memory_ptr","typeString":"struct IEntryPoint.ReturnInfo"},"typeName":{"id":343,"nodeType":"UserDefinedTypeName","pathNode":{"id":342,"name":"ReturnInfo","nameLocations":["4003:10:2"],"nodeType":"IdentifierPath","referencedDeclaration":453,"src":"4003:10:2"},"referencedDeclaration":453,"src":"4003:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_ReturnInfo_$453_storage_ptr","typeString":"struct IEntryPoint.ReturnInfo"}},"visibility":"internal"},{"constant":false,"id":347,"mutability":"mutable","name":"senderInfo","nameLocation":"4044:10:2","nodeType":"VariableDeclaration","scope":355,"src":"4034:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$590_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":346,"nodeType":"UserDefinedTypeName","pathNode":{"id":345,"name":"StakeInfo","nameLocations":["4034:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":590,"src":"4034:9:2"},"referencedDeclaration":590,"src":"4034:9:2","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$590_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"},{"constant":false,"id":350,"mutability":"mutable","name":"factoryInfo","nameLocation":"4066:11:2","nodeType":"VariableDeclaration","scope":355,"src":"4056:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$590_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":349,"nodeType":"UserDefinedTypeName","pathNode":{"id":348,"name":"StakeInfo","nameLocations":["4056:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":590,"src":"4056:9:2"},"referencedDeclaration":590,"src":"4056:9:2","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$590_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"},{"constant":false,"id":353,"mutability":"mutable","name":"paymasterInfo","nameLocation":"4089:13:2","nodeType":"VariableDeclaration","scope":355,"src":"4079:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$590_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":352,"nodeType":"UserDefinedTypeName","pathNode":{"id":351,"name":"StakeInfo","nameLocations":["4079:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":590,"src":"4079:9:2"},"referencedDeclaration":590,"src":"4079:9:2","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$590_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"}],"src":"4002:101:2"},"src":"3980:124:2"},{"documentation":{"id":356,"nodeType":"StructuredDocumentation","src":"4110:561:2","text":" Successful result from simulateValidation, if the account returns a signature aggregator\n @param returnInfo gas and time-range returned values\n @param senderInfo stake information about the sender\n @param factoryInfo stake information about the factory (if any)\n @param paymasterInfo stake information about the paymaster (if any)\n @param aggregatorInfo signature aggregation info (if the account requires signature aggregator)\n      bundler MUST use it to verify the signature, or reject the UserOperation"},"errorSelector":"faecb4e4","id":373,"name":"ValidationResultWithAggregation","nameLocation":"4682:31:2","nodeType":"ErrorDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":359,"mutability":"mutable","name":"returnInfo","nameLocation":"4725:10:2","nodeType":"VariableDeclaration","scope":373,"src":"4714:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ReturnInfo_$453_memory_ptr","typeString":"struct IEntryPoint.ReturnInfo"},"typeName":{"id":358,"nodeType":"UserDefinedTypeName","pathNode":{"id":357,"name":"ReturnInfo","nameLocations":["4714:10:2"],"nodeType":"IdentifierPath","referencedDeclaration":453,"src":"4714:10:2"},"referencedDeclaration":453,"src":"4714:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_ReturnInfo_$453_storage_ptr","typeString":"struct IEntryPoint.ReturnInfo"}},"visibility":"internal"},{"constant":false,"id":362,"mutability":"mutable","name":"senderInfo","nameLocation":"4755:10:2","nodeType":"VariableDeclaration","scope":373,"src":"4745:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$590_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":361,"nodeType":"UserDefinedTypeName","pathNode":{"id":360,"name":"StakeInfo","nameLocations":["4745:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":590,"src":"4745:9:2"},"referencedDeclaration":590,"src":"4745:9:2","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$590_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"},{"constant":false,"id":365,"mutability":"mutable","name":"factoryInfo","nameLocation":"4777:11:2","nodeType":"VariableDeclaration","scope":373,"src":"4767:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$590_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":364,"nodeType":"UserDefinedTypeName","pathNode":{"id":363,"name":"StakeInfo","nameLocations":["4767:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":590,"src":"4767:9:2"},"referencedDeclaration":590,"src":"4767:9:2","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$590_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"},{"constant":false,"id":368,"mutability":"mutable","name":"paymasterInfo","nameLocation":"4800:13:2","nodeType":"VariableDeclaration","scope":373,"src":"4790:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$590_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":367,"nodeType":"UserDefinedTypeName","pathNode":{"id":366,"name":"StakeInfo","nameLocations":["4790:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":590,"src":"4790:9:2"},"referencedDeclaration":590,"src":"4790:9:2","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$590_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"},{"constant":false,"id":371,"mutability":"mutable","name":"aggregatorInfo","nameLocation":"4843:14:2","nodeType":"VariableDeclaration","scope":373,"src":"4823:34:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AggregatorStakeInfo_$460_memory_ptr","typeString":"struct IEntryPoint.AggregatorStakeInfo"},"typeName":{"id":370,"nodeType":"UserDefinedTypeName","pathNode":{"id":369,"name":"AggregatorStakeInfo","nameLocations":["4823:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":460,"src":"4823:19:2"},"referencedDeclaration":460,"src":"4823:19:2","typeDescriptions":{"typeIdentifier":"t_struct$_AggregatorStakeInfo_$460_storage_ptr","typeString":"struct IEntryPoint.AggregatorStakeInfo"}},"visibility":"internal"}],"src":"4713:145:2"},"src":"4676:183:2"},{"documentation":{"id":374,"nodeType":"StructuredDocumentation","src":"4865:51:2","text":" return value of getSenderAddress"},"errorSelector":"6ca7b806","id":378,"name":"SenderAddressResult","nameLocation":"4927:19:2","nodeType":"ErrorDefinition","parameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":376,"mutability":"mutable","name":"sender","nameLocation":"4955:6:2","nodeType":"VariableDeclaration","scope":378,"src":"4947:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"4947:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4946:16:2"},"src":"4921:42:2"},{"documentation":{"id":379,"nodeType":"StructuredDocumentation","src":"4969:51:2","text":" return value of simulateHandleOp"},"errorSelector":"8b7ac980","id":393,"name":"ExecutionResult","nameLocation":"5031:15:2","nodeType":"ErrorDefinition","parameters":{"id":392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":381,"mutability":"mutable","name":"preOpGas","nameLocation":"5055:8:2","nodeType":"VariableDeclaration","scope":393,"src":"5047:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":380,"name":"uint256","nodeType":"ElementaryTypeName","src":"5047:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":383,"mutability":"mutable","name":"paid","nameLocation":"5073:4:2","nodeType":"VariableDeclaration","scope":393,"src":"5065:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":382,"name":"uint256","nodeType":"ElementaryTypeName","src":"5065:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":385,"mutability":"mutable","name":"validAfter","nameLocation":"5086:10:2","nodeType":"VariableDeclaration","scope":393,"src":"5079:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":384,"name":"uint48","nodeType":"ElementaryTypeName","src":"5079:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":387,"mutability":"mutable","name":"validUntil","nameLocation":"5105:10:2","nodeType":"VariableDeclaration","scope":393,"src":"5098:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":386,"name":"uint48","nodeType":"ElementaryTypeName","src":"5098:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":389,"mutability":"mutable","name":"targetSuccess","nameLocation":"5122:13:2","nodeType":"VariableDeclaration","scope":393,"src":"5117:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":388,"name":"bool","nodeType":"ElementaryTypeName","src":"5117:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":391,"mutability":"mutable","name":"targetResult","nameLocation":"5143:12:2","nodeType":"VariableDeclaration","scope":393,"src":"5137:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":390,"name":"bytes","nodeType":"ElementaryTypeName","src":"5137:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5046:110:2"},"src":"5025:132:2"},{"canonicalName":"IEntryPoint.UserOpsPerAggregator","id":403,"members":[{"constant":false,"id":397,"mutability":"mutable","name":"userOps","nameLocation":"5255:7:2","nodeType":"VariableDeclaration","scope":403,"src":"5239:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$666_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":395,"nodeType":"UserDefinedTypeName","pathNode":{"id":394,"name":"UserOperation","nameLocations":["5239:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":666,"src":"5239:13:2"},"referencedDeclaration":666,"src":"5239:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_storage_ptr","typeString":"struct UserOperation"}},"id":396,"nodeType":"ArrayTypeName","src":"5239:15:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$666_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"},{"constant":false,"id":400,"mutability":"mutable","name":"aggregator","nameLocation":"5315:10:2","nodeType":"VariableDeclaration","scope":403,"src":"5303:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$272","typeString":"contract IAggregator"},"typeName":{"id":399,"nodeType":"UserDefinedTypeName","pathNode":{"id":398,"name":"IAggregator","nameLocations":["5303:11:2"],"nodeType":"IdentifierPath","referencedDeclaration":272,"src":"5303:11:2"},"referencedDeclaration":272,"src":"5303:11:2","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$272","typeString":"contract IAggregator"}},"visibility":"internal"},{"constant":false,"id":402,"mutability":"mutable","name":"signature","nameLocation":"5373:9:2","nodeType":"VariableDeclaration","scope":403,"src":"5367:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":401,"name":"bytes","nodeType":"ElementaryTypeName","src":"5367:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"UserOpsPerAggregator","nameLocation":"5208:20:2","nodeType":"StructDefinition","scope":478,"src":"5201:188:2","visibility":"public"},{"documentation":{"id":404,"nodeType":"StructuredDocumentation","src":"5395:368:2","text":" Execute a batch of UserOperation.\n no signature aggregator is used.\n if any account requires an aggregator (that is, it returned an aggregator when\n performing simulateValidation), then handleAggregatedOps() must be used instead.\n @param ops the operations to execute\n @param beneficiary the address to receive the fees"},"functionSelector":"1fad948c","id":413,"implemented":false,"kind":"function","modifiers":[],"name":"handleOps","nameLocation":"5777:9:2","nodeType":"FunctionDefinition","parameters":{"id":411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":408,"mutability":"mutable","name":"ops","nameLocation":"5812:3:2","nodeType":"VariableDeclaration","scope":413,"src":"5787:28:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$666_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":406,"nodeType":"UserDefinedTypeName","pathNode":{"id":405,"name":"UserOperation","nameLocations":["5787:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":666,"src":"5787:13:2"},"referencedDeclaration":666,"src":"5787:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_storage_ptr","typeString":"struct UserOperation"}},"id":407,"nodeType":"ArrayTypeName","src":"5787:15:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$666_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"},{"constant":false,"id":410,"mutability":"mutable","name":"beneficiary","nameLocation":"5833:11:2","nodeType":"VariableDeclaration","scope":413,"src":"5817:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":409,"name":"address","nodeType":"ElementaryTypeName","src":"5817:15:2","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"5786:59:2"},"returnParameters":{"id":412,"nodeType":"ParameterList","parameters":[],"src":"5854:0:2"},"scope":478,"src":"5768:87:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":414,"nodeType":"StructuredDocumentation","src":"5861:249:2","text":" Execute a batch of UserOperation with Aggregators\n @param opsPerAggregator the operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)\n @param beneficiary the address to receive the fees"},"functionSelector":"4b1d7cf5","id":423,"implemented":false,"kind":"function","modifiers":[],"name":"handleAggregatedOps","nameLocation":"6124:19:2","nodeType":"FunctionDefinition","parameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"opsPerAggregator","nameLocation":"6185:16:2","nodeType":"VariableDeclaration","scope":423,"src":"6153:48:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$403_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"},"typeName":{"baseType":{"id":416,"nodeType":"UserDefinedTypeName","pathNode":{"id":415,"name":"UserOpsPerAggregator","nameLocations":["6153:20:2"],"nodeType":"IdentifierPath","referencedDeclaration":403,"src":"6153:20:2"},"referencedDeclaration":403,"src":"6153:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$403_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator"}},"id":417,"nodeType":"ArrayTypeName","src":"6153:22:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$403_storage_$dyn_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"}},"visibility":"internal"},{"constant":false,"id":420,"mutability":"mutable","name":"beneficiary","nameLocation":"6227:11:2","nodeType":"VariableDeclaration","scope":423,"src":"6211:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":419,"name":"address","nodeType":"ElementaryTypeName","src":"6211:15:2","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"6143:101:2"},"returnParameters":{"id":422,"nodeType":"ParameterList","parameters":[],"src":"6253:0:2"},"scope":478,"src":"6115:139:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":424,"nodeType":"StructuredDocumentation","src":"6260:197:2","text":" generate a request Id - unique identifier for this request.\n the request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid."},"functionSelector":"a6193531","id":432,"implemented":false,"kind":"function","modifiers":[],"name":"getUserOpHash","nameLocation":"6471:13:2","nodeType":"FunctionDefinition","parameters":{"id":428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":427,"mutability":"mutable","name":"userOp","nameLocation":"6508:6:2","nodeType":"VariableDeclaration","scope":432,"src":"6485:29:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":426,"nodeType":"UserDefinedTypeName","pathNode":{"id":425,"name":"UserOperation","nameLocations":["6485:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":666,"src":"6485:13:2"},"referencedDeclaration":666,"src":"6485:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"6484:31:2"},"returnParameters":{"id":431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":432,"src":"6539:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":429,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6539:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6538:9:2"},"scope":478,"src":"6462:86:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":433,"nodeType":"StructuredDocumentation","src":"6554:398:2","text":" Simulate a call to account.validateUserOp and paymaster.validatePaymasterUserOp.\n @dev this method always revert. Successful result is ValidationResult error. other errors are failures.\n @dev The node must also verify it doesn't use banned opcodes, and that it doesn't reference storage outside the account's data.\n @param userOp the user operation to validate."},"functionSelector":"ee219423","id":439,"implemented":false,"kind":"function","modifiers":[],"name":"simulateValidation","nameLocation":"6966:18:2","nodeType":"FunctionDefinition","parameters":{"id":437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":436,"mutability":"mutable","name":"userOp","nameLocation":"7008:6:2","nodeType":"VariableDeclaration","scope":439,"src":"6985:29:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":435,"nodeType":"UserDefinedTypeName","pathNode":{"id":434,"name":"UserOperation","nameLocations":["6985:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":666,"src":"6985:13:2"},"referencedDeclaration":666,"src":"6985:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"6984:31:2"},"returnParameters":{"id":438,"nodeType":"ParameterList","parameters":[],"src":"7024:0:2"},"scope":478,"src":"6957:68:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"canonicalName":"IEntryPoint.ReturnInfo","documentation":{"id":440,"nodeType":"StructuredDocumentation","src":"7031:588:2","text":" gas and return values during simulation\n @param preOpGas the gas used for validation (including preValidationGas)\n @param prefund the required prefund for this operation\n @param sigFailed validateUserOp's (or paymaster's) signature check failed\n @param validAfter - first timestamp this UserOp is valid (merging account and paymaster time-range)\n @param validUntil - last timestamp this UserOp is valid (merging account and paymaster time-range)\n @param paymasterContext returned by validatePaymasterUserOp (to be passed into postOp)"},"id":453,"members":[{"constant":false,"id":442,"mutability":"mutable","name":"preOpGas","nameLocation":"7660:8:2","nodeType":"VariableDeclaration","scope":453,"src":"7652:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":441,"name":"uint256","nodeType":"ElementaryTypeName","src":"7652:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":444,"mutability":"mutable","name":"prefund","nameLocation":"7686:7:2","nodeType":"VariableDeclaration","scope":453,"src":"7678:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":443,"name":"uint256","nodeType":"ElementaryTypeName","src":"7678:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":446,"mutability":"mutable","name":"sigFailed","nameLocation":"7708:9:2","nodeType":"VariableDeclaration","scope":453,"src":"7703:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":445,"name":"bool","nodeType":"ElementaryTypeName","src":"7703:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":448,"mutability":"mutable","name":"validAfter","nameLocation":"7734:10:2","nodeType":"VariableDeclaration","scope":453,"src":"7727:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":447,"name":"uint48","nodeType":"ElementaryTypeName","src":"7727:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":450,"mutability":"mutable","name":"validUntil","nameLocation":"7761:10:2","nodeType":"VariableDeclaration","scope":453,"src":"7754:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":449,"name":"uint48","nodeType":"ElementaryTypeName","src":"7754:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":452,"mutability":"mutable","name":"paymasterContext","nameLocation":"7787:16:2","nodeType":"VariableDeclaration","scope":453,"src":"7781:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":451,"name":"bytes","nodeType":"ElementaryTypeName","src":"7781:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"ReturnInfo","nameLocation":"7631:10:2","nodeType":"StructDefinition","scope":478,"src":"7624:186:2","visibility":"public"},{"canonicalName":"IEntryPoint.AggregatorStakeInfo","documentation":{"id":454,"nodeType":"StructuredDocumentation","src":"7816:124:2","text":" returned aggregated signature info.\n the aggregator returned by the account, and its current stake."},"id":460,"members":[{"constant":false,"id":456,"mutability":"mutable","name":"aggregator","nameLocation":"7990:10:2","nodeType":"VariableDeclaration","scope":460,"src":"7982:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":455,"name":"address","nodeType":"ElementaryTypeName","src":"7982:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":459,"mutability":"mutable","name":"stakeInfo","nameLocation":"8020:9:2","nodeType":"VariableDeclaration","scope":460,"src":"8010:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$590_storage_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":458,"nodeType":"UserDefinedTypeName","pathNode":{"id":457,"name":"StakeInfo","nameLocations":["8010:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":590,"src":"8010:9:2"},"referencedDeclaration":590,"src":"8010:9:2","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$590_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"}],"name":"AggregatorStakeInfo","nameLocation":"7952:19:2","nodeType":"StructDefinition","scope":478,"src":"7945:91:2","visibility":"public"},{"documentation":{"id":461,"nodeType":"StructuredDocumentation","src":"8042:337:2","text":" Get counterfactual sender address.\n  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\n this method always revert, and returns the address in SenderAddressResult error\n @param initCode the constructor code to be passed into the UserOperation."},"functionSelector":"9b249f69","id":466,"implemented":false,"kind":"function","modifiers":[],"name":"getSenderAddress","nameLocation":"8393:16:2","nodeType":"FunctionDefinition","parameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":463,"mutability":"mutable","name":"initCode","nameLocation":"8423:8:2","nodeType":"VariableDeclaration","scope":466,"src":"8410:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":462,"name":"bytes","nodeType":"ElementaryTypeName","src":"8410:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8409:23:2"},"returnParameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"8441:0:2"},"scope":478,"src":"8384:58:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":467,"nodeType":"StructuredDocumentation","src":"8449:847:2","text":" simulate full execution of a UserOperation (including both validation and target execution)\n this method will always revert with \"ExecutionResult\".\n it performs full validation of the UserOperation, but ignores signature error.\n an optional target address is called after the userop succeeds, and its value is returned\n (before the entire call is reverted)\n Note that in order to collect the the success/failure of the target call, it must be executed\n with trace enabled to track the emitted events.\n @param op the UserOperation to simulate\n @param target if nonzero, a target address to call after userop simulation. If called, the targetSuccess and targetResult\n        are set to the return from that call.\n @param targetCallData callData to pass to target address"},"functionSelector":"d6383f94","id":477,"implemented":false,"kind":"function","modifiers":[],"name":"simulateHandleOp","nameLocation":"9310:16:2","nodeType":"FunctionDefinition","parameters":{"id":475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":470,"mutability":"mutable","name":"op","nameLocation":"9350:2:2","nodeType":"VariableDeclaration","scope":477,"src":"9327:25:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":469,"nodeType":"UserDefinedTypeName","pathNode":{"id":468,"name":"UserOperation","nameLocations":["9327:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":666,"src":"9327:13:2"},"referencedDeclaration":666,"src":"9327:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":472,"mutability":"mutable","name":"target","nameLocation":"9362:6:2","nodeType":"VariableDeclaration","scope":477,"src":"9354:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":471,"name":"address","nodeType":"ElementaryTypeName","src":"9354:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":474,"mutability":"mutable","name":"targetCallData","nameLocation":"9385:14:2","nodeType":"VariableDeclaration","scope":477,"src":"9370:29:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":473,"name":"bytes","nodeType":"ElementaryTypeName","src":"9370:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9326:74:2"},"returnParameters":{"id":476,"nodeType":"ParameterList","parameters":[],"src":"9409:0:2"},"scope":478,"src":"9301:109:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":479,"src":"430:8982:2","usedErrors":[335,340,355,373,378,393],"usedEvents":[298,309,320,323,328,541,549,558,565,573]}],"src":"163:9251:2"},"id":2},"@account-abstraction/contracts/interfaces/INonceManager.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/INonceManager.sol","exportedSymbols":{"INonceManager":[497]},"id":498,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":480,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"36:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"INonceManager","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":497,"linearizedBaseContracts":[497],"name":"INonceManager","nameLocation":"72:13:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"93:416:3","text":" Return the next nonce for this sender.\n Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\n But UserOp with different keys can come with arbitrary order.\n @param sender the account address\n @param key the high 192 bit of the nonce\n @return nonce a full nonce to pass for next UserOp with this sender."},"functionSelector":"35567e1a","id":490,"implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"523:8:3","nodeType":"FunctionDefinition","parameters":{"id":486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":483,"mutability":"mutable","name":"sender","nameLocation":"540:6:3","nodeType":"VariableDeclaration","scope":490,"src":"532:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"532:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":485,"mutability":"mutable","name":"key","nameLocation":"556:3:3","nodeType":"VariableDeclaration","scope":490,"src":"548:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":484,"name":"uint192","nodeType":"ElementaryTypeName","src":"548:7:3","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"531:29:3"},"returnParameters":{"id":489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":488,"mutability":"mutable","name":"nonce","nameLocation":"596:5:3","nodeType":"VariableDeclaration","scope":490,"src":"588:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":487,"name":"uint256","nodeType":"ElementaryTypeName","src":"588:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"587:15:3"},"scope":497,"src":"514:89:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":491,"nodeType":"StructuredDocumentation","src":"609:449:3","text":" Manually increment the nonce of the sender.\n This method is exposed just for completeness..\n Account does NOT need to call it, neither during validation, nor elsewhere,\n as the EntryPoint will update the nonce regardless.\n Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\n UserOperations will not pay extra for the first transaction with a given key."},"functionSelector":"0bd28e3b","id":496,"implemented":false,"kind":"function","modifiers":[],"name":"incrementNonce","nameLocation":"1072:14:3","nodeType":"FunctionDefinition","parameters":{"id":494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"key","nameLocation":"1095:3:3","nodeType":"VariableDeclaration","scope":496,"src":"1087:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":492,"name":"uint192","nodeType":"ElementaryTypeName","src":"1087:7:3","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"1086:13:3"},"returnParameters":{"id":495,"nodeType":"ParameterList","parameters":[],"src":"1108:0:3"},"scope":497,"src":"1063:46:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":498,"src":"62:1049:3","usedErrors":[],"usedEvents":[]}],"src":"36:1076:3"},"id":3},"@account-abstraction/contracts/interfaces/IPaymaster.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/IPaymaster.sol","exportedSymbols":{"IPaymaster":[532],"UserOperation":[666],"UserOperationLib":[836],"calldataKeccak":[238]},"id":533,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":499,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"36:24:4"},{"absolutePath":"@account-abstraction/contracts/interfaces/UserOperation.sol","file":"./UserOperation.sol","id":500,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":533,"sourceUnit":837,"src":"62:29:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IPaymaster","contractDependencies":[],"contractKind":"interface","documentation":{"id":501,"nodeType":"StructuredDocumentation","src":"93:216:4","text":" the interface exposed by a paymaster contract, who agrees to pay the gas for user's operations.\n a paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction."},"fullyImplemented":false,"id":532,"linearizedBaseContracts":[532],"name":"IPaymaster","nameLocation":"320:10:4","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IPaymaster.PostOpMode","id":505,"members":[{"id":502,"name":"opSucceeded","nameLocation":"364:11:4","nodeType":"EnumValue","src":"364:11:4"},{"id":503,"name":"opReverted","nameLocation":"406:10:4","nodeType":"EnumValue","src":"406:10:4"},{"id":504,"name":"postOpReverted","nameLocation":"473:14:4","nodeType":"EnumValue","src":"473:14:4"}],"name":"PostOpMode","nameLocation":"343:10:4","nodeType":"EnumDefinition","src":"338:269:4"},{"documentation":{"id":506,"nodeType":"StructuredDocumentation","src":"613:1254:4","text":" payment validation: check if paymaster agrees to pay.\n Must verify sender is the entryPoint.\n Revert to reject this request.\n Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted)\n The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\n @param userOp the user operation\n @param userOpHash hash of the user's request data.\n @param maxCost the maximum cost of this transaction (based on maximum gas and gas price from userOp)\n @return context value to send to a postOp\n      zero length to signify postOp is not required.\n @return validationData signature and time-range of this operation, encoded the same as the return value of validateUserOperation\n      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n         otherwise, an address of an \"authorizer\" contract.\n      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n      <6-byte> validAfter - first timestamp this operation is valid\n      Note that the validation code cannot use block.timestamp (or block.number) directly."},"functionSelector":"f465c77e","id":520,"implemented":false,"kind":"function","modifiers":[],"name":"validatePaymasterUserOp","nameLocation":"1881:23:4","nodeType":"FunctionDefinition","parameters":{"id":514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":509,"mutability":"mutable","name":"userOp","nameLocation":"1928:6:4","nodeType":"VariableDeclaration","scope":520,"src":"1905:29:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":508,"nodeType":"UserDefinedTypeName","pathNode":{"id":507,"name":"UserOperation","nameLocations":["1905:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":666,"src":"1905:13:4"},"referencedDeclaration":666,"src":"1905:13:4","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":511,"mutability":"mutable","name":"userOpHash","nameLocation":"1944:10:4","nodeType":"VariableDeclaration","scope":520,"src":"1936:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":510,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1936:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":513,"mutability":"mutable","name":"maxCost","nameLocation":"1964:7:4","nodeType":"VariableDeclaration","scope":520,"src":"1956:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":512,"name":"uint256","nodeType":"ElementaryTypeName","src":"1956:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1904:68:4"},"returnParameters":{"id":519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":516,"mutability":"mutable","name":"context","nameLocation":"2008:7:4","nodeType":"VariableDeclaration","scope":520,"src":"1995:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":515,"name":"bytes","nodeType":"ElementaryTypeName","src":"1995:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":518,"mutability":"mutable","name":"validationData","nameLocation":"2025:14:4","nodeType":"VariableDeclaration","scope":520,"src":"2017:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":517,"name":"uint256","nodeType":"ElementaryTypeName","src":"2017:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1994:46:4"},"scope":532,"src":"1872:169:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":521,"nodeType":"StructuredDocumentation","src":"2047:616:4","text":" post-operation handler.\n Must verify sender is the entryPoint\n @param mode enum with the following options:\n      opSucceeded - user operation succeeded.\n      opReverted  - user op reverted. still has to pay for gas.\n      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.\n                       Now this is the 2nd call, after user's op was deliberately reverted.\n @param context - the context value returned by validatePaymasterUserOp\n @param actualGasCost - actual gas used so far (without this postOp call)."},"functionSelector":"a9a23409","id":531,"implemented":false,"kind":"function","modifiers":[],"name":"postOp","nameLocation":"2677:6:4","nodeType":"FunctionDefinition","parameters":{"id":529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":524,"mutability":"mutable","name":"mode","nameLocation":"2695:4:4","nodeType":"VariableDeclaration","scope":531,"src":"2684:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$505","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":523,"nodeType":"UserDefinedTypeName","pathNode":{"id":522,"name":"PostOpMode","nameLocations":["2684:10:4"],"nodeType":"IdentifierPath","referencedDeclaration":505,"src":"2684:10:4"},"referencedDeclaration":505,"src":"2684:10:4","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$505","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":526,"mutability":"mutable","name":"context","nameLocation":"2716:7:4","nodeType":"VariableDeclaration","scope":531,"src":"2701:22:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":525,"name":"bytes","nodeType":"ElementaryTypeName","src":"2701:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":528,"mutability":"mutable","name":"actualGasCost","nameLocation":"2733:13:4","nodeType":"VariableDeclaration","scope":531,"src":"2725:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":527,"name":"uint256","nodeType":"ElementaryTypeName","src":"2725:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2683:64:4"},"returnParameters":{"id":530,"nodeType":"ParameterList","parameters":[],"src":"2756:0:4"},"scope":532,"src":"2668:89:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":533,"src":"310:2449:4","usedErrors":[],"usedEvents":[]}],"src":"36:2724:4"},"id":4},"@account-abstraction/contracts/interfaces/IStakeManager.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/IStakeManager.sol","exportedSymbols":{"IStakeManager":[638]},"id":639,"license":"GPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":534,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"41:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IStakeManager","contractDependencies":[],"contractKind":"interface","documentation":{"id":535,"nodeType":"StructuredDocumentation","src":"67:211:5","text":" manage deposits and stakes.\n deposit is just a balance used to pay for UserOperations (either by a paymaster or an account)\n stake is value locked for at least \"unstakeDelay\" by the staked entity."},"fullyImplemented":false,"id":638,"linearizedBaseContracts":[638],"name":"IStakeManager","nameLocation":"289:13:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4","id":541,"name":"Deposited","nameLocation":"316:9:5","nodeType":"EventDefinition","parameters":{"id":540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":537,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"351:7:5","nodeType":"VariableDeclaration","scope":541,"src":"335:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":536,"name":"address","nodeType":"ElementaryTypeName","src":"335:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":539,"indexed":false,"mutability":"mutable","name":"totalDeposit","nameLocation":"376:12:5","nodeType":"VariableDeclaration","scope":541,"src":"368:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":538,"name":"uint256","nodeType":"ElementaryTypeName","src":"368:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"325:69:5"},"src":"310:85:5"},{"anonymous":false,"eventSelector":"d1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb","id":549,"name":"Withdrawn","nameLocation":"407:9:5","nodeType":"EventDefinition","parameters":{"id":548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":543,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"442:7:5","nodeType":"VariableDeclaration","scope":549,"src":"426:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":542,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":545,"indexed":false,"mutability":"mutable","name":"withdrawAddress","nameLocation":"467:15:5","nodeType":"VariableDeclaration","scope":549,"src":"459:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":544,"name":"address","nodeType":"ElementaryTypeName","src":"459:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":547,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"500:6:5","nodeType":"VariableDeclaration","scope":549,"src":"492:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":546,"name":"uint256","nodeType":"ElementaryTypeName","src":"492:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"416:96:5"},"src":"401:112:5"},{"anonymous":false,"documentation":{"id":550,"nodeType":"StructuredDocumentation","src":"519:52:5","text":"Emitted when stake or unstake delay are modified"},"eventSelector":"a5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01","id":558,"name":"StakeLocked","nameLocation":"582:11:5","nodeType":"EventDefinition","parameters":{"id":557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":552,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"619:7:5","nodeType":"VariableDeclaration","scope":558,"src":"603:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":551,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":554,"indexed":false,"mutability":"mutable","name":"totalStaked","nameLocation":"644:11:5","nodeType":"VariableDeclaration","scope":558,"src":"636:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":553,"name":"uint256","nodeType":"ElementaryTypeName","src":"636:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":556,"indexed":false,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"673:15:5","nodeType":"VariableDeclaration","scope":558,"src":"665:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":555,"name":"uint256","nodeType":"ElementaryTypeName","src":"665:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"593:101:5"},"src":"576:119:5"},{"anonymous":false,"documentation":{"id":559,"nodeType":"StructuredDocumentation","src":"701:52:5","text":"Emitted once a stake is scheduled for withdrawal"},"eventSelector":"fa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a","id":565,"name":"StakeUnlocked","nameLocation":"764:13:5","nodeType":"EventDefinition","parameters":{"id":564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":561,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"803:7:5","nodeType":"VariableDeclaration","scope":565,"src":"787:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":560,"name":"address","nodeType":"ElementaryTypeName","src":"787:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":563,"indexed":false,"mutability":"mutable","name":"withdrawTime","nameLocation":"828:12:5","nodeType":"VariableDeclaration","scope":565,"src":"820:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":562,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"777:69:5"},"src":"758:89:5"},{"anonymous":false,"eventSelector":"b7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3","id":573,"name":"StakeWithdrawn","nameLocation":"859:14:5","nodeType":"EventDefinition","parameters":{"id":572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":567,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"899:7:5","nodeType":"VariableDeclaration","scope":573,"src":"883:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"883:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":569,"indexed":false,"mutability":"mutable","name":"withdrawAddress","nameLocation":"924:15:5","nodeType":"VariableDeclaration","scope":573,"src":"916:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":568,"name":"address","nodeType":"ElementaryTypeName","src":"916:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":571,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"957:6:5","nodeType":"VariableDeclaration","scope":573,"src":"949:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":570,"name":"uint256","nodeType":"ElementaryTypeName","src":"949:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"873:96:5"},"src":"853:117:5"},{"canonicalName":"IStakeManager.DepositInfo","documentation":{"id":574,"nodeType":"StructuredDocumentation","src":"976:632:5","text":" @param deposit the entity's deposit\n @param staked true if this entity is staked.\n @param stake actual amount of ether staked for this entity.\n @param unstakeDelaySec minimum delay to withdraw the stake.\n @param withdrawTime - first block timestamp where 'withdrawStake' will be callable, or zero if already locked\n @dev sizes were chosen so that (deposit,staked, stake) fit into one cell (used during handleOps)\n    and the rest fit into a 2nd cell.\n    112 bit allows for 10^15 eth\n    48 bit for full timestamp\n    32 bit allows 150 years for unstake delay"},"id":585,"members":[{"constant":false,"id":576,"mutability":"mutable","name":"deposit","nameLocation":"1650:7:5","nodeType":"VariableDeclaration","scope":585,"src":"1642:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":575,"name":"uint112","nodeType":"ElementaryTypeName","src":"1642:7:5","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":578,"mutability":"mutable","name":"staked","nameLocation":"1672:6:5","nodeType":"VariableDeclaration","scope":585,"src":"1667:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":577,"name":"bool","nodeType":"ElementaryTypeName","src":"1667:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":580,"mutability":"mutable","name":"stake","nameLocation":"1696:5:5","nodeType":"VariableDeclaration","scope":585,"src":"1688:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":579,"name":"uint112","nodeType":"ElementaryTypeName","src":"1688:7:5","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":582,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"1718:15:5","nodeType":"VariableDeclaration","scope":585,"src":"1711:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":581,"name":"uint32","nodeType":"ElementaryTypeName","src":"1711:6:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":584,"mutability":"mutable","name":"withdrawTime","nameLocation":"1750:12:5","nodeType":"VariableDeclaration","scope":585,"src":"1743:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":583,"name":"uint48","nodeType":"ElementaryTypeName","src":"1743:6:5","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"DepositInfo","nameLocation":"1620:11:5","nodeType":"StructDefinition","scope":638,"src":"1613:156:5","visibility":"public"},{"canonicalName":"IStakeManager.StakeInfo","id":590,"members":[{"constant":false,"id":587,"mutability":"mutable","name":"stake","nameLocation":"1871:5:5","nodeType":"VariableDeclaration","scope":590,"src":"1863:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":586,"name":"uint256","nodeType":"ElementaryTypeName","src":"1863:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":589,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"1894:15:5","nodeType":"VariableDeclaration","scope":590,"src":"1886:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":588,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"StakeInfo","nameLocation":"1843:9:5","nodeType":"StructDefinition","scope":638,"src":"1836:80:5","visibility":"public"},{"documentation":{"id":591,"nodeType":"StructuredDocumentation","src":"1922:60:5","text":"@return info - full deposit information of given account"},"functionSelector":"5287ce12","id":599,"implemented":false,"kind":"function","modifiers":[],"name":"getDepositInfo","nameLocation":"1996:14:5","nodeType":"FunctionDefinition","parameters":{"id":594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":593,"mutability":"mutable","name":"account","nameLocation":"2019:7:5","nodeType":"VariableDeclaration","scope":599,"src":"2011:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"2011:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2010:17:5"},"returnParameters":{"id":598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":597,"mutability":"mutable","name":"info","nameLocation":"2070:4:5","nodeType":"VariableDeclaration","scope":599,"src":"2051:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$585_memory_ptr","typeString":"struct IStakeManager.DepositInfo"},"typeName":{"id":596,"nodeType":"UserDefinedTypeName","pathNode":{"id":595,"name":"DepositInfo","nameLocations":["2051:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":585,"src":"2051:11:5"},"referencedDeclaration":585,"src":"2051:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$585_storage_ptr","typeString":"struct IStakeManager.DepositInfo"}},"visibility":"internal"}],"src":"2050:25:5"},"scope":638,"src":"1987:89:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":600,"nodeType":"StructuredDocumentation","src":"2082:56:5","text":"@return the deposit (for gas payment) of the account"},"functionSelector":"70a08231","id":607,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2152:9:5","nodeType":"FunctionDefinition","parameters":{"id":603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":602,"mutability":"mutable","name":"account","nameLocation":"2170:7:5","nodeType":"VariableDeclaration","scope":607,"src":"2162:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":601,"name":"address","nodeType":"ElementaryTypeName","src":"2162:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2161:17:5"},"returnParameters":{"id":606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":607,"src":"2202:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":604,"name":"uint256","nodeType":"ElementaryTypeName","src":"2202:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2201:9:5"},"scope":638,"src":"2143:68:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":608,"nodeType":"StructuredDocumentation","src":"2217:58:5","text":" add to the deposit of the given account"},"functionSelector":"b760faf9","id":613,"implemented":false,"kind":"function","modifiers":[],"name":"depositTo","nameLocation":"2289:9:5","nodeType":"FunctionDefinition","parameters":{"id":611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":610,"mutability":"mutable","name":"account","nameLocation":"2307:7:5","nodeType":"VariableDeclaration","scope":613,"src":"2299:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":609,"name":"address","nodeType":"ElementaryTypeName","src":"2299:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2298:17:5"},"returnParameters":{"id":612,"nodeType":"ParameterList","parameters":[],"src":"2332:0:5"},"scope":638,"src":"2280:53:5","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":614,"nodeType":"StructuredDocumentation","src":"2339:201:5","text":" add to the account's stake - amount and delay\n any pending unstake is first cancelled.\n @param _unstakeDelaySec the new lock duration before the deposit can be withdrawn."},"functionSelector":"0396cb60","id":619,"implemented":false,"kind":"function","modifiers":[],"name":"addStake","nameLocation":"2554:8:5","nodeType":"FunctionDefinition","parameters":{"id":617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":616,"mutability":"mutable","name":"_unstakeDelaySec","nameLocation":"2570:16:5","nodeType":"VariableDeclaration","scope":619,"src":"2563:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":615,"name":"uint32","nodeType":"ElementaryTypeName","src":"2563:6:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2562:25:5"},"returnParameters":{"id":618,"nodeType":"ParameterList","parameters":[],"src":"2604:0:5"},"scope":638,"src":"2545:60:5","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":620,"nodeType":"StructuredDocumentation","src":"2611:128:5","text":" attempt to unlock the stake.\n the value can be withdrawn (using withdrawStake) after the unstake delay."},"functionSelector":"bb9fe6bf","id":623,"implemented":false,"kind":"function","modifiers":[],"name":"unlockStake","nameLocation":"2753:11:5","nodeType":"FunctionDefinition","parameters":{"id":621,"nodeType":"ParameterList","parameters":[],"src":"2764:2:5"},"returnParameters":{"id":622,"nodeType":"ParameterList","parameters":[],"src":"2775:0:5"},"scope":638,"src":"2744:32:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":624,"nodeType":"StructuredDocumentation","src":"2782:194:5","text":" withdraw from the (unlocked) stake.\n must first call unlockStake and wait for the unstakeDelay to pass\n @param withdrawAddress the address to send withdrawn value."},"functionSelector":"c23a5cea","id":629,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawStake","nameLocation":"2990:13:5","nodeType":"FunctionDefinition","parameters":{"id":627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":626,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3020:15:5","nodeType":"VariableDeclaration","scope":629,"src":"3004:31:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":625,"name":"address","nodeType":"ElementaryTypeName","src":"3004:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"3003:33:5"},"returnParameters":{"id":628,"nodeType":"ParameterList","parameters":[],"src":"3045:0:5"},"scope":638,"src":"2981:65:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":630,"nodeType":"StructuredDocumentation","src":"3052:165:5","text":" withdraw from the deposit.\n @param withdrawAddress the address to send withdrawn value.\n @param withdrawAmount the amount to withdraw."},"functionSelector":"205c2878","id":637,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawTo","nameLocation":"3231:10:5","nodeType":"FunctionDefinition","parameters":{"id":635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":632,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3258:15:5","nodeType":"VariableDeclaration","scope":637,"src":"3242:31:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":631,"name":"address","nodeType":"ElementaryTypeName","src":"3242:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":634,"mutability":"mutable","name":"withdrawAmount","nameLocation":"3283:14:5","nodeType":"VariableDeclaration","scope":637,"src":"3275:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":633,"name":"uint256","nodeType":"ElementaryTypeName","src":"3275:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3241:57:5"},"returnParameters":{"id":636,"nodeType":"ParameterList","parameters":[],"src":"3307:0:5"},"scope":638,"src":"3222:86:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":639,"src":"279:3031:5","usedErrors":[],"usedEvents":[541,549,558,565,573]}],"src":"41:3270:5"},"id":5},"@account-abstraction/contracts/interfaces/UserOperation.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/UserOperation.sol","exportedSymbols":{"UserOperation":[666],"UserOperationLib":[836],"calldataKeccak":[238]},"id":837,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":640,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"36:24:6"},{"absolutePath":"@account-abstraction/contracts/core/Helpers.sol","file":"../core/Helpers.sol","id":642,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":837,"sourceUnit":239,"src":"104:51:6","symbolAliases":[{"foreign":{"id":641,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"112:14:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"UserOperation","documentation":{"id":643,"nodeType":"StructuredDocumentation","src":"157:1035:6","text":" User Operation struct\n @param sender the sender account of this request.\n @param nonce unique value the sender uses to verify it is not a replay.\n @param initCode if set, the account contract will be created by this constructor/\n @param callData the method call to execute on this account.\n @param callGasLimit the gas limit passed to the callData method call.\n @param verificationGasLimit gas used for validateUserOp and validatePaymasterUserOp.\n @param preVerificationGas gas not calculated by the handleOps method, but added to the gas paid. Covers batch overhead.\n @param maxFeePerGas same as EIP-1559 gas parameter.\n @param maxPriorityFeePerGas same as EIP-1559 gas parameter.\n @param paymasterAndData if set, this field holds the paymaster address and paymaster-specific data. the paymaster will pay for the transaction instead of the sender.\n @param signature sender-verified signature over the entire request, the EntryPoint address and the chain ID."},"id":666,"members":[{"constant":false,"id":645,"mutability":"mutable","name":"sender","nameLocation":"1237:6:6","nodeType":"VariableDeclaration","scope":666,"src":"1229:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":644,"name":"address","nodeType":"ElementaryTypeName","src":"1229:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":647,"mutability":"mutable","name":"nonce","nameLocation":"1261:5:6","nodeType":"VariableDeclaration","scope":666,"src":"1253:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":646,"name":"uint256","nodeType":"ElementaryTypeName","src":"1253:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":649,"mutability":"mutable","name":"initCode","nameLocation":"1282:8:6","nodeType":"VariableDeclaration","scope":666,"src":"1276:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":648,"name":"bytes","nodeType":"ElementaryTypeName","src":"1276:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":651,"mutability":"mutable","name":"callData","nameLocation":"1306:8:6","nodeType":"VariableDeclaration","scope":666,"src":"1300:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":650,"name":"bytes","nodeType":"ElementaryTypeName","src":"1300:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":653,"mutability":"mutable","name":"callGasLimit","nameLocation":"1332:12:6","nodeType":"VariableDeclaration","scope":666,"src":"1324:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":652,"name":"uint256","nodeType":"ElementaryTypeName","src":"1324:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":655,"mutability":"mutable","name":"verificationGasLimit","nameLocation":"1362:20:6","nodeType":"VariableDeclaration","scope":666,"src":"1354:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":654,"name":"uint256","nodeType":"ElementaryTypeName","src":"1354:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":657,"mutability":"mutable","name":"preVerificationGas","nameLocation":"1400:18:6","nodeType":"VariableDeclaration","scope":666,"src":"1392:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":656,"name":"uint256","nodeType":"ElementaryTypeName","src":"1392:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":659,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"1436:12:6","nodeType":"VariableDeclaration","scope":666,"src":"1428:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":658,"name":"uint256","nodeType":"ElementaryTypeName","src":"1428:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":661,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"1466:20:6","nodeType":"VariableDeclaration","scope":666,"src":"1458:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"1458:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":663,"mutability":"mutable","name":"paymasterAndData","nameLocation":"1502:16:6","nodeType":"VariableDeclaration","scope":666,"src":"1496:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":662,"name":"bytes","nodeType":"ElementaryTypeName","src":"1496:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":665,"mutability":"mutable","name":"signature","nameLocation":"1534:9:6","nodeType":"VariableDeclaration","scope":666,"src":"1528:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":664,"name":"bytes","nodeType":"ElementaryTypeName","src":"1528:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"UserOperation","nameLocation":"1204:13:6","nodeType":"StructDefinition","scope":837,"src":"1197:353:6","visibility":"public"},{"abstract":false,"baseContracts":[],"canonicalName":"UserOperationLib","contractDependencies":[],"contractKind":"library","documentation":{"id":667,"nodeType":"StructuredDocumentation","src":"1552:77:6","text":" Utility functions helpful when working with UserOperation structs."},"fullyImplemented":true,"id":836,"linearizedBaseContracts":[836],"name":"UserOperationLib","nameLocation":"1638:16:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":687,"nodeType":"Block","src":"1744:199:6","statements":[{"assignments":[676],"declarations":[{"constant":false,"id":676,"mutability":"mutable","name":"data","nameLocation":"1762:4:6","nodeType":"VariableDeclaration","scope":687,"src":"1754:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":675,"name":"address","nodeType":"ElementaryTypeName","src":"1754:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":677,"nodeType":"VariableDeclarationStatement","src":"1754:12:6"},{"AST":{"nativeSrc":"1868:30:6","nodeType":"YulBlock","src":"1868:30:6","statements":[{"nativeSrc":"1869:28:6","nodeType":"YulAssignment","src":"1869:28:6","value":{"arguments":[{"name":"userOp","nativeSrc":"1890:6:6","nodeType":"YulIdentifier","src":"1890:6:6"}],"functionName":{"name":"calldataload","nativeSrc":"1877:12:6","nodeType":"YulIdentifier","src":"1877:12:6"},"nativeSrc":"1877:20:6","nodeType":"YulFunctionCall","src":"1877:20:6"},"variableNames":[{"name":"data","nativeSrc":"1869:4:6","nodeType":"YulIdentifier","src":"1869:4:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":676,"isOffset":false,"isSlot":false,"src":"1869:4:6","valueSize":1},{"declaration":670,"isOffset":false,"isSlot":false,"src":"1890:6:6","valueSize":1}],"id":678,"nodeType":"InlineAssembly","src":"1859:39:6"},{"expression":{"arguments":[{"arguments":[{"id":683,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"1930:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1922:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":681,"name":"uint160","nodeType":"ElementaryTypeName","src":"1922:7:6","typeDescriptions":{}}},"id":684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1922:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":679,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:6","typeDescriptions":{}}},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1914:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":674,"id":686,"nodeType":"Return","src":"1907:29:6"}]},"id":688,"implemented":true,"kind":"function","modifiers":[],"name":"getSender","nameLocation":"1671:9:6","nodeType":"FunctionDefinition","parameters":{"id":671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":670,"mutability":"mutable","name":"userOp","nameLocation":"1704:6:6","nodeType":"VariableDeclaration","scope":688,"src":"1681:29:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":669,"nodeType":"UserDefinedTypeName","pathNode":{"id":668,"name":"UserOperation","nameLocations":["1681:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":666,"src":"1681:13:6"},"referencedDeclaration":666,"src":"1681:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"1680:31:6"},"returnParameters":{"id":674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":688,"src":"1735:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":672,"name":"address","nodeType":"ElementaryTypeName","src":"1735:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1734:9:6"},"scope":836,"src":"1662:281:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":722,"nodeType":"Block","src":"2164:391:6","statements":[{"id":721,"nodeType":"UncheckedBlock","src":"2170:379:6","statements":[{"assignments":[697],"declarations":[{"constant":false,"id":697,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"2198:12:6","nodeType":"VariableDeclaration","scope":721,"src":"2190:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":696,"name":"uint256","nodeType":"ElementaryTypeName","src":"2190:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":700,"initialValue":{"expression":{"id":698,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"2213:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2220:12:6","memberName":"maxFeePerGas","nodeType":"MemberAccess","referencedDeclaration":659,"src":"2213:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2190:42:6"},{"assignments":[702],"declarations":[{"constant":false,"id":702,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"2250:20:6","nodeType":"VariableDeclaration","scope":721,"src":"2242:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":701,"name":"uint256","nodeType":"ElementaryTypeName","src":"2242:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":705,"initialValue":{"expression":{"id":703,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"2273:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2280:20:6","memberName":"maxPriorityFeePerGas","nodeType":"MemberAccess","referencedDeclaration":661,"src":"2273:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2242:58:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":706,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"2314:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":707,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"2330:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2314:36:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":712,"nodeType":"IfStatement","src":"2310:161:6","trueBody":{"id":711,"nodeType":"Block","src":"2352:119:6","statements":[{"expression":{"id":709,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"2448:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":695,"id":710,"nodeType":"Return","src":"2441:19:6"}]}},{"expression":{"arguments":[{"id":714,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"2491:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":715,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"2505:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":716,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2528:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2534:7:6","memberName":"basefee","nodeType":"MemberAccess","src":"2528:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2505:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":713,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"2487:3:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2487:55:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":695,"id":720,"nodeType":"Return","src":"2480:62:6"}]}]},"id":723,"implemented":true,"kind":"function","modifiers":[],"name":"gasPrice","nameLocation":"2092:8:6","nodeType":"FunctionDefinition","parameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":691,"mutability":"mutable","name":"userOp","nameLocation":"2124:6:6","nodeType":"VariableDeclaration","scope":723,"src":"2101:29:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":690,"nodeType":"UserDefinedTypeName","pathNode":{"id":689,"name":"UserOperation","nameLocations":["2101:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":666,"src":"2101:13:6"},"referencedDeclaration":666,"src":"2101:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"2100:31:6"},"returnParameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":723,"src":"2155:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":693,"name":"uint256","nodeType":"ElementaryTypeName","src":"2155:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2154:9:6"},"scope":836,"src":"2083:472:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":802,"nodeType":"Block","src":"2647:856:6","statements":[{"assignments":[732],"declarations":[{"constant":false,"id":732,"mutability":"mutable","name":"sender","nameLocation":"2665:6:6","nodeType":"VariableDeclaration","scope":802,"src":"2657:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":731,"name":"address","nodeType":"ElementaryTypeName","src":"2657:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":736,"initialValue":{"arguments":[{"id":734,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"2684:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation calldata"}],"id":733,"name":"getSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"2674:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_UserOperation_$666_calldata_ptr_$returns$_t_address_$","typeString":"function (struct UserOperation calldata) pure returns (address)"}},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2674:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2657:34:6"},{"assignments":[738],"declarations":[{"constant":false,"id":738,"mutability":"mutable","name":"nonce","nameLocation":"2709:5:6","nodeType":"VariableDeclaration","scope":802,"src":"2701:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":737,"name":"uint256","nodeType":"ElementaryTypeName","src":"2701:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":741,"initialValue":{"expression":{"id":739,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"2717:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2724:5:6","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":647,"src":"2717:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2701:28:6"},{"assignments":[743],"declarations":[{"constant":false,"id":743,"mutability":"mutable","name":"hashInitCode","nameLocation":"2747:12:6","nodeType":"VariableDeclaration","scope":802,"src":"2739:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":742,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2739:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":748,"initialValue":{"arguments":[{"expression":{"id":745,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"2777:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2784:8:6","memberName":"initCode","nodeType":"MemberAccess","referencedDeclaration":649,"src":"2777:15:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":744,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"2762:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2762:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2739:54:6"},{"assignments":[750],"declarations":[{"constant":false,"id":750,"mutability":"mutable","name":"hashCallData","nameLocation":"2811:12:6","nodeType":"VariableDeclaration","scope":802,"src":"2803:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":749,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2803:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":755,"initialValue":{"arguments":[{"expression":{"id":752,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"2841:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2848:8:6","memberName":"callData","nodeType":"MemberAccess","referencedDeclaration":651,"src":"2841:15:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":751,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"2826:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2826:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2803:54:6"},{"assignments":[757],"declarations":[{"constant":false,"id":757,"mutability":"mutable","name":"callGasLimit","nameLocation":"2875:12:6","nodeType":"VariableDeclaration","scope":802,"src":"2867:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":756,"name":"uint256","nodeType":"ElementaryTypeName","src":"2867:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":760,"initialValue":{"expression":{"id":758,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"2890:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2897:12:6","memberName":"callGasLimit","nodeType":"MemberAccess","referencedDeclaration":653,"src":"2890:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2867:42:6"},{"assignments":[762],"declarations":[{"constant":false,"id":762,"mutability":"mutable","name":"verificationGasLimit","nameLocation":"2927:20:6","nodeType":"VariableDeclaration","scope":802,"src":"2919:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":761,"name":"uint256","nodeType":"ElementaryTypeName","src":"2919:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":765,"initialValue":{"expression":{"id":763,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"2950:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2957:20:6","memberName":"verificationGasLimit","nodeType":"MemberAccess","referencedDeclaration":655,"src":"2950:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2919:58:6"},{"assignments":[767],"declarations":[{"constant":false,"id":767,"mutability":"mutable","name":"preVerificationGas","nameLocation":"2995:18:6","nodeType":"VariableDeclaration","scope":802,"src":"2987:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":766,"name":"uint256","nodeType":"ElementaryTypeName","src":"2987:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":770,"initialValue":{"expression":{"id":768,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"3016:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:18:6","memberName":"preVerificationGas","nodeType":"MemberAccess","referencedDeclaration":657,"src":"3016:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2987:54:6"},{"assignments":[772],"declarations":[{"constant":false,"id":772,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"3059:12:6","nodeType":"VariableDeclaration","scope":802,"src":"3051:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":771,"name":"uint256","nodeType":"ElementaryTypeName","src":"3051:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":775,"initialValue":{"expression":{"id":773,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"3074:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3081:12:6","memberName":"maxFeePerGas","nodeType":"MemberAccess","referencedDeclaration":659,"src":"3074:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3051:42:6"},{"assignments":[777],"declarations":[{"constant":false,"id":777,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"3111:20:6","nodeType":"VariableDeclaration","scope":802,"src":"3103:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":776,"name":"uint256","nodeType":"ElementaryTypeName","src":"3103:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":780,"initialValue":{"expression":{"id":778,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"3134:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3141:20:6","memberName":"maxPriorityFeePerGas","nodeType":"MemberAccess","referencedDeclaration":661,"src":"3134:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3103:58:6"},{"assignments":[782],"declarations":[{"constant":false,"id":782,"mutability":"mutable","name":"hashPaymasterAndData","nameLocation":"3179:20:6","nodeType":"VariableDeclaration","scope":802,"src":"3171:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":781,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3171:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":787,"initialValue":{"arguments":[{"expression":{"id":784,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"3217:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3224:16:6","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":663,"src":"3217:23:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":783,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"3202:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3202:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3171:70:6"},{"expression":{"arguments":[{"id":790,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"3283:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":791,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"3291:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":792,"name":"hashInitCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"3310:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":793,"name":"hashCallData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"3324:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":794,"name":"callGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"3350:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":795,"name":"verificationGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"3364:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":796,"name":"preVerificationGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"3386:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":797,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"3418:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":798,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"3432:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":799,"name":"hashPaymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"3466:20:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":788,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3259:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3263:6:6","memberName":"encode","nodeType":"MemberAccess","src":"3259:10:6","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3259:237:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":730,"id":801,"nodeType":"Return","src":"3252:244:6"}]},"id":803,"implemented":true,"kind":"function","modifiers":[],"name":"pack","nameLocation":"2570:4:6","nodeType":"FunctionDefinition","parameters":{"id":727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":726,"mutability":"mutable","name":"userOp","nameLocation":"2598:6:6","nodeType":"VariableDeclaration","scope":803,"src":"2575:29:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":725,"nodeType":"UserDefinedTypeName","pathNode":{"id":724,"name":"UserOperation","nameLocations":["2575:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":666,"src":"2575:13:6"},"referencedDeclaration":666,"src":"2575:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"2574:31:6"},"returnParameters":{"id":730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":729,"mutability":"mutable","name":"ret","nameLocation":"2642:3:6","nodeType":"VariableDeclaration","scope":803,"src":"2629:16:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":728,"name":"bytes","nodeType":"ElementaryTypeName","src":"2629:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2628:18:6"},"scope":836,"src":"2561:942:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":817,"nodeType":"Block","src":"3586:47:6","statements":[{"expression":{"arguments":[{"arguments":[{"id":813,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"3618:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation calldata"}],"id":812,"name":"pack","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"3613:4:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_UserOperation_$666_calldata_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct UserOperation calldata) pure returns (bytes memory)"}},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3613:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":811,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3603:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3603:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":810,"id":816,"nodeType":"Return","src":"3596:30:6"}]},"id":818,"implemented":true,"kind":"function","modifiers":[],"name":"hash","nameLocation":"3518:4:6","nodeType":"FunctionDefinition","parameters":{"id":807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":806,"mutability":"mutable","name":"userOp","nameLocation":"3546:6:6","nodeType":"VariableDeclaration","scope":818,"src":"3523:29:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":805,"nodeType":"UserDefinedTypeName","pathNode":{"id":804,"name":"UserOperation","nameLocations":["3523:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":666,"src":"3523:13:6"},"referencedDeclaration":666,"src":"3523:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"3522:31:6"},"returnParameters":{"id":810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":818,"src":"3577:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":808,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3577:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3576:9:6"},"scope":836,"src":"3509:124:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":834,"nodeType":"Block","src":"3706:37:6","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":827,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"3723:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":828,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"3727:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3723:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":831,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"3735:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3723:13:6","trueExpression":{"id":830,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"3731:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":826,"id":833,"nodeType":"Return","src":"3716:20:6"}]},"id":835,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3648:3:6","nodeType":"FunctionDefinition","parameters":{"id":823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":820,"mutability":"mutable","name":"a","nameLocation":"3660:1:6","nodeType":"VariableDeclaration","scope":835,"src":"3652:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":819,"name":"uint256","nodeType":"ElementaryTypeName","src":"3652:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":822,"mutability":"mutable","name":"b","nameLocation":"3671:1:6","nodeType":"VariableDeclaration","scope":835,"src":"3663:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":821,"name":"uint256","nodeType":"ElementaryTypeName","src":"3663:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3651:22:6"},"returnParameters":{"id":826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":835,"src":"3697:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":824,"name":"uint256","nodeType":"ElementaryTypeName","src":"3697:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3696:9:6"},"scope":836,"src":"3639:104:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":837,"src":"1630:2115:6","usedErrors":[],"usedEvents":[]}],"src":"36:3710:6"},"id":6},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1014],"Ownable":[984]},"id":985,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":838,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:7"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":840,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":985,"sourceUnit":1015,"src":"128:45:7","symbolAliases":[{"foreign":{"id":839,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"136:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":842,"name":"Context","nameLocations":["692:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":1014,"src":"692:7:7"},"id":843,"nodeType":"InheritanceSpecifier","src":"692:7:7"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":841,"nodeType":"StructuredDocumentation","src":"175:487:7","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":984,"linearizedBaseContracts":[984,1014],"name":"Ownable","nameLocation":"681:7:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":845,"mutability":"mutable","name":"_owner","nameLocation":"722:6:7","nodeType":"VariableDeclaration","scope":984,"src":"706:22:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":844,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":846,"nodeType":"StructuredDocumentation","src":"735:85:7","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":850,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:7","nodeType":"ErrorDefinition","parameters":{"id":849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":848,"mutability":"mutable","name":"account","nameLocation":"866:7:7","nodeType":"VariableDeclaration","scope":850,"src":"858:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":847,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:7"},"src":"825:50:7"},{"documentation":{"id":851,"nodeType":"StructuredDocumentation","src":"881:82:7","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":855,"name":"OwnableInvalidOwner","nameLocation":"974:19:7","nodeType":"ErrorDefinition","parameters":{"id":854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":853,"mutability":"mutable","name":"owner","nameLocation":"1002:5:7","nodeType":"VariableDeclaration","scope":855,"src":"994:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":852,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:7"},"src":"968:41:7"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":861,"name":"OwnershipTransferred","nameLocation":"1021:20:7","nodeType":"EventDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:7","nodeType":"VariableDeclaration","scope":861,"src":"1042:29:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":859,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:7","nodeType":"VariableDeclaration","scope":861,"src":"1073:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":858,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:7"},"src":"1015:84:7"},{"body":{"id":886,"nodeType":"Block","src":"1259:153:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":867,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"1273:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":868,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:7","typeDescriptions":{}}},"id":871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":881,"nodeType":"IfStatement","src":"1269:95:7","trueBody":{"id":880,"nodeType":"Block","src":"1301:63:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":874,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:7","typeDescriptions":{}}},"id":877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":873,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"1322:19:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":879,"nodeType":"RevertStatement","src":"1315:38:7"}]}},{"expression":{"arguments":[{"id":883,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"1392:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":882,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"1373:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":885,"nodeType":"ExpressionStatement","src":"1373:32:7"}]},"documentation":{"id":862,"nodeType":"StructuredDocumentation","src":"1105:115:7","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":887,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":864,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:7","nodeType":"VariableDeclaration","scope":887,"src":"1237:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":863,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:7"},"returnParameters":{"id":866,"nodeType":"ParameterList","parameters":[],"src":"1259:0:7"},"scope":984,"src":"1225:187:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":894,"nodeType":"Block","src":"1521:41:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":890,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"1531:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":892,"nodeType":"ExpressionStatement","src":"1531:13:7"},{"id":893,"nodeType":"PlaceholderStatement","src":"1554:1:7"}]},"documentation":{"id":888,"nodeType":"StructuredDocumentation","src":"1418:77:7","text":" @dev Throws if called by any account other than the owner."},"id":895,"name":"onlyOwner","nameLocation":"1509:9:7","nodeType":"ModifierDefinition","parameters":{"id":889,"nodeType":"ParameterList","parameters":[],"src":"1518:2:7"},"src":"1500:62:7","virtual":false,"visibility":"internal"},{"body":{"id":903,"nodeType":"Block","src":"1693:30:7","statements":[{"expression":{"id":901,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"1710:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":900,"id":902,"nodeType":"Return","src":"1703:13:7"}]},"documentation":{"id":896,"nodeType":"StructuredDocumentation","src":"1568:65:7","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":904,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:7","nodeType":"FunctionDefinition","parameters":{"id":897,"nodeType":"ParameterList","parameters":[],"src":"1652:2:7"},"returnParameters":{"id":900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":904,"src":"1684:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":898,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:7"},"scope":984,"src":"1638:85:7","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":920,"nodeType":"Block","src":"1841:117:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":908,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"1855:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":910,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"1866:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":919,"nodeType":"IfStatement","src":"1851:101:7","trueBody":{"id":918,"nodeType":"Block","src":"1880:72:7","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":914,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"1928:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":913,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"1901:26:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":917,"nodeType":"RevertStatement","src":"1894:47:7"}]}}]},"documentation":{"id":905,"nodeType":"StructuredDocumentation","src":"1729:62:7","text":" @dev Throws if the sender is not the owner."},"id":921,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:7","nodeType":"FunctionDefinition","parameters":{"id":906,"nodeType":"ParameterList","parameters":[],"src":"1816:2:7"},"returnParameters":{"id":907,"nodeType":"ParameterList","parameters":[],"src":"1841:0:7"},"scope":984,"src":"1796:162:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":934,"nodeType":"Block","src":"2347:47:7","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":928,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:7","typeDescriptions":{}}},"id":931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":927,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"2357:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":933,"nodeType":"ExpressionStatement","src":"2357:30:7"}]},"documentation":{"id":922,"nodeType":"StructuredDocumentation","src":"1964:324:7","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":935,"implemented":true,"kind":"function","modifiers":[{"id":925,"kind":"modifierInvocation","modifierName":{"id":924,"name":"onlyOwner","nameLocations":["2337:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":895,"src":"2337:9:7"},"nodeType":"ModifierInvocation","src":"2337:9:7"}],"name":"renounceOwnership","nameLocation":"2302:17:7","nodeType":"FunctionDefinition","parameters":{"id":923,"nodeType":"ParameterList","parameters":[],"src":"2319:2:7"},"returnParameters":{"id":926,"nodeType":"ParameterList","parameters":[],"src":"2347:0:7"},"scope":984,"src":"2293:101:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":962,"nodeType":"Block","src":"2613:145:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":943,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"2627:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":944,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:7","typeDescriptions":{}}},"id":947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":957,"nodeType":"IfStatement","src":"2623:91:7","trueBody":{"id":956,"nodeType":"Block","src":"2651:63:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":950,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:7","typeDescriptions":{}}},"id":953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":949,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"2672:19:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":955,"nodeType":"RevertStatement","src":"2665:38:7"}]}},{"expression":{"arguments":[{"id":959,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"2742:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":958,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"2723:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":961,"nodeType":"ExpressionStatement","src":"2723:28:7"}]},"documentation":{"id":936,"nodeType":"StructuredDocumentation","src":"2400:138:7","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":963,"implemented":true,"kind":"function","modifiers":[{"id":941,"kind":"modifierInvocation","modifierName":{"id":940,"name":"onlyOwner","nameLocations":["2603:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":895,"src":"2603:9:7"},"nodeType":"ModifierInvocation","src":"2603:9:7"}],"name":"transferOwnership","nameLocation":"2552:17:7","nodeType":"FunctionDefinition","parameters":{"id":939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":938,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:7","nodeType":"VariableDeclaration","scope":963,"src":"2570:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":937,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:7"},"returnParameters":{"id":942,"nodeType":"ParameterList","parameters":[],"src":"2613:0:7"},"scope":984,"src":"2543:215:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":982,"nodeType":"Block","src":"2975:124:7","statements":[{"assignments":[970],"declarations":[{"constant":false,"id":970,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:7","nodeType":"VariableDeclaration","scope":982,"src":"2985:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":969,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":972,"initialValue":{"id":971,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"3004:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:7"},{"expression":{"id":975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":973,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"3020:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":974,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"3029:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":976,"nodeType":"ExpressionStatement","src":"3020:17:7"},{"eventCall":{"arguments":[{"id":978,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"3073:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":979,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"3083:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":977,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"3052:20:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":981,"nodeType":"EmitStatement","src":"3047:45:7"}]},"documentation":{"id":964,"nodeType":"StructuredDocumentation","src":"2764:143:7","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":983,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:7","nodeType":"FunctionDefinition","parameters":{"id":967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":966,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:7","nodeType":"VariableDeclaration","scope":983,"src":"2940:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":965,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:7"},"returnParameters":{"id":968,"nodeType":"ParameterList","parameters":[],"src":"2975:0:7"},"scope":984,"src":"2912:187:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":985,"src":"663:2438:7","usedErrors":[850,855],"usedEvents":[861]}],"src":"102:3000:7"},"id":7},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1014]},"id":1015,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":986,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:8"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":987,"nodeType":"StructuredDocumentation","src":"127:496:8","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1014,"linearizedBaseContracts":[1014],"name":"Context","nameLocation":"642:7:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":995,"nodeType":"Block","src":"718:34:8","statements":[{"expression":{"expression":{"id":992,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:8","memberName":"sender","nodeType":"MemberAccess","src":"735:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":991,"id":994,"nodeType":"Return","src":"728:17:8"}]},"id":996,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:8","nodeType":"FunctionDefinition","parameters":{"id":988,"nodeType":"ParameterList","parameters":[],"src":"675:2:8"},"returnParameters":{"id":991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":990,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":996,"src":"709:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":989,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:8"},"scope":1014,"src":"656:96:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1004,"nodeType":"Block","src":"825:32:8","statements":[{"expression":{"expression":{"id":1001,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:8","memberName":"data","nodeType":"MemberAccess","src":"842:8:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1000,"id":1003,"nodeType":"Return","src":"835:15:8"}]},"id":1005,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:8","nodeType":"FunctionDefinition","parameters":{"id":997,"nodeType":"ParameterList","parameters":[],"src":"775:2:8"},"returnParameters":{"id":1000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1005,"src":"809:14:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":998,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:8"},"scope":1014,"src":"758:99:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1012,"nodeType":"Block","src":"935:25:8","statements":[{"expression":{"hexValue":"30","id":1010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1009,"id":1011,"nodeType":"Return","src":"945:8:8"}]},"id":1013,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:8","nodeType":"FunctionDefinition","parameters":{"id":1006,"nodeType":"ParameterList","parameters":[],"src":"892:2:8"},"returnParameters":{"id":1009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1008,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1013,"src":"926:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1007,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:8"},"scope":1014,"src":"863:97:8","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1015,"src":"624:338:8","usedErrors":[],"usedEvents":[]}],"src":"101:862:8"},"id":8},"contracts/SmartPayPaymaster.sol":{"ast":{"absolutePath":"contracts/SmartPayPaymaster.sol","exportedSymbols":{"Context":[1014],"CustomBasePaymaster":[1232],"IAggregator":[272],"IEntryPoint":[478],"INonceManager":[497],"IPaymaster":[532],"IStakeManager":[638],"Ownable":[984],"SmartPayPaymaster":[1127],"UserOperation":[666],"UserOperationLib":[836],"calldataKeccak":[238]},"id":1128,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1016,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:9"},{"absolutePath":"contracts/base/CustomBasePaymaster.sol","file":"./base/CustomBasePaymaster.sol","id":1017,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1128,"sourceUnit":1233,"src":"58:40:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":1018,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1128,"sourceUnit":985,"src":"99:52:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1019,"name":"CustomBasePaymaster","nameLocations":["183:19:9"],"nodeType":"IdentifierPath","referencedDeclaration":1232,"src":"183:19:9"},"id":1020,"nodeType":"InheritanceSpecifier","src":"183:19:9"},{"baseName":{"id":1021,"name":"Ownable","nameLocations":["204:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":984,"src":"204:7:9"},"id":1022,"nodeType":"InheritanceSpecifier","src":"204:7:9"}],"canonicalName":"SmartPayPaymaster","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1127,"linearizedBaseContracts":[1127,984,1014,1232,532],"name":"SmartPayPaymaster","nameLocation":"162:17:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"b3d8da13e2eec10930982ae94cc39cd56a1e686b864a50f632765647bdfe622b","id":1030,"name":"GasSponsored","nameLocation":"224:12:9","nodeType":"EventDefinition","parameters":{"id":1029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1024,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"253:6:9","nodeType":"VariableDeclaration","scope":1030,"src":"237:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1023,"name":"address","nodeType":"ElementaryTypeName","src":"237:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1026,"indexed":false,"mutability":"mutable","name":"gasUsed","nameLocation":"269:7:9","nodeType":"VariableDeclaration","scope":1030,"src":"261:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1025,"name":"uint256","nodeType":"ElementaryTypeName","src":"261:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1028,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"286:9:9","nodeType":"VariableDeclaration","scope":1030,"src":"278:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1027,"name":"uint256","nodeType":"ElementaryTypeName","src":"278:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"236:60:9"},"src":"218:79:9"},{"body":{"id":1044,"nodeType":"Block","src":"429:2:9","statements":[]},"id":1045,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1038,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"386:11:9","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$478","typeString":"contract IEntryPoint"}}],"id":1039,"kind":"baseConstructorSpecifier","modifierName":{"id":1037,"name":"CustomBasePaymaster","nameLocations":["366:19:9"],"nodeType":"IdentifierPath","referencedDeclaration":1232,"src":"366:19:9"},"nodeType":"ModifierInvocation","src":"366:32:9"},{"arguments":[{"id":1041,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"411:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1042,"kind":"baseConstructorSpecifier","modifierName":{"id":1040,"name":"Ownable","nameLocations":["403:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":984,"src":"403:7:9"},"nodeType":"ModifierInvocation","src":"403:21:9"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1033,"mutability":"mutable","name":"_entryPoint","nameLocation":"327:11:9","nodeType":"VariableDeclaration","scope":1045,"src":"315:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$478","typeString":"contract IEntryPoint"},"typeName":{"id":1032,"nodeType":"UserDefinedTypeName","pathNode":{"id":1031,"name":"IEntryPoint","nameLocations":["315:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":478,"src":"315:11:9"},"referencedDeclaration":478,"src":"315:11:9","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$478","typeString":"contract IEntryPoint"}},"visibility":"internal"},{"constant":false,"id":1035,"mutability":"mutable","name":"initialOwner","nameLocation":"348:12:9","nodeType":"VariableDeclaration","scope":1045,"src":"340:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1034,"name":"address","nodeType":"ElementaryTypeName","src":"340:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"314:47:9"},"returnParameters":{"id":1043,"nodeType":"ParameterList","parameters":[],"src":"429:0:9"},"scope":1127,"src":"303:128:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1048,"nodeType":"Block","src":"464:2:9","statements":[]},"id":1049,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1046,"nodeType":"ParameterList","parameters":[],"src":"444:2:9"},"returnParameters":{"id":1047,"nodeType":"ParameterList","parameters":[],"src":"464:0:9"},"scope":1127,"src":"437:29:9","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[1221],"body":{"id":1072,"nodeType":"Block","src":"663:146:9","statements":[{"expression":{"components":[{"arguments":[{"expression":{"id":1066,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"784:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"791:6:9","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":645,"src":"784:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1064,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"773:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"777:6:9","memberName":"encode","nodeType":"MemberAccess","src":"773:10:9","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"773:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"800:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1070,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"772:30:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_rational_0_by_1_$","typeString":"tuple(bytes memory,int_const 0)"}},"functionReturnParameters":1063,"id":1071,"nodeType":"Return","src":"765:37:9"}]},"id":1073,"implemented":true,"kind":"function","modifiers":[],"name":"_validatePaymasterUserOp","nameLocation":"481:24:9","nodeType":"FunctionDefinition","overrides":{"id":1058,"nodeType":"OverrideSpecifier","overrides":[],"src":"599:8:9"},"parameters":{"id":1057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1052,"mutability":"mutable","name":"userOp","nameLocation":"538:6:9","nodeType":"VariableDeclaration","scope":1073,"src":"515:29:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":1051,"nodeType":"UserDefinedTypeName","pathNode":{"id":1050,"name":"UserOperation","nameLocations":["515:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":666,"src":"515:13:9"},"referencedDeclaration":666,"src":"515:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":1054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1073,"src":"554:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1053,"name":"bytes32","nodeType":"ElementaryTypeName","src":"554:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1056,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1073,"src":"571:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1055,"name":"uint256","nodeType":"ElementaryTypeName","src":"571:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"505:79:9"},"returnParameters":{"id":1063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1060,"mutability":"mutable","name":"context","nameLocation":"630:7:9","nodeType":"VariableDeclaration","scope":1073,"src":"617:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1059,"name":"bytes","nodeType":"ElementaryTypeName","src":"617:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1062,"mutability":"mutable","name":"validationData","nameLocation":"647:14:9","nodeType":"VariableDeclaration","scope":1073,"src":"639:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1061,"name":"uint256","nodeType":"ElementaryTypeName","src":"639:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"616:46:9"},"scope":1127,"src":"472:337:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"baseFunctions":[1231],"body":{"id":1101,"nodeType":"Block","src":"939:131:9","statements":[{"assignments":[1085],"declarations":[{"constant":false,"id":1085,"mutability":"mutable","name":"sender","nameLocation":"957:6:9","nodeType":"VariableDeclaration","scope":1101,"src":"949:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1084,"name":"address","nodeType":"ElementaryTypeName","src":"949:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1093,"initialValue":{"arguments":[{"id":1088,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"977:7:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"components":[{"id":1090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"987:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1089,"name":"address","nodeType":"ElementaryTypeName","src":"987:7:9","typeDescriptions":{}}}],"id":1091,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"986:9:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}],"expression":{"id":1086,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"966:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"970:6:9","memberName":"decode","nodeType":"MemberAccess","src":"966:10:9","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"966:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"VariableDeclarationStatement","src":"949:47:9"},{"eventCall":{"arguments":[{"id":1095,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"1024:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1096,"name":"actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"1032:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1097,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1047:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1053:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"1047:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1094,"name":"GasSponsored","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"1011:12:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1011:52:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1100,"nodeType":"EmitStatement","src":"1006:57:9"}]},"id":1102,"implemented":true,"kind":"function","modifiers":[],"name":"_postOp","nameLocation":"824:7:9","nodeType":"FunctionDefinition","overrides":{"id":1082,"nodeType":"OverrideSpecifier","overrides":[],"src":"930:8:9"},"parameters":{"id":1081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1076,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1102,"src":"841:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$505","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":1075,"nodeType":"UserDefinedTypeName","pathNode":{"id":1074,"name":"PostOpMode","nameLocations":["841:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":505,"src":"841:10:9"},"referencedDeclaration":505,"src":"841:10:9","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$505","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":1078,"mutability":"mutable","name":"context","nameLocation":"876:7:9","nodeType":"VariableDeclaration","scope":1102,"src":"861:22:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1077,"name":"bytes","nodeType":"ElementaryTypeName","src":"861:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1080,"mutability":"mutable","name":"actualGasCost","nameLocation":"901:13:9","nodeType":"VariableDeclaration","scope":1102,"src":"893:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1079,"name":"uint256","nodeType":"ElementaryTypeName","src":"893:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"831:89:9"},"returnParameters":{"id":1083,"nodeType":"ParameterList","parameters":[],"src":"939:0:9"},"scope":1127,"src":"815:255:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1125,"nodeType":"Block","src":"1151:106:9","statements":[{"assignments":[1112,null],"declarations":[{"constant":false,"id":1112,"mutability":"mutable","name":"success","nameLocation":"1167:7:9","nodeType":"VariableDeclaration","scope":1125,"src":"1162:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1111,"name":"bool","nodeType":"ElementaryTypeName","src":"1162:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1119,"initialValue":{"arguments":[{"hexValue":"","id":1117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1202:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1113,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"1179:2:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1182:4:9","memberName":"call","nodeType":"MemberAccess","src":"1179:7:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1115,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"1194:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1179:22:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1179:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1161:44:9"},{"expression":{"arguments":[{"id":1121,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"1223:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5769746864726177206661696c6564","id":1122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1232:17:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925","typeString":"literal_string \"Withdraw failed\""},"value":"Withdraw failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925","typeString":"literal_string \"Withdraw failed\""}],"id":1120,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1215:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1215:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1124,"nodeType":"ExpressionStatement","src":"1215:35:9"}]},"functionSelector":"205c2878","id":1126,"implemented":true,"kind":"function","modifiers":[{"id":1109,"kind":"modifierInvocation","modifierName":{"id":1108,"name":"onlyOwner","nameLocations":["1141:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":895,"src":"1141:9:9"},"nodeType":"ModifierInvocation","src":"1141:9:9"}],"name":"withdrawTo","nameLocation":"1085:10:9","nodeType":"FunctionDefinition","parameters":{"id":1107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1104,"mutability":"mutable","name":"to","nameLocation":"1112:2:9","nodeType":"VariableDeclaration","scope":1126,"src":"1096:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1103,"name":"address","nodeType":"ElementaryTypeName","src":"1096:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1106,"mutability":"mutable","name":"amount","nameLocation":"1124:6:9","nodeType":"VariableDeclaration","scope":1126,"src":"1116:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1105,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1095:36:9"},"returnParameters":{"id":1110,"nodeType":"ParameterList","parameters":[],"src":"1151:0:9"},"scope":1127,"src":"1076:181:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1128,"src":"153:1106:9","usedErrors":[850,855],"usedEvents":[861,1030]}],"src":"32:1228:9"},"id":9},"contracts/base/CustomBasePaymaster.sol":{"ast":{"absolutePath":"contracts/base/CustomBasePaymaster.sol","exportedSymbols":{"CustomBasePaymaster":[1232],"IAggregator":[272],"IEntryPoint":[478],"INonceManager":[497],"IPaymaster":[532],"IStakeManager":[638],"UserOperation":[666],"UserOperationLib":[836],"calldataKeccak":[238]},"id":1233,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1129,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:10"},{"absolutePath":"@account-abstraction/contracts/interfaces/IEntryPoint.sol","file":"@account-abstraction/contracts/interfaces/IEntryPoint.sol","id":1130,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1233,"sourceUnit":479,"src":"58:67:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/interfaces/IPaymaster.sol","file":"@account-abstraction/contracts/interfaces/IPaymaster.sol","id":1131,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1233,"sourceUnit":533,"src":"126:66:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/interfaces/UserOperation.sol","file":"@account-abstraction/contracts/interfaces/UserOperation.sol","id":1132,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1233,"sourceUnit":837,"src":"193:69:10","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1133,"name":"IPaymaster","nameLocations":["305:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":532,"src":"305:10:10"},"id":1134,"nodeType":"InheritanceSpecifier","src":"305:10:10"}],"canonicalName":"CustomBasePaymaster","contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"id":1232,"linearizedBaseContracts":[1232,532],"name":"CustomBasePaymaster","nameLocation":"282:19:10","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"b0d691fe","id":1137,"mutability":"immutable","name":"entryPoint","nameLocation":"351:10:10","nodeType":"VariableDeclaration","scope":1232,"src":"322:39:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$478","typeString":"contract IEntryPoint"},"typeName":{"id":1136,"nodeType":"UserDefinedTypeName","pathNode":{"id":1135,"name":"IEntryPoint","nameLocations":["322:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":478,"src":"322:11:10"},"referencedDeclaration":478,"src":"322:11:10","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$478","typeString":"contract IEntryPoint"}},"visibility":"public"},{"body":{"id":1147,"nodeType":"Block","src":"405:41:10","statements":[{"expression":{"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1143,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"415:10:10","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$478","typeString":"contract IEntryPoint"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1144,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"428:11:10","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$478","typeString":"contract IEntryPoint"}},"src":"415:24:10","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$478","typeString":"contract IEntryPoint"}},"id":1146,"nodeType":"ExpressionStatement","src":"415:24:10"}]},"id":1148,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1140,"mutability":"mutable","name":"_entryPoint","nameLocation":"392:11:10","nodeType":"VariableDeclaration","scope":1148,"src":"380:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$478","typeString":"contract IEntryPoint"},"typeName":{"id":1139,"nodeType":"UserDefinedTypeName","pathNode":{"id":1138,"name":"IEntryPoint","nameLocations":["380:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":478,"src":"380:11:10"},"referencedDeclaration":478,"src":"380:11:10","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$478","typeString":"contract IEntryPoint"}},"visibility":"internal"}],"src":"379:25:10"},"returnParameters":{"id":1142,"nodeType":"ParameterList","parameters":[],"src":"405:0:10"},"scope":1232,"src":"368:78:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1162,"nodeType":"Block","src":"478:89:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1151,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"496:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"500:6:10","memberName":"sender","nodeType":"MemberAccess","src":"496:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":1155,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"518:10:10","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$478","typeString":"contract IEntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$478","typeString":"contract IEntryPoint"}],"id":1154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"510:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1153,"name":"address","nodeType":"ElementaryTypeName","src":"510:7:10","typeDescriptions":{}}},"id":1156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"510:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"496:33:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920456e747279506f696e74","id":1158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"531:17:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_8081059fb7da58d2423f5ba8138b19c21678a526efdfea15067fdffa2fe858c5","typeString":"literal_string \"Only EntryPoint\""},"value":"Only EntryPoint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8081059fb7da58d2423f5ba8138b19c21678a526efdfea15067fdffa2fe858c5","typeString":"literal_string \"Only EntryPoint\""}],"id":1150,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"488:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"488:61:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1160,"nodeType":"ExpressionStatement","src":"488:61:10"},{"id":1161,"nodeType":"PlaceholderStatement","src":"559:1:10"}]},"id":1163,"name":"onlyEntryPoint","nameLocation":"461:14:10","nodeType":"ModifierDefinition","parameters":{"id":1149,"nodeType":"ParameterList","parameters":[],"src":"475:2:10"},"src":"452:115:10","virtual":false,"visibility":"internal"},{"baseFunctions":[520],"body":{"id":1186,"nodeType":"Block","src":"792:77:10","statements":[{"expression":{"arguments":[{"id":1181,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"834:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation calldata"}},{"id":1182,"name":"userOpHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"842:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1183,"name":"maxCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"854:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1180,"name":"_validatePaymasterUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"809:24:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_UserOperation_$666_calldata_ptr_$_t_bytes32_$_t_uint256_$returns$_t_bytes_memory_ptr_$_t_uint256_$","typeString":"function (struct UserOperation calldata,bytes32,uint256) returns (bytes memory,uint256)"}},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"809:53:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_uint256_$","typeString":"tuple(bytes memory,uint256)"}},"functionReturnParameters":1179,"id":1185,"nodeType":"Return","src":"802:60:10"}]},"functionSelector":"f465c77e","id":1187,"implemented":true,"kind":"function","modifiers":[{"id":1174,"kind":"modifierInvocation","modifierName":{"id":1173,"name":"onlyEntryPoint","nameLocations":["722:14:10"],"nodeType":"IdentifierPath","referencedDeclaration":1163,"src":"722:14:10"},"nodeType":"ModifierInvocation","src":"722:14:10"}],"name":"validatePaymasterUserOp","nameLocation":"582:23:10","nodeType":"FunctionDefinition","overrides":{"id":1172,"nodeType":"OverrideSpecifier","overrides":[],"src":"713:8:10"},"parameters":{"id":1171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1166,"mutability":"mutable","name":"userOp","nameLocation":"638:6:10","nodeType":"VariableDeclaration","scope":1187,"src":"615:29:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":1165,"nodeType":"UserDefinedTypeName","pathNode":{"id":1164,"name":"UserOperation","nameLocations":["615:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":666,"src":"615:13:10"},"referencedDeclaration":666,"src":"615:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":1168,"mutability":"mutable","name":"userOpHash","nameLocation":"662:10:10","nodeType":"VariableDeclaration","scope":1187,"src":"654:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1167,"name":"bytes32","nodeType":"ElementaryTypeName","src":"654:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1170,"mutability":"mutable","name":"maxCost","nameLocation":"690:7:10","nodeType":"VariableDeclaration","scope":1187,"src":"682:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1169,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"605:98:10"},"returnParameters":{"id":1179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1176,"mutability":"mutable","name":"context","nameLocation":"759:7:10","nodeType":"VariableDeclaration","scope":1187,"src":"746:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1175,"name":"bytes","nodeType":"ElementaryTypeName","src":"746:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1178,"mutability":"mutable","name":"validationData","nameLocation":"776:14:10","nodeType":"VariableDeclaration","scope":1187,"src":"768:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1177,"name":"uint256","nodeType":"ElementaryTypeName","src":"768:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"745:46:10"},"scope":1232,"src":"573:296:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[531],"body":{"id":1206,"nodeType":"Block","src":"1026:54:10","statements":[{"expression":{"arguments":[{"id":1201,"name":"mode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"1044:4:10","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$505","typeString":"enum IPaymaster.PostOpMode"}},{"id":1202,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"1050:7:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":1203,"name":"actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"1059:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_PostOpMode_$505","typeString":"enum IPaymaster.PostOpMode"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1200,"name":"_postOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"1036:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_enum$_PostOpMode_$505_$_t_bytes_calldata_ptr_$_t_uint256_$returns$__$","typeString":"function (enum IPaymaster.PostOpMode,bytes calldata,uint256)"}},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1036:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1205,"nodeType":"ExpressionStatement","src":"1036:37:10"}]},"functionSelector":"a9a23409","id":1207,"implemented":true,"kind":"function","modifiers":[{"id":1198,"kind":"modifierInvocation","modifierName":{"id":1197,"name":"onlyEntryPoint","nameLocations":["1011:14:10"],"nodeType":"IdentifierPath","referencedDeclaration":1163,"src":"1011:14:10"},"nodeType":"ModifierInvocation","src":"1011:14:10"}],"name":"postOp","nameLocation":"884:6:10","nodeType":"FunctionDefinition","overrides":{"id":1196,"nodeType":"OverrideSpecifier","overrides":[],"src":"1002:8:10"},"parameters":{"id":1195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1190,"mutability":"mutable","name":"mode","nameLocation":"911:4:10","nodeType":"VariableDeclaration","scope":1207,"src":"900:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$505","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":1189,"nodeType":"UserDefinedTypeName","pathNode":{"id":1188,"name":"PostOpMode","nameLocations":["900:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":505,"src":"900:10:10"},"referencedDeclaration":505,"src":"900:10:10","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$505","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":1192,"mutability":"mutable","name":"context","nameLocation":"940:7:10","nodeType":"VariableDeclaration","scope":1207,"src":"925:22:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1191,"name":"bytes","nodeType":"ElementaryTypeName","src":"925:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1194,"mutability":"mutable","name":"actualGasCost","nameLocation":"965:13:10","nodeType":"VariableDeclaration","scope":1207,"src":"957:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1193,"name":"uint256","nodeType":"ElementaryTypeName","src":"957:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"890:94:10"},"returnParameters":{"id":1199,"nodeType":"ParameterList","parameters":[],"src":"1026:0:10"},"scope":1232,"src":"875:205:10","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"id":1221,"implemented":false,"kind":"function","modifiers":[],"name":"_validatePaymasterUserOp","nameLocation":"1095:24:10","nodeType":"FunctionDefinition","parameters":{"id":1215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1210,"mutability":"mutable","name":"userOp","nameLocation":"1152:6:10","nodeType":"VariableDeclaration","scope":1221,"src":"1129:29:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":1209,"nodeType":"UserDefinedTypeName","pathNode":{"id":1208,"name":"UserOperation","nameLocations":["1129:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":666,"src":"1129:13:10"},"referencedDeclaration":666,"src":"1129:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":1212,"mutability":"mutable","name":"userOpHash","nameLocation":"1176:10:10","nodeType":"VariableDeclaration","scope":1221,"src":"1168:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1168:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1214,"mutability":"mutable","name":"maxCost","nameLocation":"1204:7:10","nodeType":"VariableDeclaration","scope":1221,"src":"1196:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1213,"name":"uint256","nodeType":"ElementaryTypeName","src":"1196:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1119:98:10"},"returnParameters":{"id":1220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1217,"mutability":"mutable","name":"context","nameLocation":"1257:7:10","nodeType":"VariableDeclaration","scope":1221,"src":"1244:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1216,"name":"bytes","nodeType":"ElementaryTypeName","src":"1244:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1219,"mutability":"mutable","name":"validationData","nameLocation":"1274:14:10","nodeType":"VariableDeclaration","scope":1221,"src":"1266:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1218,"name":"uint256","nodeType":"ElementaryTypeName","src":"1266:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1243:46:10"},"scope":1232,"src":"1086:204:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":1231,"implemented":false,"kind":"function","modifiers":[],"name":"_postOp","nameLocation":"1305:7:10","nodeType":"FunctionDefinition","parameters":{"id":1229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1224,"mutability":"mutable","name":"mode","nameLocation":"1333:4:10","nodeType":"VariableDeclaration","scope":1231,"src":"1322:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$505","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":1223,"nodeType":"UserDefinedTypeName","pathNode":{"id":1222,"name":"PostOpMode","nameLocations":["1322:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":505,"src":"1322:10:10"},"referencedDeclaration":505,"src":"1322:10:10","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$505","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":1226,"mutability":"mutable","name":"context","nameLocation":"1362:7:10","nodeType":"VariableDeclaration","scope":1231,"src":"1347:22:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1225,"name":"bytes","nodeType":"ElementaryTypeName","src":"1347:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1228,"mutability":"mutable","name":"actualGasCost","nameLocation":"1387:13:10","nodeType":"VariableDeclaration","scope":1231,"src":"1379:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1227,"name":"uint256","nodeType":"ElementaryTypeName","src":"1379:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1312:94:10"},"returnParameters":{"id":1230,"nodeType":"ParameterList","parameters":[],"src":"1423:0:10"},"scope":1232,"src":"1296:128:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1233,"src":"264:1162:10","usedErrors":[],"usedEvents":[]}],"src":"32:1395:10"},"id":10}},"contracts":{"@account-abstraction/contracts/interfaces/IAggregator.sol":{"IAggregator":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"userOps","type":"tuple[]"}],"name":"aggregateSignatures","outputs":[{"internalType":"bytes","name":"aggregatedSignature","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"validateSignatures","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"}],"name":"validateUserOpSignature","outputs":[{"internalType":"bytes","name":"sigForUserOp","type":"bytes"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])":"275e2d79","validateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],bytes)":"e3563a4f","validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":"64c530cd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"}],\"name\":\"aggregateSignatures\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"aggregatedSignature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"validateSignatures\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"validateUserOpSignature\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"sigForUserOp\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])\":{\"params\":{\"userOps\":\"array of UserOperations to collect the signatures from.\"},\"returns\":{\"aggregatedSignature\":\"the aggregated signature\"}},\"validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"params\":{\"userOp\":\"the userOperation received from the user.\"},\"returns\":{\"sigForUserOp\":\"the value to put into the signature field of the userOp when calling handleOps.    (usually empty, unless account and aggregator support some kind of \\\"multisig\\\"\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])\":{\"notice\":\"aggregate multiple signatures into a single value. This method is called off-chain to calculate the signature to pass with handleOps() bundler MAY use optimized custom code perform this aggregation\"},\"validateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],bytes)\":{\"notice\":\"validate aggregated signature. revert if the aggregated signature does not match the given list of operations.\"},\"validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"validate signature of a single userOp This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\"}},\"notice\":\"Aggregated Signatures validator.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/IAggregator.sol\":\"IAggregator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746\",\"dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU\"]},\"@account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b\",\"dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP\"]},\"@account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c\",\"dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN\"]}},\"version\":1}"}},"@account-abstraction/contracts/interfaces/IEntryPoint.sol":{"IEntryPoint":{"abi":[{"inputs":[{"internalType":"uint256","name":"preOpGas","type":"uint256"},{"internalType":"uint256","name":"paid","type":"uint256"},{"internalType":"uint48","name":"validAfter","type":"uint48"},{"internalType":"uint48","name":"validUntil","type":"uint48"},{"internalType":"bool","name":"targetSuccess","type":"bool"},{"internalType":"bytes","name":"targetResult","type":"bytes"}],"name":"ExecutionResult","type":"error"},{"inputs":[{"internalType":"uint256","name":"opIndex","type":"uint256"},{"internalType":"string","name":"reason","type":"string"}],"name":"FailedOp","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"SenderAddressResult","type":"error"},{"inputs":[{"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureValidationFailed","type":"error"},{"inputs":[{"components":[{"internalType":"uint256","name":"preOpGas","type":"uint256"},{"internalType":"uint256","name":"prefund","type":"uint256"},{"internalType":"bool","name":"sigFailed","type":"bool"},{"internalType":"uint48","name":"validAfter","type":"uint48"},{"internalType":"uint48","name":"validUntil","type":"uint48"},{"internalType":"bytes","name":"paymasterContext","type":"bytes"}],"internalType":"struct IEntryPoint.ReturnInfo","name":"returnInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"senderInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"factoryInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"paymasterInfo","type":"tuple"}],"name":"ValidationResult","type":"error"},{"inputs":[{"components":[{"internalType":"uint256","name":"preOpGas","type":"uint256"},{"internalType":"uint256","name":"prefund","type":"uint256"},{"internalType":"bool","name":"sigFailed","type":"bool"},{"internalType":"uint48","name":"validAfter","type":"uint48"},{"internalType":"uint48","name":"validUntil","type":"uint48"},{"internalType":"bytes","name":"paymasterContext","type":"bytes"}],"internalType":"struct IEntryPoint.ReturnInfo","name":"returnInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"senderInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"factoryInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"paymasterInfo","type":"tuple"},{"components":[{"internalType":"address","name":"aggregator","type":"address"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"stakeInfo","type":"tuple"}],"internalType":"struct IEntryPoint.AggregatorStakeInfo","name":"aggregatorInfo","type":"tuple"}],"name":"ValidationResultWithAggregation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"factory","type":"address"},{"indexed":false,"internalType":"address","name":"paymaster","type":"address"}],"name":"AccountDeployed","type":"event"},{"anonymous":false,"inputs":[],"name":"BeforeExecution","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureAggregatorChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"paymaster","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"},{"indexed":false,"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"actualGasUsed","type":"uint256"}],"name":"UserOperationEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"revertReason","type":"bytes"}],"name":"UserOperationRevertReason","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"_unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint112","name":"deposit","type":"uint112"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"initCode","type":"bytes"}],"name":"getSenderAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"}],"name":"getUserOpHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"contract IAggregator","name":"aggregator","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct IEntryPoint.UserOpsPerAggregator[]","name":"opsPerAggregator","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleAggregatedOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"ops","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint192","name":"key","type":"uint192"}],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"op","type":"tuple"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"targetCallData","type":"bytes"}],"name":"simulateHandleOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"}],"name":"simulateValidation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","depositTo(address)":"b760faf9","getDepositInfo(address)":"5287ce12","getNonce(address,uint192)":"35567e1a","getSenderAddress(bytes)":"9b249f69","getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":"a6193531","handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)":"4b1d7cf5","handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)":"1fad948c","incrementNonce(uint192)":"0bd28e3b","simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)":"d6383f94","simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":"ee219423","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"preOpGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"bool\",\"name\":\"targetSuccess\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"targetResult\",\"type\":\"bytes\"}],\"name\":\"ExecutionResult\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"FailedOp\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SenderAddressResult\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureValidationFailed\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"preOpGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prefund\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sigFailed\",\"type\":\"bool\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"paymasterContext\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.ReturnInfo\",\"name\":\"returnInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"senderInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"factoryInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"paymasterInfo\",\"type\":\"tuple\"}],\"name\":\"ValidationResult\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"preOpGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prefund\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sigFailed\",\"type\":\"bool\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"paymasterContext\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.ReturnInfo\",\"name\":\"returnInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"senderInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"factoryInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"paymasterInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"stakeInfo\",\"type\":\"tuple\"}],\"internalType\":\"struct IEntryPoint.AggregatorStakeInfo\",\"name\":\"aggregatorInfo\",\"type\":\"tuple\"}],\"name\":\"ValidationResultWithAggregation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"}],\"name\":\"AccountDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"BeforeExecution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureAggregatorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasUsed\",\"type\":\"uint256\"}],\"name\":\"UserOperationEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertReason\",\"type\":\"bytes\"}],\"name\":\"UserOperationRevertReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint112\",\"name\":\"deposit\",\"type\":\"uint112\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"getSenderAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"getUserOpHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAggregator\",\"name\":\"aggregator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.UserOpsPerAggregator[]\",\"name\":\"opsPerAggregator\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleAggregatedOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"ops\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"op\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"targetCallData\",\"type\":\"bytes\"}],\"name\":\"simulateHandleOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"simulateValidation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"FailedOp(uint256,string)\":[{\"params\":{\"opIndex\":\"- index into the array of ops to the failed one (in simulateValidation, this is always zero)\",\"reason\":\"- revert reason      The string starts with a unique code \\\"AAmn\\\", where \\\"m\\\" is \\\"1\\\" for factory, \\\"2\\\" for account and \\\"3\\\" for paymaster issues,      so a failure can be attributed to the correct entity.   Should be caught in off-chain handleOps simulation and not happen on-chain.   Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\"}}],\"ValidationResult((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256))\":[{\"params\":{\"factoryInfo\":\"stake information about the factory (if any)\",\"paymasterInfo\":\"stake information about the paymaster (if any)\",\"returnInfo\":\"gas and time-range returned values\",\"senderInfo\":\"stake information about the sender\"}}],\"ValidationResultWithAggregation((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256),(address,(uint256,uint256)))\":[{\"params\":{\"aggregatorInfo\":\"signature aggregation info (if the account requires signature aggregator)      bundler MUST use it to verify the signature, or reject the UserOperation\",\"factoryInfo\":\"stake information about the factory (if any)\",\"paymasterInfo\":\"stake information about the paymaster (if any)\",\"returnInfo\":\"gas and time-range returned values\",\"senderInfo\":\"stake information about the sender\"}}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"params\":{\"factory\":\"the factory used to deploy this account (in the initCode)\",\"paymaster\":\"the paymaster used by this UserOp\",\"sender\":\"the account that is deployed\",\"userOpHash\":\"the userOp that deployed this account. UserOperationEvent will follow.\"}},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"params\":{\"nonce\":\"the nonce used in the request\",\"revertReason\":\"- the return bytes from the (reverted) call to \\\"callData\\\".\",\"sender\":\"the sender of this request\",\"userOpHash\":\"the request unique identifier.\"}}},\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"_unstakeDelaySec\":\"the new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"returns\":{\"_0\":\"the deposit (for gas payment) of the account\"}},\"getDepositInfo(address)\":{\"returns\":{\"info\":\"- full deposit information of given account\"}},\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}},\"getSenderAddress(bytes)\":{\"params\":{\"initCode\":\"the constructor code to be passed into the UserOperation.\"}},\"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)\":{\"params\":{\"beneficiary\":\"the address to receive the fees\",\"opsPerAggregator\":\"the operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)\"}},\"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)\":{\"params\":{\"beneficiary\":\"the address to receive the fees\",\"ops\":\"the operations to execute\"}},\"simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)\":{\"params\":{\"op\":\"the UserOperation to simulate\",\"target\":\"if nonzero, a target address to call after userop simulation. If called, the targetSuccess and targetResult        are set to the return from that call.\",\"targetCallData\":\"callData to pass to target address\"}},\"simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"details\":\"this method always revert. Successful result is ValidationResult error. other errors are failures.The node must also verify it doesn't use banned opcodes, and that it doesn't reference storage outside the account's data.\",\"params\":{\"userOp\":\"the user operation to validate.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\",\"withdrawAmount\":\"the amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"ExecutionResult(uint256,uint256,uint48,uint48,bool,bytes)\":[{\"notice\":\"return value of simulateHandleOp\"}],\"FailedOp(uint256,string)\":[{\"notice\":\"a custom revert error of handleOps, to identify the offending op.  NOTE: if simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\"}],\"SenderAddressResult(address)\":[{\"notice\":\"return value of getSenderAddress\"}],\"SignatureValidationFailed(address)\":[{\"notice\":\"error case when a signature aggregator fails to verify the aggregated signature it had created.\"}],\"ValidationResult((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256))\":[{\"notice\":\"Successful result from simulateValidation.\"}],\"ValidationResultWithAggregation((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256),(address,(uint256,uint256)))\":[{\"notice\":\"Successful result from simulateValidation, if the account returns a signature aggregator\"}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"notice\":\"account \\\"sender\\\" was deployed.\"},\"BeforeExecution()\":{\"notice\":\"an event emitted by handleOps(), before starting the execution loop. any event emitted before this event, is part of the validation.\"},\"SignatureAggregatorChanged(address)\":{\"notice\":\"signature aggregator used by the following UserOperationEvents within this bundle.\"},\"StakeLocked(address,uint256,uint256)\":{\"notice\":\"Emitted when stake or unstake delay are modified\"},\"StakeUnlocked(address,uint256)\":{\"notice\":\"Emitted once a stake is scheduled for withdrawal\"},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"notice\":\"An event emitted if the UserOperation \\\"callData\\\" reverted with non-zero length\"}},\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"depositTo(address)\":{\"notice\":\"add to the deposit of the given account\"},\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"getSenderAddress(bytes)\":{\"notice\":\"Get counterfactual sender address.  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation. this method always revert, and returns the address in SenderAddressResult error\"},\"getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"generate a request Id - unique identifier for this request. the request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\"},\"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperation with Aggregators\"},\"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperation. no signature aggregator is used. if any account requires an aggregator (that is, it returned an aggregator when performing simulateValidation), then handleAggregatedOps() must be used instead.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"},\"simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)\":{\"notice\":\"simulate full execution of a UserOperation (including both validation and target execution) this method will always revert with \\\"ExecutionResult\\\". it performs full validation of the UserOperation, but ignores signature error. an optional target address is called after the userop succeeds, and its value is returned (before the entire call is reverted) Note that in order to collect the the success/failure of the target call, it must be executed with trace enabled to track the emitted events.\"},\"simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"Simulate a call to account.validateUserOp and paymaster.validatePaymasterUserOp.\"},\"unlockStake()\":{\"notice\":\"attempt to unlock the stake. the value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"withdraw from the (unlocked) stake. must first call unlockStake and wait for the unstakeDelay to pass\"},\"withdrawTo(address,uint256)\":{\"notice\":\"withdraw from the deposit.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/IEntryPoint.sol\":\"IEntryPoint\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746\",\"dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU\"]},\"@account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b\",\"dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP\"]},\"@account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x3a90bf308819ed125fa4202f880999caff8a8686633b8ddb79a30ca240d5b8f8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d2d21cc92c2fdab2b58d21bc25d4cd0e8c284b922528a186b087b818d54bc6cf\",\"dweb:/ipfs/QmT1qrfuBjsv2rmRCDn8mgPXHp94hARJwzbcDuBLDTbFWd\"]},\"@account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2\",\"dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b\"]},\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3\",\"dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ\"]},\"@account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c\",\"dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN\"]}},\"version\":1}"}},"@account-abstraction/contracts/interfaces/INonceManager.sol":{"INonceManager":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint192","name":"key","type":"uint192"}],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getNonce(address,uint192)":"35567e1a","incrementNonce(uint192)":"0bd28e3b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/INonceManager.sol\":\"INonceManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2\",\"dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b\"]}},\"version\":1}"}},"@account-abstraction/contracts/interfaces/IPaymaster.sol":{"IPaymaster":{"abi":[{"inputs":[{"internalType":"enum IPaymaster.PostOpMode","name":"mode","type":"uint8"},{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"actualGasCost","type":"uint256"}],"name":"postOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"maxCost","type":"uint256"}],"name":"validatePaymasterUserOp","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"postOp(uint8,bytes,uint256)":"a9a23409","validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"f465c77e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"postOp(uint8,bytes,uint256)\":{\"params\":{\"actualGasCost\":\"- actual gas used so far (without this postOp call).\",\"context\":\"- the context value returned by validatePaymasterUserOp\",\"mode\":\"enum with the following options:      opSucceeded - user operation succeeded.      opReverted  - user op reverted. still has to pay for gas.      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.                       Now this is the 2nd call, after user's op was deliberately reverted.\"}},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"the maximum cost of this transaction (based on maximum gas and gas price from userOp)\",\"userOp\":\"the user operation\",\"userOpHash\":\"hash of the user's request data.\"},\"returns\":{\"context\":\"value to send to a postOp      zero length to signify postOp is not required.\",\"validationData\":\"signature and time-range of this operation, encoded the same as the return value of validateUserOperation      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,         otherwise, an address of an \\\"authorizer\\\" contract.      <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"      <6-byte> validAfter - first timestamp this operation is valid      Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"postOp(uint8,bytes,uint256)\":{\"notice\":\"post-operation handler. Must verify sender is the entryPoint\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted) The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"}},\"notice\":\"the interface exposed by a paymaster contract, who agrees to pay the gas for user's operations. a paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/IPaymaster.sol\":\"IPaymaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746\",\"dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU\"]},\"@account-abstraction/contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x36858ba8685024974f533530420688da3454d29996ebc42e410673a1ed2ec456\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://616cbcf51778b1961b7f20a547bec7efae6d1d565df0f651926241ed8bde9ad8\",\"dweb:/ipfs/QmaVsgffUUmeUJYgStvRr8cNZ1LBbrc3FYNLW4JT1dVLia\"]},\"@account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c\",\"dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN\"]}},\"version\":1}"}},"@account-abstraction/contracts/interfaces/IStakeManager.sol":{"IStakeManager":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"_unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint112","name":"deposit","type":"uint112"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","depositTo(address)":"b760faf9","getDepositInfo(address)":"5287ce12","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint112\",\"name\":\"deposit\",\"type\":\"uint112\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"_unstakeDelaySec\":\"the new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"returns\":{\"_0\":\"the deposit (for gas payment) of the account\"}},\"getDepositInfo(address)\":{\"returns\":{\"info\":\"- full deposit information of given account\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\",\"withdrawAmount\":\"the amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"StakeLocked(address,uint256,uint256)\":{\"notice\":\"Emitted when stake or unstake delay are modified\"},\"StakeUnlocked(address,uint256)\":{\"notice\":\"Emitted once a stake is scheduled for withdrawal\"}},\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"depositTo(address)\":{\"notice\":\"add to the deposit of the given account\"},\"unlockStake()\":{\"notice\":\"attempt to unlock the stake. the value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"withdraw from the (unlocked) stake. must first call unlockStake and wait for the unstakeDelay to pass\"},\"withdrawTo(address,uint256)\":{\"notice\":\"withdraw from the deposit.\"}},\"notice\":\"manage deposits and stakes. deposit is just a balance used to pay for UserOperations (either by a paymaster or an account) stake is value locked for at least \\\"unstakeDelay\\\" by the staked entity.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":\"IStakeManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3\",\"dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ\"]}},\"version\":1}"}},"@account-abstraction/contracts/interfaces/UserOperation.sol":{"UserOperationLib":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122022d2e1d93a4ae214d3f4c455e79e6ff166455b55bc4e67cb7afb3850cf3c882364736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xD2 0xE1 0xD9 GASPRICE BLOBBASEFEE 0xE2 EQ 0xD3 DELEGATECALL 0xC4 SSTORE 0xE7 SWAP15 PUSH16 0xF166455B55BC4E67CB7AFB3850CF3C88 0x23 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"1630:2115:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122022d2e1d93a4ae214d3f4c455e79e6ff166455b55bc4e67cb7afb3850cf3c882364736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xD2 0xE1 0xD9 GASPRICE BLOBBASEFEE 0xE2 EQ 0xD3 DELEGATECALL 0xC4 SSTORE 0xE7 SWAP15 PUSH16 0xF166455B55BC4E67CB7AFB3850CF3C88 0x23 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"1630:2115:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Utility functions helpful when working with UserOperation structs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/UserOperation.sol\":\"UserOperationLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746\",\"dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU\"]},\"@account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c\",\"dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"contracts/SmartPayPaymaster.sol":{"SmartPayPaymaster":{"abi":[{"inputs":[{"internalType":"contract IEntryPoint","name":"_entryPoint","type":"address"},{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"gasUsed","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"GasSponsored","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"entryPoint","outputs":[{"internalType":"contract IEntryPoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum IPaymaster.PostOpMode","name":"mode","type":"uint8"},{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"actualGasCost","type":"uint256"}],"name":"postOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"maxCost","type":"uint256"}],"name":"validatePaymasterUserOp","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_1045":{"entryPoint":null,"id":1045,"parameterSlots":2,"returnSlots":0},"@_1148":{"entryPoint":null,"id":1148,"parameterSlots":1,"returnSlots":0},"@_887":{"entryPoint":null,"id":887,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_983":{"entryPoint":242,"id":983,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":578,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_IEntryPoint_$478_fromMemory":{"entryPoint":534,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IEntryPoint_$478t_address_fromMemory":{"entryPoint":599,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":663,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":678,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":475,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IEntryPoint_$478":{"entryPoint":493,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":443,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":438,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":555,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_IEntryPoint_$478":{"entryPoint":511,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:2219:11","nodeType":"YulBlock","src":"0:2219:11","statements":[{"body":{"nativeSrc":"47:35:11","nodeType":"YulBlock","src":"47:35:11","statements":[{"nativeSrc":"57:19:11","nodeType":"YulAssignment","src":"57:19:11","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:11","nodeType":"YulLiteral","src":"73:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:11","nodeType":"YulIdentifier","src":"67:5:11"},"nativeSrc":"67:9:11","nodeType":"YulFunctionCall","src":"67:9:11"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:11","nodeType":"YulIdentifier","src":"57:6:11"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:11","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:11","nodeType":"YulTypedName","src":"40:6:11","type":""}],"src":"7:75:11"},{"body":{"nativeSrc":"177:28:11","nodeType":"YulBlock","src":"177:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:11","nodeType":"YulLiteral","src":"194:1:11","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:11","nodeType":"YulLiteral","src":"197:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:11","nodeType":"YulIdentifier","src":"187:6:11"},"nativeSrc":"187:12:11","nodeType":"YulFunctionCall","src":"187:12:11"},"nativeSrc":"187:12:11","nodeType":"YulExpressionStatement","src":"187:12:11"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:11","nodeType":"YulFunctionDefinition","src":"88:117:11"},{"body":{"nativeSrc":"300:28:11","nodeType":"YulBlock","src":"300:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:11","nodeType":"YulLiteral","src":"317:1:11","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:11","nodeType":"YulLiteral","src":"320:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:11","nodeType":"YulIdentifier","src":"310:6:11"},"nativeSrc":"310:12:11","nodeType":"YulFunctionCall","src":"310:12:11"},"nativeSrc":"310:12:11","nodeType":"YulExpressionStatement","src":"310:12:11"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:11","nodeType":"YulFunctionDefinition","src":"211:117:11"},{"body":{"nativeSrc":"379:81:11","nodeType":"YulBlock","src":"379:81:11","statements":[{"nativeSrc":"389:65:11","nodeType":"YulAssignment","src":"389:65:11","value":{"arguments":[{"name":"value","nativeSrc":"404:5:11","nodeType":"YulIdentifier","src":"404:5:11"},{"kind":"number","nativeSrc":"411:42:11","nodeType":"YulLiteral","src":"411:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:11","nodeType":"YulIdentifier","src":"400:3:11"},"nativeSrc":"400:54:11","nodeType":"YulFunctionCall","src":"400:54:11"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:11","nodeType":"YulIdentifier","src":"389:7:11"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:11","nodeType":"YulTypedName","src":"361:5:11","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:11","nodeType":"YulTypedName","src":"371:7:11","type":""}],"src":"334:126:11"},{"body":{"nativeSrc":"511:51:11","nodeType":"YulBlock","src":"511:51:11","statements":[{"nativeSrc":"521:35:11","nodeType":"YulAssignment","src":"521:35:11","value":{"arguments":[{"name":"value","nativeSrc":"550:5:11","nodeType":"YulIdentifier","src":"550:5:11"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:11","nodeType":"YulIdentifier","src":"532:17:11"},"nativeSrc":"532:24:11","nodeType":"YulFunctionCall","src":"532:24:11"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:11","nodeType":"YulIdentifier","src":"521:7:11"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:11","nodeType":"YulTypedName","src":"493:5:11","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:11","nodeType":"YulTypedName","src":"503:7:11","type":""}],"src":"466:96:11"},{"body":{"nativeSrc":"632:51:11","nodeType":"YulBlock","src":"632:51:11","statements":[{"nativeSrc":"642:35:11","nodeType":"YulAssignment","src":"642:35:11","value":{"arguments":[{"name":"value","nativeSrc":"671:5:11","nodeType":"YulIdentifier","src":"671:5:11"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"653:17:11","nodeType":"YulIdentifier","src":"653:17:11"},"nativeSrc":"653:24:11","nodeType":"YulFunctionCall","src":"653:24:11"},"variableNames":[{"name":"cleaned","nativeSrc":"642:7:11","nodeType":"YulIdentifier","src":"642:7:11"}]}]},"name":"cleanup_t_contract$_IEntryPoint_$478","nativeSrc":"568:115:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"614:5:11","nodeType":"YulTypedName","src":"614:5:11","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"624:7:11","nodeType":"YulTypedName","src":"624:7:11","type":""}],"src":"568:115:11"},{"body":{"nativeSrc":"751:98:11","nodeType":"YulBlock","src":"751:98:11","statements":[{"body":{"nativeSrc":"827:16:11","nodeType":"YulBlock","src":"827:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"836:1:11","nodeType":"YulLiteral","src":"836:1:11","type":"","value":"0"},{"kind":"number","nativeSrc":"839:1:11","nodeType":"YulLiteral","src":"839:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"829:6:11","nodeType":"YulIdentifier","src":"829:6:11"},"nativeSrc":"829:12:11","nodeType":"YulFunctionCall","src":"829:12:11"},"nativeSrc":"829:12:11","nodeType":"YulExpressionStatement","src":"829:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"774:5:11","nodeType":"YulIdentifier","src":"774:5:11"},{"arguments":[{"name":"value","nativeSrc":"818:5:11","nodeType":"YulIdentifier","src":"818:5:11"}],"functionName":{"name":"cleanup_t_contract$_IEntryPoint_$478","nativeSrc":"781:36:11","nodeType":"YulIdentifier","src":"781:36:11"},"nativeSrc":"781:43:11","nodeType":"YulFunctionCall","src":"781:43:11"}],"functionName":{"name":"eq","nativeSrc":"771:2:11","nodeType":"YulIdentifier","src":"771:2:11"},"nativeSrc":"771:54:11","nodeType":"YulFunctionCall","src":"771:54:11"}],"functionName":{"name":"iszero","nativeSrc":"764:6:11","nodeType":"YulIdentifier","src":"764:6:11"},"nativeSrc":"764:62:11","nodeType":"YulFunctionCall","src":"764:62:11"},"nativeSrc":"761:82:11","nodeType":"YulIf","src":"761:82:11"}]},"name":"validator_revert_t_contract$_IEntryPoint_$478","nativeSrc":"689:160:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"744:5:11","nodeType":"YulTypedName","src":"744:5:11","type":""}],"src":"689:160:11"},{"body":{"nativeSrc":"937:99:11","nodeType":"YulBlock","src":"937:99:11","statements":[{"nativeSrc":"947:22:11","nodeType":"YulAssignment","src":"947:22:11","value":{"arguments":[{"name":"offset","nativeSrc":"962:6:11","nodeType":"YulIdentifier","src":"962:6:11"}],"functionName":{"name":"mload","nativeSrc":"956:5:11","nodeType":"YulIdentifier","src":"956:5:11"},"nativeSrc":"956:13:11","nodeType":"YulFunctionCall","src":"956:13:11"},"variableNames":[{"name":"value","nativeSrc":"947:5:11","nodeType":"YulIdentifier","src":"947:5:11"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1024:5:11","nodeType":"YulIdentifier","src":"1024:5:11"}],"functionName":{"name":"validator_revert_t_contract$_IEntryPoint_$478","nativeSrc":"978:45:11","nodeType":"YulIdentifier","src":"978:45:11"},"nativeSrc":"978:52:11","nodeType":"YulFunctionCall","src":"978:52:11"},"nativeSrc":"978:52:11","nodeType":"YulExpressionStatement","src":"978:52:11"}]},"name":"abi_decode_t_contract$_IEntryPoint_$478_fromMemory","nativeSrc":"855:181:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"915:6:11","nodeType":"YulTypedName","src":"915:6:11","type":""},{"name":"end","nativeSrc":"923:3:11","nodeType":"YulTypedName","src":"923:3:11","type":""}],"returnVariables":[{"name":"value","nativeSrc":"931:5:11","nodeType":"YulTypedName","src":"931:5:11","type":""}],"src":"855:181:11"},{"body":{"nativeSrc":"1085:79:11","nodeType":"YulBlock","src":"1085:79:11","statements":[{"body":{"nativeSrc":"1142:16:11","nodeType":"YulBlock","src":"1142:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1151:1:11","nodeType":"YulLiteral","src":"1151:1:11","type":"","value":"0"},{"kind":"number","nativeSrc":"1154:1:11","nodeType":"YulLiteral","src":"1154:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1144:6:11","nodeType":"YulIdentifier","src":"1144:6:11"},"nativeSrc":"1144:12:11","nodeType":"YulFunctionCall","src":"1144:12:11"},"nativeSrc":"1144:12:11","nodeType":"YulExpressionStatement","src":"1144:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1108:5:11","nodeType":"YulIdentifier","src":"1108:5:11"},{"arguments":[{"name":"value","nativeSrc":"1133:5:11","nodeType":"YulIdentifier","src":"1133:5:11"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1115:17:11","nodeType":"YulIdentifier","src":"1115:17:11"},"nativeSrc":"1115:24:11","nodeType":"YulFunctionCall","src":"1115:24:11"}],"functionName":{"name":"eq","nativeSrc":"1105:2:11","nodeType":"YulIdentifier","src":"1105:2:11"},"nativeSrc":"1105:35:11","nodeType":"YulFunctionCall","src":"1105:35:11"}],"functionName":{"name":"iszero","nativeSrc":"1098:6:11","nodeType":"YulIdentifier","src":"1098:6:11"},"nativeSrc":"1098:43:11","nodeType":"YulFunctionCall","src":"1098:43:11"},"nativeSrc":"1095:63:11","nodeType":"YulIf","src":"1095:63:11"}]},"name":"validator_revert_t_address","nativeSrc":"1042:122:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1078:5:11","nodeType":"YulTypedName","src":"1078:5:11","type":""}],"src":"1042:122:11"},{"body":{"nativeSrc":"1233:80:11","nodeType":"YulBlock","src":"1233:80:11","statements":[{"nativeSrc":"1243:22:11","nodeType":"YulAssignment","src":"1243:22:11","value":{"arguments":[{"name":"offset","nativeSrc":"1258:6:11","nodeType":"YulIdentifier","src":"1258:6:11"}],"functionName":{"name":"mload","nativeSrc":"1252:5:11","nodeType":"YulIdentifier","src":"1252:5:11"},"nativeSrc":"1252:13:11","nodeType":"YulFunctionCall","src":"1252:13:11"},"variableNames":[{"name":"value","nativeSrc":"1243:5:11","nodeType":"YulIdentifier","src":"1243:5:11"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1301:5:11","nodeType":"YulIdentifier","src":"1301:5:11"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"1274:26:11","nodeType":"YulIdentifier","src":"1274:26:11"},"nativeSrc":"1274:33:11","nodeType":"YulFunctionCall","src":"1274:33:11"},"nativeSrc":"1274:33:11","nodeType":"YulExpressionStatement","src":"1274:33:11"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"1170:143:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1211:6:11","nodeType":"YulTypedName","src":"1211:6:11","type":""},{"name":"end","nativeSrc":"1219:3:11","nodeType":"YulTypedName","src":"1219:3:11","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1227:5:11","nodeType":"YulTypedName","src":"1227:5:11","type":""}],"src":"1170:143:11"},{"body":{"nativeSrc":"1432:432:11","nodeType":"YulBlock","src":"1432:432:11","statements":[{"body":{"nativeSrc":"1478:83:11","nodeType":"YulBlock","src":"1478:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1480:77:11","nodeType":"YulIdentifier","src":"1480:77:11"},"nativeSrc":"1480:79:11","nodeType":"YulFunctionCall","src":"1480:79:11"},"nativeSrc":"1480:79:11","nodeType":"YulExpressionStatement","src":"1480:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1453:7:11","nodeType":"YulIdentifier","src":"1453:7:11"},{"name":"headStart","nativeSrc":"1462:9:11","nodeType":"YulIdentifier","src":"1462:9:11"}],"functionName":{"name":"sub","nativeSrc":"1449:3:11","nodeType":"YulIdentifier","src":"1449:3:11"},"nativeSrc":"1449:23:11","nodeType":"YulFunctionCall","src":"1449:23:11"},{"kind":"number","nativeSrc":"1474:2:11","nodeType":"YulLiteral","src":"1474:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1445:3:11","nodeType":"YulIdentifier","src":"1445:3:11"},"nativeSrc":"1445:32:11","nodeType":"YulFunctionCall","src":"1445:32:11"},"nativeSrc":"1442:119:11","nodeType":"YulIf","src":"1442:119:11"},{"nativeSrc":"1571:147:11","nodeType":"YulBlock","src":"1571:147:11","statements":[{"nativeSrc":"1586:15:11","nodeType":"YulVariableDeclaration","src":"1586:15:11","value":{"kind":"number","nativeSrc":"1600:1:11","nodeType":"YulLiteral","src":"1600:1:11","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1590:6:11","nodeType":"YulTypedName","src":"1590:6:11","type":""}]},{"nativeSrc":"1615:93:11","nodeType":"YulAssignment","src":"1615:93:11","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1680:9:11","nodeType":"YulIdentifier","src":"1680:9:11"},{"name":"offset","nativeSrc":"1691:6:11","nodeType":"YulIdentifier","src":"1691:6:11"}],"functionName":{"name":"add","nativeSrc":"1676:3:11","nodeType":"YulIdentifier","src":"1676:3:11"},"nativeSrc":"1676:22:11","nodeType":"YulFunctionCall","src":"1676:22:11"},{"name":"dataEnd","nativeSrc":"1700:7:11","nodeType":"YulIdentifier","src":"1700:7:11"}],"functionName":{"name":"abi_decode_t_contract$_IEntryPoint_$478_fromMemory","nativeSrc":"1625:50:11","nodeType":"YulIdentifier","src":"1625:50:11"},"nativeSrc":"1625:83:11","nodeType":"YulFunctionCall","src":"1625:83:11"},"variableNames":[{"name":"value0","nativeSrc":"1615:6:11","nodeType":"YulIdentifier","src":"1615:6:11"}]}]},{"nativeSrc":"1728:129:11","nodeType":"YulBlock","src":"1728:129:11","statements":[{"nativeSrc":"1743:16:11","nodeType":"YulVariableDeclaration","src":"1743:16:11","value":{"kind":"number","nativeSrc":"1757:2:11","nodeType":"YulLiteral","src":"1757:2:11","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1747:6:11","nodeType":"YulTypedName","src":"1747:6:11","type":""}]},{"nativeSrc":"1773:74:11","nodeType":"YulAssignment","src":"1773:74:11","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1819:9:11","nodeType":"YulIdentifier","src":"1819:9:11"},{"name":"offset","nativeSrc":"1830:6:11","nodeType":"YulIdentifier","src":"1830:6:11"}],"functionName":{"name":"add","nativeSrc":"1815:3:11","nodeType":"YulIdentifier","src":"1815:3:11"},"nativeSrc":"1815:22:11","nodeType":"YulFunctionCall","src":"1815:22:11"},{"name":"dataEnd","nativeSrc":"1839:7:11","nodeType":"YulIdentifier","src":"1839:7:11"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1783:31:11","nodeType":"YulIdentifier","src":"1783:31:11"},"nativeSrc":"1783:64:11","nodeType":"YulFunctionCall","src":"1783:64:11"},"variableNames":[{"name":"value1","nativeSrc":"1773:6:11","nodeType":"YulIdentifier","src":"1773:6:11"}]}]}]},"name":"abi_decode_tuple_t_contract$_IEntryPoint_$478t_address_fromMemory","nativeSrc":"1319:545:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1394:9:11","nodeType":"YulTypedName","src":"1394:9:11","type":""},{"name":"dataEnd","nativeSrc":"1405:7:11","nodeType":"YulTypedName","src":"1405:7:11","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1417:6:11","nodeType":"YulTypedName","src":"1417:6:11","type":""},{"name":"value1","nativeSrc":"1425:6:11","nodeType":"YulTypedName","src":"1425:6:11","type":""}],"src":"1319:545:11"},{"body":{"nativeSrc":"1935:53:11","nodeType":"YulBlock","src":"1935:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1952:3:11","nodeType":"YulIdentifier","src":"1952:3:11"},{"arguments":[{"name":"value","nativeSrc":"1975:5:11","nodeType":"YulIdentifier","src":"1975:5:11"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1957:17:11","nodeType":"YulIdentifier","src":"1957:17:11"},"nativeSrc":"1957:24:11","nodeType":"YulFunctionCall","src":"1957:24:11"}],"functionName":{"name":"mstore","nativeSrc":"1945:6:11","nodeType":"YulIdentifier","src":"1945:6:11"},"nativeSrc":"1945:37:11","nodeType":"YulFunctionCall","src":"1945:37:11"},"nativeSrc":"1945:37:11","nodeType":"YulExpressionStatement","src":"1945:37:11"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"1870:118:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1923:5:11","nodeType":"YulTypedName","src":"1923:5:11","type":""},{"name":"pos","nativeSrc":"1930:3:11","nodeType":"YulTypedName","src":"1930:3:11","type":""}],"src":"1870:118:11"},{"body":{"nativeSrc":"2092:124:11","nodeType":"YulBlock","src":"2092:124:11","statements":[{"nativeSrc":"2102:26:11","nodeType":"YulAssignment","src":"2102:26:11","value":{"arguments":[{"name":"headStart","nativeSrc":"2114:9:11","nodeType":"YulIdentifier","src":"2114:9:11"},{"kind":"number","nativeSrc":"2125:2:11","nodeType":"YulLiteral","src":"2125:2:11","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2110:3:11","nodeType":"YulIdentifier","src":"2110:3:11"},"nativeSrc":"2110:18:11","nodeType":"YulFunctionCall","src":"2110:18:11"},"variableNames":[{"name":"tail","nativeSrc":"2102:4:11","nodeType":"YulIdentifier","src":"2102:4:11"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"2182:6:11","nodeType":"YulIdentifier","src":"2182:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"2195:9:11","nodeType":"YulIdentifier","src":"2195:9:11"},{"kind":"number","nativeSrc":"2206:1:11","nodeType":"YulLiteral","src":"2206:1:11","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2191:3:11","nodeType":"YulIdentifier","src":"2191:3:11"},"nativeSrc":"2191:17:11","nodeType":"YulFunctionCall","src":"2191:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"2138:43:11","nodeType":"YulIdentifier","src":"2138:43:11"},"nativeSrc":"2138:71:11","nodeType":"YulFunctionCall","src":"2138:71:11"},"nativeSrc":"2138:71:11","nodeType":"YulExpressionStatement","src":"2138:71:11"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"1994:222:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2064:9:11","nodeType":"YulTypedName","src":"2064:9:11","type":""},{"name":"value0","nativeSrc":"2076:6:11","nodeType":"YulTypedName","src":"2076:6:11","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2087:4:11","nodeType":"YulTypedName","src":"2087:4:11","type":""}],"src":"1994:222:11"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IEntryPoint_$478(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IEntryPoint_$478(value) {\n        if iszero(eq(value, cleanup_t_contract$_IEntryPoint_$478(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IEntryPoint_$478_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IEntryPoint_$478(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IEntryPoint_$478t_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IEntryPoint_$478_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a060405234801561001057600080fd5b50604051610fb9380380610fb983398181016040528101906100329190610257565b80828073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100db5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100d291906102a6565b60405180910390fd5b6100ea816100f260201b60201c565b5050506102c1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101e6826101bb565b9050919050565b60006101f8826101db565b9050919050565b610208816101ed565b811461021357600080fd5b50565b600081519050610225816101ff565b92915050565b610234816101db565b811461023f57600080fd5b50565b6000815190506102518161022b565b92915050565b6000806040838503121561026e5761026d6101b6565b5b600061027c85828601610216565b925050602061028d85828601610242565b9150509250929050565b6102a0816101db565b82525050565b60006020820190506102bb6000830184610297565b92915050565b608051610ccf6102ea6000396000818161029e0152818161033e01526103ec0152610ccf6000f3fe6080604052600436106100745760003560e01c8063a9a234091161004e578063a9a23409146100eb578063b0d691fe14610114578063f2fde38b1461013f578063f465c77e146101685761007b565b8063205c287814610080578063715018a6146100a95780638da5cb5b146100c05761007b565b3661007b57005b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a2919061072e565b6101a6565b005b3480156100b557600080fd5b506100be61025f565b005b3480156100cc57600080fd5b506100d5610273565b6040516100e2919061078f565b60405180910390f35b3480156100f757600080fd5b50610112600480360381019061010d9190610834565b61029c565b005b34801561012057600080fd5b5061012961033c565b6040516101369190610907565b60405180910390f35b34801561014b57600080fd5b506101666004803603810190610161919061094e565b610360565b005b34801561017457600080fd5b5061018f600480360381019061018a91906109d6565b6103e6565b60405161019d929190610ae4565b60405180910390f35b6101ae61048f565b60008273ffffffffffffffffffffffffffffffffffffffff16826040516101d490610b45565b60006040518083038185875af1925050503d8060008114610211576040519150601f19603f3d011682016040523d82523d6000602084013e610216565b606091505b505090508061025a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025190610bb7565b60405180910390fd5b505050565b61026761048f565b6102716000610516565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461032a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032190610c23565b60405180910390fd5b610336848484846105da565b50505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b61036861048f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103da5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016103d1919061078f565b60405180910390fd5b6103e381610516565b50565b606060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610478576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046f90610c23565b60405180910390fd5b610483858585610644565b91509150935093915050565b610497610688565b73ffffffffffffffffffffffffffffffffffffffff166104b5610273565b73ffffffffffffffffffffffffffffffffffffffff1614610514576104d8610688565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161050b919061078f565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600083838101906105eb9190610c43565b90508073ffffffffffffffffffffffffffffffffffffffff167fb3d8da13e2eec10930982ae94cc39cd56a1e686b864a50f632765647bdfe622b8342604051610635929190610c70565b60405180910390a25050505050565b6060600084600001602081019061065b919061094e565b60405160200161066b919061078f565b604051602081830303815290604052600091509150935093915050565b600033905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106c58261069a565b9050919050565b6106d5816106ba565b81146106e057600080fd5b50565b6000813590506106f2816106cc565b92915050565b6000819050919050565b61070b816106f8565b811461071657600080fd5b50565b60008135905061072881610702565b92915050565b6000806040838503121561074557610744610690565b5b6000610753858286016106e3565b925050602061076485828601610719565b9150509250929050565b60006107798261069a565b9050919050565b6107898161076e565b82525050565b60006020820190506107a46000830184610780565b92915050565b600381106107b757600080fd5b50565b6000813590506107c9816107aa565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126107f4576107f36107cf565b5b8235905067ffffffffffffffff811115610811576108106107d4565b5b60208301915083600182028301111561082d5761082c6107d9565b5b9250929050565b6000806000806060858703121561084e5761084d610690565b5b600061085c878288016107ba565b945050602085013567ffffffffffffffff81111561087d5761087c610695565b5b610889878288016107de565b9350935050604061089c87828801610719565b91505092959194509250565b6000819050919050565b60006108cd6108c86108c38461069a565b6108a8565b61069a565b9050919050565b60006108df826108b2565b9050919050565b60006108f1826108d4565b9050919050565b610901816108e6565b82525050565b600060208201905061091c60008301846108f8565b92915050565b61092b8161076e565b811461093657600080fd5b50565b60008135905061094881610922565b92915050565b60006020828403121561096457610963610690565b5b600061097284828501610939565b91505092915050565b600080fd5b600061016082840312156109975761099661097b565b5b81905092915050565b6000819050919050565b6109b3816109a0565b81146109be57600080fd5b50565b6000813590506109d0816109aa565b92915050565b6000806000606084860312156109ef576109ee610690565b5b600084013567ffffffffffffffff811115610a0d57610a0c610695565b5b610a1986828701610980565b9350506020610a2a868287016109c1565b9250506040610a3b86828701610719565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a7f578082015181840152602081019050610a64565b60008484015250505050565b6000601f19601f8301169050919050565b6000610aa782610a45565b610ab18185610a50565b9350610ac1818560208601610a61565b610aca81610a8b565b840191505092915050565b610ade816106f8565b82525050565b60006040820190508181036000830152610afe8185610a9c565b9050610b0d6020830184610ad5565b9392505050565b600081905092915050565b50565b6000610b2f600083610b14565b9150610b3a82610b1f565b600082019050919050565b6000610b5082610b22565b9150819050919050565b600082825260208201905092915050565b7f5769746864726177206661696c65640000000000000000000000000000000000600082015250565b6000610ba1600f83610b5a565b9150610bac82610b6b565b602082019050919050565b60006020820190508181036000830152610bd081610b94565b9050919050565b7f4f6e6c7920456e747279506f696e740000000000000000000000000000000000600082015250565b6000610c0d600f83610b5a565b9150610c1882610bd7565b602082019050919050565b60006020820190508181036000830152610c3c81610c00565b9050919050565b600060208284031215610c5957610c58610690565b5b6000610c67848285016106e3565b91505092915050565b6000604082019050610c856000830185610ad5565b610c926020830184610ad5565b939250505056fea26469706673582212205e077ec2a1df553b2bab3130dc349a73e01d2b63fdd99751d6e7e6994e15db9764736f6c634300081c0033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xFB9 CODESIZE SUB DUP1 PUSH2 0xFB9 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x257 JUMP JUMPDEST DUP1 DUP3 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDB JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEA DUP2 PUSH2 0xF2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E6 DUP3 PUSH2 0x1BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F8 DUP3 PUSH2 0x1DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x208 DUP2 PUSH2 0x1ED JUMP JUMPDEST DUP2 EQ PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x225 DUP2 PUSH2 0x1FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x234 DUP2 PUSH2 0x1DB JUMP JUMPDEST DUP2 EQ PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x251 DUP2 PUSH2 0x22B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26E JUMPI PUSH2 0x26D PUSH2 0x1B6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27C DUP6 DUP3 DUP7 ADD PUSH2 0x216 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x28D DUP6 DUP3 DUP7 ADD PUSH2 0x242 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A0 DUP2 PUSH2 0x1DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2BB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x297 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0xCCF PUSH2 0x2EA PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x29E ADD MSTORE DUP2 DUP2 PUSH2 0x33E ADD MSTORE PUSH2 0x3EC ADD MSTORE PUSH2 0xCCF PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x74 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA9A23409 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xA9A23409 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0xF465C77E EQ PUSH2 0x168 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x205C2878 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC0 JUMPI PUSH2 0x7B JUMP JUMPDEST CALLDATASIZE PUSH2 0x7B JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x72E JUMP JUMPDEST PUSH2 0x1A6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBE PUSH2 0x25F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD5 PUSH2 0x273 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x78F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x112 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x834 JUMP JUMPDEST PUSH2 0x29C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH2 0x33C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x907 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x94E JUMP JUMPDEST PUSH2 0x360 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x9D6 JUMP JUMPDEST PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP3 SWAP2 SWAP1 PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH2 0x48F JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP1 PUSH2 0xB45 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x211 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x216 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x25A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x251 SWAP1 PUSH2 0xBB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x267 PUSH2 0x48F JUMP JUMPDEST PUSH2 0x271 PUSH1 0x0 PUSH2 0x516 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x32A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x321 SWAP1 PUSH2 0xC23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x336 DUP5 DUP5 DUP5 DUP5 PUSH2 0x5DA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x368 PUSH2 0x48F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3DA JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0x78F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3E3 DUP2 PUSH2 0x516 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x478 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46F SWAP1 PUSH2 0xC23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x483 DUP6 DUP6 DUP6 PUSH2 0x644 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x497 PUSH2 0x688 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4B5 PUSH2 0x273 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x514 JUMPI PUSH2 0x4D8 PUSH2 0x688 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP2 SWAP1 PUSH2 0x78F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 DUP2 ADD SWAP1 PUSH2 0x5EB SWAP2 SWAP1 PUSH2 0xC43 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB3D8DA13E2EEC10930982AE94CC39CD56A1E686B864A50F632765647BDFE622B DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x635 SWAP3 SWAP2 SWAP1 PUSH2 0xC70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP5 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x65B SWAP2 SWAP1 PUSH2 0x94E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x66B SWAP2 SWAP1 PUSH2 0x78F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C5 DUP3 PUSH2 0x69A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6D5 DUP2 PUSH2 0x6BA JUMP JUMPDEST DUP2 EQ PUSH2 0x6E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6F2 DUP2 PUSH2 0x6CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x70B DUP2 PUSH2 0x6F8 JUMP JUMPDEST DUP2 EQ PUSH2 0x716 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x728 DUP2 PUSH2 0x702 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x745 JUMPI PUSH2 0x744 PUSH2 0x690 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x753 DUP6 DUP3 DUP7 ADD PUSH2 0x6E3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x764 DUP6 DUP3 DUP7 ADD PUSH2 0x719 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x779 DUP3 PUSH2 0x69A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x789 DUP2 PUSH2 0x76E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7A4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x780 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x7B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7C9 DUP2 PUSH2 0x7AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x7F4 JUMPI PUSH2 0x7F3 PUSH2 0x7CF JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x811 JUMPI PUSH2 0x810 PUSH2 0x7D4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x82D JUMPI PUSH2 0x82C PUSH2 0x7D9 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x84E JUMPI PUSH2 0x84D PUSH2 0x690 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x85C DUP8 DUP3 DUP9 ADD PUSH2 0x7BA JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x87D JUMPI PUSH2 0x87C PUSH2 0x695 JUMP JUMPDEST JUMPDEST PUSH2 0x889 DUP8 DUP3 DUP9 ADD PUSH2 0x7DE JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x40 PUSH2 0x89C DUP8 DUP3 DUP9 ADD PUSH2 0x719 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8CD PUSH2 0x8C8 PUSH2 0x8C3 DUP5 PUSH2 0x69A JUMP JUMPDEST PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0x69A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8DF DUP3 PUSH2 0x8B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F1 DUP3 PUSH2 0x8D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x901 DUP2 PUSH2 0x8E6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x91C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x92B DUP2 PUSH2 0x76E JUMP JUMPDEST DUP2 EQ PUSH2 0x936 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x948 DUP2 PUSH2 0x922 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x964 JUMPI PUSH2 0x963 PUSH2 0x690 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x972 DUP5 DUP3 DUP6 ADD PUSH2 0x939 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x997 JUMPI PUSH2 0x996 PUSH2 0x97B JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9B3 DUP2 PUSH2 0x9A0 JUMP JUMPDEST DUP2 EQ PUSH2 0x9BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9D0 DUP2 PUSH2 0x9AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9EF JUMPI PUSH2 0x9EE PUSH2 0x690 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA0D JUMPI PUSH2 0xA0C PUSH2 0x695 JUMP JUMPDEST JUMPDEST PUSH2 0xA19 DUP7 DUP3 DUP8 ADD PUSH2 0x980 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xA2A DUP7 DUP3 DUP8 ADD PUSH2 0x9C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xA3B DUP7 DUP3 DUP8 ADD PUSH2 0x719 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA7F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA64 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAA7 DUP3 PUSH2 0xA45 JUMP JUMPDEST PUSH2 0xAB1 DUP2 DUP6 PUSH2 0xA50 JUMP JUMPDEST SWAP4 POP PUSH2 0xAC1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA61 JUMP JUMPDEST PUSH2 0xACA DUP2 PUSH2 0xA8B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xADE DUP2 PUSH2 0x6F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAFE DUP2 DUP6 PUSH2 0xA9C JUMP JUMPDEST SWAP1 POP PUSH2 0xB0D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAD5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB2F PUSH1 0x0 DUP4 PUSH2 0xB14 JUMP JUMPDEST SWAP2 POP PUSH2 0xB3A DUP3 PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB50 DUP3 PUSH2 0xB22 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5769746864726177206661696C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBA1 PUSH1 0xF DUP4 PUSH2 0xB5A JUMP JUMPDEST SWAP2 POP PUSH2 0xBAC DUP3 PUSH2 0xB6B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBD0 DUP2 PUSH2 0xB94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C7920456E747279506F696E740000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC0D PUSH1 0xF DUP4 PUSH2 0xB5A JUMP JUMPDEST SWAP2 POP PUSH2 0xC18 DUP3 PUSH2 0xBD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC3C DUP2 PUSH2 0xC00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC59 JUMPI PUSH2 0xC58 PUSH2 0x690 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC67 DUP5 DUP3 DUP6 ADD PUSH2 0x6E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC85 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xAD5 JUMP JUMPDEST PUSH2 0xC92 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAD5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MCOPY SMOD PUSH31 0xC2A1DF553B2BAB3130DC349A73E01D2B63FDD99751D6E7E6994E15DB976473 PUSH16 0x6C634300081C00330000000000000000 ","sourceMap":"153:1106:9:-:0;;;303:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;411:12;386:11;428::10;415:24;;;;;;;;;;368:78;1297:1:7;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;303:128:9;;153:1106;;2912:187:7;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:11:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:115::-;624:7;653:24;671:5;653:24;:::i;:::-;642:35;;568:115;;;:::o;689:160::-;781:43;818:5;781:43;:::i;:::-;774:5;771:54;761:82;;839:1;836;829:12;761:82;689:160;:::o;855:181::-;931:5;962:6;956:13;947:22;;978:52;1024:5;978:52;:::i;:::-;855:181;;;;:::o;1042:122::-;1115:24;1133:5;1115:24;:::i;:::-;1108:5;1105:35;1095:63;;1154:1;1151;1144:12;1095:63;1042:122;:::o;1170:143::-;1227:5;1258:6;1252:13;1243:22;;1274:33;1301:5;1274:33;:::i;:::-;1170:143;;;;:::o;1319:545::-;1417:6;1425;1474:2;1462:9;1453:7;1449:23;1445:32;1442:119;;;1480:79;;:::i;:::-;1442:119;1600:1;1625:83;1700:7;1691:6;1680:9;1676:22;1625:83;:::i;:::-;1615:93;;1571:147;1757:2;1783:64;1839:7;1830:6;1819:9;1815:22;1783:64;:::i;:::-;1773:74;;1728:129;1319:545;;;;;:::o;1870:118::-;1957:24;1975:5;1957:24;:::i;:::-;1952:3;1945:37;1870:118;;:::o;1994:222::-;2087:4;2125:2;2114:9;2110:18;2102:26;;2138:71;2206:1;2195:9;2191:17;2182:6;2138:71;:::i;:::-;1994:222;;;;:::o;153:1106:9:-;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_1049":{"entryPoint":null,"id":1049,"parameterSlots":0,"returnSlots":0},"@_checkOwner_921":{"entryPoint":1167,"id":921,"parameterSlots":0,"returnSlots":0},"@_msgSender_996":{"entryPoint":1672,"id":996,"parameterSlots":0,"returnSlots":1},"@_postOp_1102":{"entryPoint":1498,"id":1102,"parameterSlots":4,"returnSlots":0},"@_transferOwnership_983":{"entryPoint":1302,"id":983,"parameterSlots":1,"returnSlots":0},"@_validatePaymasterUserOp_1073":{"entryPoint":1604,"id":1073,"parameterSlots":3,"returnSlots":2},"@entryPoint_1137":{"entryPoint":828,"id":1137,"parameterSlots":0,"returnSlots":0},"@owner_904":{"entryPoint":627,"id":904,"parameterSlots":0,"returnSlots":1},"@postOp_1207":{"entryPoint":668,"id":1207,"parameterSlots":4,"returnSlots":0},"@renounceOwnership_935":{"entryPoint":607,"id":935,"parameterSlots":0,"returnSlots":0},"@transferOwnership_963":{"entryPoint":864,"id":963,"parameterSlots":1,"returnSlots":0},"@validatePaymasterUserOp_1187":{"entryPoint":998,"id":1187,"parameterSlots":3,"returnSlots":2},"@withdrawTo_1126":{"entryPoint":422,"id":1126,"parameterSlots":2,"returnSlots":0},"abi_decode_t_address":{"entryPoint":2361,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_payable":{"entryPoint":1763,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":2497,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":2014,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_enum$_PostOpMode_$505":{"entryPoint":1978,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_UserOperation_$666_calldata_ptr":{"entryPoint":2432,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":1817,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2382,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payable":{"entryPoint":3139,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payablet_uint256":{"entryPoint":1838,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_enum$_PostOpMode_$505t_bytes_calldata_ptrt_uint256":{"entryPoint":2100,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_struct$_UserOperation_$666_calldata_ptrt_bytes32t_uint256":{"entryPoint":2518,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1920,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":2716,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_IEntryPoint_$478_to_t_address_fromStack":{"entryPoint":2296,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925_to_t_string_memory_ptr_fromStack":{"entryPoint":2964,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8081059fb7da58d2423f5ba8138b19c21678a526efdfea15067fdffa2fe858c5_to_t_string_memory_ptr_fromStack":{"entryPoint":3072,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2850,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2773,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":2885,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1935,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":2788,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_IEntryPoint_$478__to_t_address__fromStack_reversed":{"entryPoint":2311,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2999,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8081059fb7da58d2423f5ba8138b19c21678a526efdfea15067fdffa2fe858c5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3107,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":3184,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":2629,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":2640,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2836,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2906,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1902,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":1722,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":2464,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1690,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1784,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IEntryPoint_$478_to_t_address":{"entryPoint":2278,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":2260,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":2226,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2657,"id":null,"parameterSlots":3,"returnSlots":0},"identity":{"entryPoint":2216,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":2004,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1999,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d":{"entryPoint":2427,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":2009,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1685,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1680,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2699,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925":{"entryPoint":2923,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8081059fb7da58d2423f5ba8138b19c21678a526efdfea15067fdffa2fe858c5":{"entryPoint":3031,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":2847,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2338,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address_payable":{"entryPoint":1740,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":2474,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_enum$_PostOpMode_$505":{"entryPoint":1962,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1794,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:12842:11","nodeType":"YulBlock","src":"0:12842:11","statements":[{"body":{"nativeSrc":"47:35:11","nodeType":"YulBlock","src":"47:35:11","statements":[{"nativeSrc":"57:19:11","nodeType":"YulAssignment","src":"57:19:11","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:11","nodeType":"YulLiteral","src":"73:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:11","nodeType":"YulIdentifier","src":"67:5:11"},"nativeSrc":"67:9:11","nodeType":"YulFunctionCall","src":"67:9:11"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:11","nodeType":"YulIdentifier","src":"57:6:11"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:11","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:11","nodeType":"YulTypedName","src":"40:6:11","type":""}],"src":"7:75:11"},{"body":{"nativeSrc":"177:28:11","nodeType":"YulBlock","src":"177:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:11","nodeType":"YulLiteral","src":"194:1:11","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:11","nodeType":"YulLiteral","src":"197:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:11","nodeType":"YulIdentifier","src":"187:6:11"},"nativeSrc":"187:12:11","nodeType":"YulFunctionCall","src":"187:12:11"},"nativeSrc":"187:12:11","nodeType":"YulExpressionStatement","src":"187:12:11"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:11","nodeType":"YulFunctionDefinition","src":"88:117:11"},{"body":{"nativeSrc":"300:28:11","nodeType":"YulBlock","src":"300:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:11","nodeType":"YulLiteral","src":"317:1:11","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:11","nodeType":"YulLiteral","src":"320:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:11","nodeType":"YulIdentifier","src":"310:6:11"},"nativeSrc":"310:12:11","nodeType":"YulFunctionCall","src":"310:12:11"},"nativeSrc":"310:12:11","nodeType":"YulExpressionStatement","src":"310:12:11"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:11","nodeType":"YulFunctionDefinition","src":"211:117:11"},{"body":{"nativeSrc":"379:81:11","nodeType":"YulBlock","src":"379:81:11","statements":[{"nativeSrc":"389:65:11","nodeType":"YulAssignment","src":"389:65:11","value":{"arguments":[{"name":"value","nativeSrc":"404:5:11","nodeType":"YulIdentifier","src":"404:5:11"},{"kind":"number","nativeSrc":"411:42:11","nodeType":"YulLiteral","src":"411:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:11","nodeType":"YulIdentifier","src":"400:3:11"},"nativeSrc":"400:54:11","nodeType":"YulFunctionCall","src":"400:54:11"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:11","nodeType":"YulIdentifier","src":"389:7:11"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:11","nodeType":"YulTypedName","src":"361:5:11","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:11","nodeType":"YulTypedName","src":"371:7:11","type":""}],"src":"334:126:11"},{"body":{"nativeSrc":"519:51:11","nodeType":"YulBlock","src":"519:51:11","statements":[{"nativeSrc":"529:35:11","nodeType":"YulAssignment","src":"529:35:11","value":{"arguments":[{"name":"value","nativeSrc":"558:5:11","nodeType":"YulIdentifier","src":"558:5:11"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"540:17:11","nodeType":"YulIdentifier","src":"540:17:11"},"nativeSrc":"540:24:11","nodeType":"YulFunctionCall","src":"540:24:11"},"variableNames":[{"name":"cleaned","nativeSrc":"529:7:11","nodeType":"YulIdentifier","src":"529:7:11"}]}]},"name":"cleanup_t_address_payable","nativeSrc":"466:104:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"501:5:11","nodeType":"YulTypedName","src":"501:5:11","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"511:7:11","nodeType":"YulTypedName","src":"511:7:11","type":""}],"src":"466:104:11"},{"body":{"nativeSrc":"627:87:11","nodeType":"YulBlock","src":"627:87:11","statements":[{"body":{"nativeSrc":"692:16:11","nodeType":"YulBlock","src":"692:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"701:1:11","nodeType":"YulLiteral","src":"701:1:11","type":"","value":"0"},{"kind":"number","nativeSrc":"704:1:11","nodeType":"YulLiteral","src":"704:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"694:6:11","nodeType":"YulIdentifier","src":"694:6:11"},"nativeSrc":"694:12:11","nodeType":"YulFunctionCall","src":"694:12:11"},"nativeSrc":"694:12:11","nodeType":"YulExpressionStatement","src":"694:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"650:5:11","nodeType":"YulIdentifier","src":"650:5:11"},{"arguments":[{"name":"value","nativeSrc":"683:5:11","nodeType":"YulIdentifier","src":"683:5:11"}],"functionName":{"name":"cleanup_t_address_payable","nativeSrc":"657:25:11","nodeType":"YulIdentifier","src":"657:25:11"},"nativeSrc":"657:32:11","nodeType":"YulFunctionCall","src":"657:32:11"}],"functionName":{"name":"eq","nativeSrc":"647:2:11","nodeType":"YulIdentifier","src":"647:2:11"},"nativeSrc":"647:43:11","nodeType":"YulFunctionCall","src":"647:43:11"}],"functionName":{"name":"iszero","nativeSrc":"640:6:11","nodeType":"YulIdentifier","src":"640:6:11"},"nativeSrc":"640:51:11","nodeType":"YulFunctionCall","src":"640:51:11"},"nativeSrc":"637:71:11","nodeType":"YulIf","src":"637:71:11"}]},"name":"validator_revert_t_address_payable","nativeSrc":"576:138:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"620:5:11","nodeType":"YulTypedName","src":"620:5:11","type":""}],"src":"576:138:11"},{"body":{"nativeSrc":"780:95:11","nodeType":"YulBlock","src":"780:95:11","statements":[{"nativeSrc":"790:29:11","nodeType":"YulAssignment","src":"790:29:11","value":{"arguments":[{"name":"offset","nativeSrc":"812:6:11","nodeType":"YulIdentifier","src":"812:6:11"}],"functionName":{"name":"calldataload","nativeSrc":"799:12:11","nodeType":"YulIdentifier","src":"799:12:11"},"nativeSrc":"799:20:11","nodeType":"YulFunctionCall","src":"799:20:11"},"variableNames":[{"name":"value","nativeSrc":"790:5:11","nodeType":"YulIdentifier","src":"790:5:11"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"863:5:11","nodeType":"YulIdentifier","src":"863:5:11"}],"functionName":{"name":"validator_revert_t_address_payable","nativeSrc":"828:34:11","nodeType":"YulIdentifier","src":"828:34:11"},"nativeSrc":"828:41:11","nodeType":"YulFunctionCall","src":"828:41:11"},"nativeSrc":"828:41:11","nodeType":"YulExpressionStatement","src":"828:41:11"}]},"name":"abi_decode_t_address_payable","nativeSrc":"720:155:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"758:6:11","nodeType":"YulTypedName","src":"758:6:11","type":""},{"name":"end","nativeSrc":"766:3:11","nodeType":"YulTypedName","src":"766:3:11","type":""}],"returnVariables":[{"name":"value","nativeSrc":"774:5:11","nodeType":"YulTypedName","src":"774:5:11","type":""}],"src":"720:155:11"},{"body":{"nativeSrc":"926:32:11","nodeType":"YulBlock","src":"926:32:11","statements":[{"nativeSrc":"936:16:11","nodeType":"YulAssignment","src":"936:16:11","value":{"name":"value","nativeSrc":"947:5:11","nodeType":"YulIdentifier","src":"947:5:11"},"variableNames":[{"name":"cleaned","nativeSrc":"936:7:11","nodeType":"YulIdentifier","src":"936:7:11"}]}]},"name":"cleanup_t_uint256","nativeSrc":"881:77:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"908:5:11","nodeType":"YulTypedName","src":"908:5:11","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"918:7:11","nodeType":"YulTypedName","src":"918:7:11","type":""}],"src":"881:77:11"},{"body":{"nativeSrc":"1007:79:11","nodeType":"YulBlock","src":"1007:79:11","statements":[{"body":{"nativeSrc":"1064:16:11","nodeType":"YulBlock","src":"1064:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1073:1:11","nodeType":"YulLiteral","src":"1073:1:11","type":"","value":"0"},{"kind":"number","nativeSrc":"1076:1:11","nodeType":"YulLiteral","src":"1076:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1066:6:11","nodeType":"YulIdentifier","src":"1066:6:11"},"nativeSrc":"1066:12:11","nodeType":"YulFunctionCall","src":"1066:12:11"},"nativeSrc":"1066:12:11","nodeType":"YulExpressionStatement","src":"1066:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1030:5:11","nodeType":"YulIdentifier","src":"1030:5:11"},{"arguments":[{"name":"value","nativeSrc":"1055:5:11","nodeType":"YulIdentifier","src":"1055:5:11"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1037:17:11","nodeType":"YulIdentifier","src":"1037:17:11"},"nativeSrc":"1037:24:11","nodeType":"YulFunctionCall","src":"1037:24:11"}],"functionName":{"name":"eq","nativeSrc":"1027:2:11","nodeType":"YulIdentifier","src":"1027:2:11"},"nativeSrc":"1027:35:11","nodeType":"YulFunctionCall","src":"1027:35:11"}],"functionName":{"name":"iszero","nativeSrc":"1020:6:11","nodeType":"YulIdentifier","src":"1020:6:11"},"nativeSrc":"1020:43:11","nodeType":"YulFunctionCall","src":"1020:43:11"},"nativeSrc":"1017:63:11","nodeType":"YulIf","src":"1017:63:11"}]},"name":"validator_revert_t_uint256","nativeSrc":"964:122:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1000:5:11","nodeType":"YulTypedName","src":"1000:5:11","type":""}],"src":"964:122:11"},{"body":{"nativeSrc":"1144:87:11","nodeType":"YulBlock","src":"1144:87:11","statements":[{"nativeSrc":"1154:29:11","nodeType":"YulAssignment","src":"1154:29:11","value":{"arguments":[{"name":"offset","nativeSrc":"1176:6:11","nodeType":"YulIdentifier","src":"1176:6:11"}],"functionName":{"name":"calldataload","nativeSrc":"1163:12:11","nodeType":"YulIdentifier","src":"1163:12:11"},"nativeSrc":"1163:20:11","nodeType":"YulFunctionCall","src":"1163:20:11"},"variableNames":[{"name":"value","nativeSrc":"1154:5:11","nodeType":"YulIdentifier","src":"1154:5:11"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1219:5:11","nodeType":"YulIdentifier","src":"1219:5:11"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"1192:26:11","nodeType":"YulIdentifier","src":"1192:26:11"},"nativeSrc":"1192:33:11","nodeType":"YulFunctionCall","src":"1192:33:11"},"nativeSrc":"1192:33:11","nodeType":"YulExpressionStatement","src":"1192:33:11"}]},"name":"abi_decode_t_uint256","nativeSrc":"1092:139:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1122:6:11","nodeType":"YulTypedName","src":"1122:6:11","type":""},{"name":"end","nativeSrc":"1130:3:11","nodeType":"YulTypedName","src":"1130:3:11","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1138:5:11","nodeType":"YulTypedName","src":"1138:5:11","type":""}],"src":"1092:139:11"},{"body":{"nativeSrc":"1328:399:11","nodeType":"YulBlock","src":"1328:399:11","statements":[{"body":{"nativeSrc":"1374:83:11","nodeType":"YulBlock","src":"1374:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1376:77:11","nodeType":"YulIdentifier","src":"1376:77:11"},"nativeSrc":"1376:79:11","nodeType":"YulFunctionCall","src":"1376:79:11"},"nativeSrc":"1376:79:11","nodeType":"YulExpressionStatement","src":"1376:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1349:7:11","nodeType":"YulIdentifier","src":"1349:7:11"},{"name":"headStart","nativeSrc":"1358:9:11","nodeType":"YulIdentifier","src":"1358:9:11"}],"functionName":{"name":"sub","nativeSrc":"1345:3:11","nodeType":"YulIdentifier","src":"1345:3:11"},"nativeSrc":"1345:23:11","nodeType":"YulFunctionCall","src":"1345:23:11"},{"kind":"number","nativeSrc":"1370:2:11","nodeType":"YulLiteral","src":"1370:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1341:3:11","nodeType":"YulIdentifier","src":"1341:3:11"},"nativeSrc":"1341:32:11","nodeType":"YulFunctionCall","src":"1341:32:11"},"nativeSrc":"1338:119:11","nodeType":"YulIf","src":"1338:119:11"},{"nativeSrc":"1467:125:11","nodeType":"YulBlock","src":"1467:125:11","statements":[{"nativeSrc":"1482:15:11","nodeType":"YulVariableDeclaration","src":"1482:15:11","value":{"kind":"number","nativeSrc":"1496:1:11","nodeType":"YulLiteral","src":"1496:1:11","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1486:6:11","nodeType":"YulTypedName","src":"1486:6:11","type":""}]},{"nativeSrc":"1511:71:11","nodeType":"YulAssignment","src":"1511:71:11","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1554:9:11","nodeType":"YulIdentifier","src":"1554:9:11"},{"name":"offset","nativeSrc":"1565:6:11","nodeType":"YulIdentifier","src":"1565:6:11"}],"functionName":{"name":"add","nativeSrc":"1550:3:11","nodeType":"YulIdentifier","src":"1550:3:11"},"nativeSrc":"1550:22:11","nodeType":"YulFunctionCall","src":"1550:22:11"},{"name":"dataEnd","nativeSrc":"1574:7:11","nodeType":"YulIdentifier","src":"1574:7:11"}],"functionName":{"name":"abi_decode_t_address_payable","nativeSrc":"1521:28:11","nodeType":"YulIdentifier","src":"1521:28:11"},"nativeSrc":"1521:61:11","nodeType":"YulFunctionCall","src":"1521:61:11"},"variableNames":[{"name":"value0","nativeSrc":"1511:6:11","nodeType":"YulIdentifier","src":"1511:6:11"}]}]},{"nativeSrc":"1602:118:11","nodeType":"YulBlock","src":"1602:118:11","statements":[{"nativeSrc":"1617:16:11","nodeType":"YulVariableDeclaration","src":"1617:16:11","value":{"kind":"number","nativeSrc":"1631:2:11","nodeType":"YulLiteral","src":"1631:2:11","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1621:6:11","nodeType":"YulTypedName","src":"1621:6:11","type":""}]},{"nativeSrc":"1647:63:11","nodeType":"YulAssignment","src":"1647:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1682:9:11","nodeType":"YulIdentifier","src":"1682:9:11"},{"name":"offset","nativeSrc":"1693:6:11","nodeType":"YulIdentifier","src":"1693:6:11"}],"functionName":{"name":"add","nativeSrc":"1678:3:11","nodeType":"YulIdentifier","src":"1678:3:11"},"nativeSrc":"1678:22:11","nodeType":"YulFunctionCall","src":"1678:22:11"},{"name":"dataEnd","nativeSrc":"1702:7:11","nodeType":"YulIdentifier","src":"1702:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"1657:20:11","nodeType":"YulIdentifier","src":"1657:20:11"},"nativeSrc":"1657:53:11","nodeType":"YulFunctionCall","src":"1657:53:11"},"variableNames":[{"name":"value1","nativeSrc":"1647:6:11","nodeType":"YulIdentifier","src":"1647:6:11"}]}]}]},"name":"abi_decode_tuple_t_address_payablet_uint256","nativeSrc":"1237:490:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1290:9:11","nodeType":"YulTypedName","src":"1290:9:11","type":""},{"name":"dataEnd","nativeSrc":"1301:7:11","nodeType":"YulTypedName","src":"1301:7:11","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1313:6:11","nodeType":"YulTypedName","src":"1313:6:11","type":""},{"name":"value1","nativeSrc":"1321:6:11","nodeType":"YulTypedName","src":"1321:6:11","type":""}],"src":"1237:490:11"},{"body":{"nativeSrc":"1778:51:11","nodeType":"YulBlock","src":"1778:51:11","statements":[{"nativeSrc":"1788:35:11","nodeType":"YulAssignment","src":"1788:35:11","value":{"arguments":[{"name":"value","nativeSrc":"1817:5:11","nodeType":"YulIdentifier","src":"1817:5:11"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1799:17:11","nodeType":"YulIdentifier","src":"1799:17:11"},"nativeSrc":"1799:24:11","nodeType":"YulFunctionCall","src":"1799:24:11"},"variableNames":[{"name":"cleaned","nativeSrc":"1788:7:11","nodeType":"YulIdentifier","src":"1788:7:11"}]}]},"name":"cleanup_t_address","nativeSrc":"1733:96:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1760:5:11","nodeType":"YulTypedName","src":"1760:5:11","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1770:7:11","nodeType":"YulTypedName","src":"1770:7:11","type":""}],"src":"1733:96:11"},{"body":{"nativeSrc":"1900:53:11","nodeType":"YulBlock","src":"1900:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1917:3:11","nodeType":"YulIdentifier","src":"1917:3:11"},{"arguments":[{"name":"value","nativeSrc":"1940:5:11","nodeType":"YulIdentifier","src":"1940:5:11"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1922:17:11","nodeType":"YulIdentifier","src":"1922:17:11"},"nativeSrc":"1922:24:11","nodeType":"YulFunctionCall","src":"1922:24:11"}],"functionName":{"name":"mstore","nativeSrc":"1910:6:11","nodeType":"YulIdentifier","src":"1910:6:11"},"nativeSrc":"1910:37:11","nodeType":"YulFunctionCall","src":"1910:37:11"},"nativeSrc":"1910:37:11","nodeType":"YulExpressionStatement","src":"1910:37:11"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"1835:118:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1888:5:11","nodeType":"YulTypedName","src":"1888:5:11","type":""},{"name":"pos","nativeSrc":"1895:3:11","nodeType":"YulTypedName","src":"1895:3:11","type":""}],"src":"1835:118:11"},{"body":{"nativeSrc":"2057:124:11","nodeType":"YulBlock","src":"2057:124:11","statements":[{"nativeSrc":"2067:26:11","nodeType":"YulAssignment","src":"2067:26:11","value":{"arguments":[{"name":"headStart","nativeSrc":"2079:9:11","nodeType":"YulIdentifier","src":"2079:9:11"},{"kind":"number","nativeSrc":"2090:2:11","nodeType":"YulLiteral","src":"2090:2:11","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2075:3:11","nodeType":"YulIdentifier","src":"2075:3:11"},"nativeSrc":"2075:18:11","nodeType":"YulFunctionCall","src":"2075:18:11"},"variableNames":[{"name":"tail","nativeSrc":"2067:4:11","nodeType":"YulIdentifier","src":"2067:4:11"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"2147:6:11","nodeType":"YulIdentifier","src":"2147:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"2160:9:11","nodeType":"YulIdentifier","src":"2160:9:11"},{"kind":"number","nativeSrc":"2171:1:11","nodeType":"YulLiteral","src":"2171:1:11","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2156:3:11","nodeType":"YulIdentifier","src":"2156:3:11"},"nativeSrc":"2156:17:11","nodeType":"YulFunctionCall","src":"2156:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"2103:43:11","nodeType":"YulIdentifier","src":"2103:43:11"},"nativeSrc":"2103:71:11","nodeType":"YulFunctionCall","src":"2103:71:11"},"nativeSrc":"2103:71:11","nodeType":"YulExpressionStatement","src":"2103:71:11"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"1959:222:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2029:9:11","nodeType":"YulTypedName","src":"2029:9:11","type":""},{"name":"value0","nativeSrc":"2041:6:11","nodeType":"YulTypedName","src":"2041:6:11","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2052:4:11","nodeType":"YulTypedName","src":"2052:4:11","type":""}],"src":"1959:222:11"},{"body":{"nativeSrc":"2244:56:11","nodeType":"YulBlock","src":"2244:56:11","statements":[{"body":{"nativeSrc":"2278:16:11","nodeType":"YulBlock","src":"2278:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2287:1:11","nodeType":"YulLiteral","src":"2287:1:11","type":"","value":"0"},{"kind":"number","nativeSrc":"2290:1:11","nodeType":"YulLiteral","src":"2290:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2280:6:11","nodeType":"YulIdentifier","src":"2280:6:11"},"nativeSrc":"2280:12:11","nodeType":"YulFunctionCall","src":"2280:12:11"},"nativeSrc":"2280:12:11","nodeType":"YulExpressionStatement","src":"2280:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2267:5:11","nodeType":"YulIdentifier","src":"2267:5:11"},{"kind":"number","nativeSrc":"2274:1:11","nodeType":"YulLiteral","src":"2274:1:11","type":"","value":"3"}],"functionName":{"name":"lt","nativeSrc":"2264:2:11","nodeType":"YulIdentifier","src":"2264:2:11"},"nativeSrc":"2264:12:11","nodeType":"YulFunctionCall","src":"2264:12:11"}],"functionName":{"name":"iszero","nativeSrc":"2257:6:11","nodeType":"YulIdentifier","src":"2257:6:11"},"nativeSrc":"2257:20:11","nodeType":"YulFunctionCall","src":"2257:20:11"},"nativeSrc":"2254:40:11","nodeType":"YulIf","src":"2254:40:11"}]},"name":"validator_revert_t_enum$_PostOpMode_$505","nativeSrc":"2187:113:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2237:5:11","nodeType":"YulTypedName","src":"2237:5:11","type":""}],"src":"2187:113:11"},{"body":{"nativeSrc":"2372:101:11","nodeType":"YulBlock","src":"2372:101:11","statements":[{"nativeSrc":"2382:29:11","nodeType":"YulAssignment","src":"2382:29:11","value":{"arguments":[{"name":"offset","nativeSrc":"2404:6:11","nodeType":"YulIdentifier","src":"2404:6:11"}],"functionName":{"name":"calldataload","nativeSrc":"2391:12:11","nodeType":"YulIdentifier","src":"2391:12:11"},"nativeSrc":"2391:20:11","nodeType":"YulFunctionCall","src":"2391:20:11"},"variableNames":[{"name":"value","nativeSrc":"2382:5:11","nodeType":"YulIdentifier","src":"2382:5:11"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2461:5:11","nodeType":"YulIdentifier","src":"2461:5:11"}],"functionName":{"name":"validator_revert_t_enum$_PostOpMode_$505","nativeSrc":"2420:40:11","nodeType":"YulIdentifier","src":"2420:40:11"},"nativeSrc":"2420:47:11","nodeType":"YulFunctionCall","src":"2420:47:11"},"nativeSrc":"2420:47:11","nodeType":"YulExpressionStatement","src":"2420:47:11"}]},"name":"abi_decode_t_enum$_PostOpMode_$505","nativeSrc":"2306:167:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2350:6:11","nodeType":"YulTypedName","src":"2350:6:11","type":""},{"name":"end","nativeSrc":"2358:3:11","nodeType":"YulTypedName","src":"2358:3:11","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2366:5:11","nodeType":"YulTypedName","src":"2366:5:11","type":""}],"src":"2306:167:11"},{"body":{"nativeSrc":"2568:28:11","nodeType":"YulBlock","src":"2568:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2585:1:11","nodeType":"YulLiteral","src":"2585:1:11","type":"","value":"0"},{"kind":"number","nativeSrc":"2588:1:11","nodeType":"YulLiteral","src":"2588:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2578:6:11","nodeType":"YulIdentifier","src":"2578:6:11"},"nativeSrc":"2578:12:11","nodeType":"YulFunctionCall","src":"2578:12:11"},"nativeSrc":"2578:12:11","nodeType":"YulExpressionStatement","src":"2578:12:11"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"2479:117:11","nodeType":"YulFunctionDefinition","src":"2479:117:11"},{"body":{"nativeSrc":"2691:28:11","nodeType":"YulBlock","src":"2691:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2708:1:11","nodeType":"YulLiteral","src":"2708:1:11","type":"","value":"0"},{"kind":"number","nativeSrc":"2711:1:11","nodeType":"YulLiteral","src":"2711:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2701:6:11","nodeType":"YulIdentifier","src":"2701:6:11"},"nativeSrc":"2701:12:11","nodeType":"YulFunctionCall","src":"2701:12:11"},"nativeSrc":"2701:12:11","nodeType":"YulExpressionStatement","src":"2701:12:11"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"2602:117:11","nodeType":"YulFunctionDefinition","src":"2602:117:11"},{"body":{"nativeSrc":"2814:28:11","nodeType":"YulBlock","src":"2814:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2831:1:11","nodeType":"YulLiteral","src":"2831:1:11","type":"","value":"0"},{"kind":"number","nativeSrc":"2834:1:11","nodeType":"YulLiteral","src":"2834:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2824:6:11","nodeType":"YulIdentifier","src":"2824:6:11"},"nativeSrc":"2824:12:11","nodeType":"YulFunctionCall","src":"2824:12:11"},"nativeSrc":"2824:12:11","nodeType":"YulExpressionStatement","src":"2824:12:11"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"2725:117:11","nodeType":"YulFunctionDefinition","src":"2725:117:11"},{"body":{"nativeSrc":"2935:478:11","nodeType":"YulBlock","src":"2935:478:11","statements":[{"body":{"nativeSrc":"2984:83:11","nodeType":"YulBlock","src":"2984:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"2986:77:11","nodeType":"YulIdentifier","src":"2986:77:11"},"nativeSrc":"2986:79:11","nodeType":"YulFunctionCall","src":"2986:79:11"},"nativeSrc":"2986:79:11","nodeType":"YulExpressionStatement","src":"2986:79:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"2963:6:11","nodeType":"YulIdentifier","src":"2963:6:11"},{"kind":"number","nativeSrc":"2971:4:11","nodeType":"YulLiteral","src":"2971:4:11","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2959:3:11","nodeType":"YulIdentifier","src":"2959:3:11"},"nativeSrc":"2959:17:11","nodeType":"YulFunctionCall","src":"2959:17:11"},{"name":"end","nativeSrc":"2978:3:11","nodeType":"YulIdentifier","src":"2978:3:11"}],"functionName":{"name":"slt","nativeSrc":"2955:3:11","nodeType":"YulIdentifier","src":"2955:3:11"},"nativeSrc":"2955:27:11","nodeType":"YulFunctionCall","src":"2955:27:11"}],"functionName":{"name":"iszero","nativeSrc":"2948:6:11","nodeType":"YulIdentifier","src":"2948:6:11"},"nativeSrc":"2948:35:11","nodeType":"YulFunctionCall","src":"2948:35:11"},"nativeSrc":"2945:122:11","nodeType":"YulIf","src":"2945:122:11"},{"nativeSrc":"3076:30:11","nodeType":"YulAssignment","src":"3076:30:11","value":{"arguments":[{"name":"offset","nativeSrc":"3099:6:11","nodeType":"YulIdentifier","src":"3099:6:11"}],"functionName":{"name":"calldataload","nativeSrc":"3086:12:11","nodeType":"YulIdentifier","src":"3086:12:11"},"nativeSrc":"3086:20:11","nodeType":"YulFunctionCall","src":"3086:20:11"},"variableNames":[{"name":"length","nativeSrc":"3076:6:11","nodeType":"YulIdentifier","src":"3076:6:11"}]},{"body":{"nativeSrc":"3149:83:11","nodeType":"YulBlock","src":"3149:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"3151:77:11","nodeType":"YulIdentifier","src":"3151:77:11"},"nativeSrc":"3151:79:11","nodeType":"YulFunctionCall","src":"3151:79:11"},"nativeSrc":"3151:79:11","nodeType":"YulExpressionStatement","src":"3151:79:11"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"3121:6:11","nodeType":"YulIdentifier","src":"3121:6:11"},{"kind":"number","nativeSrc":"3129:18:11","nodeType":"YulLiteral","src":"3129:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3118:2:11","nodeType":"YulIdentifier","src":"3118:2:11"},"nativeSrc":"3118:30:11","nodeType":"YulFunctionCall","src":"3118:30:11"},"nativeSrc":"3115:117:11","nodeType":"YulIf","src":"3115:117:11"},{"nativeSrc":"3241:29:11","nodeType":"YulAssignment","src":"3241:29:11","value":{"arguments":[{"name":"offset","nativeSrc":"3257:6:11","nodeType":"YulIdentifier","src":"3257:6:11"},{"kind":"number","nativeSrc":"3265:4:11","nodeType":"YulLiteral","src":"3265:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3253:3:11","nodeType":"YulIdentifier","src":"3253:3:11"},"nativeSrc":"3253:17:11","nodeType":"YulFunctionCall","src":"3253:17:11"},"variableNames":[{"name":"arrayPos","nativeSrc":"3241:8:11","nodeType":"YulIdentifier","src":"3241:8:11"}]},{"body":{"nativeSrc":"3324:83:11","nodeType":"YulBlock","src":"3324:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"3326:77:11","nodeType":"YulIdentifier","src":"3326:77:11"},"nativeSrc":"3326:79:11","nodeType":"YulFunctionCall","src":"3326:79:11"},"nativeSrc":"3326:79:11","nodeType":"YulExpressionStatement","src":"3326:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nativeSrc":"3289:8:11","nodeType":"YulIdentifier","src":"3289:8:11"},{"arguments":[{"name":"length","nativeSrc":"3303:6:11","nodeType":"YulIdentifier","src":"3303:6:11"},{"kind":"number","nativeSrc":"3311:4:11","nodeType":"YulLiteral","src":"3311:4:11","type":"","value":"0x01"}],"functionName":{"name":"mul","nativeSrc":"3299:3:11","nodeType":"YulIdentifier","src":"3299:3:11"},"nativeSrc":"3299:17:11","nodeType":"YulFunctionCall","src":"3299:17:11"}],"functionName":{"name":"add","nativeSrc":"3285:3:11","nodeType":"YulIdentifier","src":"3285:3:11"},"nativeSrc":"3285:32:11","nodeType":"YulFunctionCall","src":"3285:32:11"},{"name":"end","nativeSrc":"3319:3:11","nodeType":"YulIdentifier","src":"3319:3:11"}],"functionName":{"name":"gt","nativeSrc":"3282:2:11","nodeType":"YulIdentifier","src":"3282:2:11"},"nativeSrc":"3282:41:11","nodeType":"YulFunctionCall","src":"3282:41:11"},"nativeSrc":"3279:128:11","nodeType":"YulIf","src":"3279:128:11"}]},"name":"abi_decode_t_bytes_calldata_ptr","nativeSrc":"2861:552:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2902:6:11","nodeType":"YulTypedName","src":"2902:6:11","type":""},{"name":"end","nativeSrc":"2910:3:11","nodeType":"YulTypedName","src":"2910:3:11","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"2918:8:11","nodeType":"YulTypedName","src":"2918:8:11","type":""},{"name":"length","nativeSrc":"2928:6:11","nodeType":"YulTypedName","src":"2928:6:11","type":""}],"src":"2861:552:11"},{"body":{"nativeSrc":"3552:712:11","nodeType":"YulBlock","src":"3552:712:11","statements":[{"body":{"nativeSrc":"3598:83:11","nodeType":"YulBlock","src":"3598:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3600:77:11","nodeType":"YulIdentifier","src":"3600:77:11"},"nativeSrc":"3600:79:11","nodeType":"YulFunctionCall","src":"3600:79:11"},"nativeSrc":"3600:79:11","nodeType":"YulExpressionStatement","src":"3600:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3573:7:11","nodeType":"YulIdentifier","src":"3573:7:11"},{"name":"headStart","nativeSrc":"3582:9:11","nodeType":"YulIdentifier","src":"3582:9:11"}],"functionName":{"name":"sub","nativeSrc":"3569:3:11","nodeType":"YulIdentifier","src":"3569:3:11"},"nativeSrc":"3569:23:11","nodeType":"YulFunctionCall","src":"3569:23:11"},{"kind":"number","nativeSrc":"3594:2:11","nodeType":"YulLiteral","src":"3594:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"3565:3:11","nodeType":"YulIdentifier","src":"3565:3:11"},"nativeSrc":"3565:32:11","nodeType":"YulFunctionCall","src":"3565:32:11"},"nativeSrc":"3562:119:11","nodeType":"YulIf","src":"3562:119:11"},{"nativeSrc":"3691:131:11","nodeType":"YulBlock","src":"3691:131:11","statements":[{"nativeSrc":"3706:15:11","nodeType":"YulVariableDeclaration","src":"3706:15:11","value":{"kind":"number","nativeSrc":"3720:1:11","nodeType":"YulLiteral","src":"3720:1:11","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3710:6:11","nodeType":"YulTypedName","src":"3710:6:11","type":""}]},{"nativeSrc":"3735:77:11","nodeType":"YulAssignment","src":"3735:77:11","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3784:9:11","nodeType":"YulIdentifier","src":"3784:9:11"},{"name":"offset","nativeSrc":"3795:6:11","nodeType":"YulIdentifier","src":"3795:6:11"}],"functionName":{"name":"add","nativeSrc":"3780:3:11","nodeType":"YulIdentifier","src":"3780:3:11"},"nativeSrc":"3780:22:11","nodeType":"YulFunctionCall","src":"3780:22:11"},{"name":"dataEnd","nativeSrc":"3804:7:11","nodeType":"YulIdentifier","src":"3804:7:11"}],"functionName":{"name":"abi_decode_t_enum$_PostOpMode_$505","nativeSrc":"3745:34:11","nodeType":"YulIdentifier","src":"3745:34:11"},"nativeSrc":"3745:67:11","nodeType":"YulFunctionCall","src":"3745:67:11"},"variableNames":[{"name":"value0","nativeSrc":"3735:6:11","nodeType":"YulIdentifier","src":"3735:6:11"}]}]},{"nativeSrc":"3832:297:11","nodeType":"YulBlock","src":"3832:297:11","statements":[{"nativeSrc":"3847:46:11","nodeType":"YulVariableDeclaration","src":"3847:46:11","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3878:9:11","nodeType":"YulIdentifier","src":"3878:9:11"},{"kind":"number","nativeSrc":"3889:2:11","nodeType":"YulLiteral","src":"3889:2:11","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3874:3:11","nodeType":"YulIdentifier","src":"3874:3:11"},"nativeSrc":"3874:18:11","nodeType":"YulFunctionCall","src":"3874:18:11"}],"functionName":{"name":"calldataload","nativeSrc":"3861:12:11","nodeType":"YulIdentifier","src":"3861:12:11"},"nativeSrc":"3861:32:11","nodeType":"YulFunctionCall","src":"3861:32:11"},"variables":[{"name":"offset","nativeSrc":"3851:6:11","nodeType":"YulTypedName","src":"3851:6:11","type":""}]},{"body":{"nativeSrc":"3940:83:11","nodeType":"YulBlock","src":"3940:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"3942:77:11","nodeType":"YulIdentifier","src":"3942:77:11"},"nativeSrc":"3942:79:11","nodeType":"YulFunctionCall","src":"3942:79:11"},"nativeSrc":"3942:79:11","nodeType":"YulExpressionStatement","src":"3942:79:11"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"3912:6:11","nodeType":"YulIdentifier","src":"3912:6:11"},{"kind":"number","nativeSrc":"3920:18:11","nodeType":"YulLiteral","src":"3920:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3909:2:11","nodeType":"YulIdentifier","src":"3909:2:11"},"nativeSrc":"3909:30:11","nodeType":"YulFunctionCall","src":"3909:30:11"},"nativeSrc":"3906:117:11","nodeType":"YulIf","src":"3906:117:11"},{"nativeSrc":"4037:82:11","nodeType":"YulAssignment","src":"4037:82:11","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4091:9:11","nodeType":"YulIdentifier","src":"4091:9:11"},{"name":"offset","nativeSrc":"4102:6:11","nodeType":"YulIdentifier","src":"4102:6:11"}],"functionName":{"name":"add","nativeSrc":"4087:3:11","nodeType":"YulIdentifier","src":"4087:3:11"},"nativeSrc":"4087:22:11","nodeType":"YulFunctionCall","src":"4087:22:11"},{"name":"dataEnd","nativeSrc":"4111:7:11","nodeType":"YulIdentifier","src":"4111:7:11"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nativeSrc":"4055:31:11","nodeType":"YulIdentifier","src":"4055:31:11"},"nativeSrc":"4055:64:11","nodeType":"YulFunctionCall","src":"4055:64:11"},"variableNames":[{"name":"value1","nativeSrc":"4037:6:11","nodeType":"YulIdentifier","src":"4037:6:11"},{"name":"value2","nativeSrc":"4045:6:11","nodeType":"YulIdentifier","src":"4045:6:11"}]}]},{"nativeSrc":"4139:118:11","nodeType":"YulBlock","src":"4139:118:11","statements":[{"nativeSrc":"4154:16:11","nodeType":"YulVariableDeclaration","src":"4154:16:11","value":{"kind":"number","nativeSrc":"4168:2:11","nodeType":"YulLiteral","src":"4168:2:11","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"4158:6:11","nodeType":"YulTypedName","src":"4158:6:11","type":""}]},{"nativeSrc":"4184:63:11","nodeType":"YulAssignment","src":"4184:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4219:9:11","nodeType":"YulIdentifier","src":"4219:9:11"},{"name":"offset","nativeSrc":"4230:6:11","nodeType":"YulIdentifier","src":"4230:6:11"}],"functionName":{"name":"add","nativeSrc":"4215:3:11","nodeType":"YulIdentifier","src":"4215:3:11"},"nativeSrc":"4215:22:11","nodeType":"YulFunctionCall","src":"4215:22:11"},{"name":"dataEnd","nativeSrc":"4239:7:11","nodeType":"YulIdentifier","src":"4239:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4194:20:11","nodeType":"YulIdentifier","src":"4194:20:11"},"nativeSrc":"4194:53:11","nodeType":"YulFunctionCall","src":"4194:53:11"},"variableNames":[{"name":"value3","nativeSrc":"4184:6:11","nodeType":"YulIdentifier","src":"4184:6:11"}]}]}]},"name":"abi_decode_tuple_t_enum$_PostOpMode_$505t_bytes_calldata_ptrt_uint256","nativeSrc":"3419:845:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3498:9:11","nodeType":"YulTypedName","src":"3498:9:11","type":""},{"name":"dataEnd","nativeSrc":"3509:7:11","nodeType":"YulTypedName","src":"3509:7:11","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3521:6:11","nodeType":"YulTypedName","src":"3521:6:11","type":""},{"name":"value1","nativeSrc":"3529:6:11","nodeType":"YulTypedName","src":"3529:6:11","type":""},{"name":"value2","nativeSrc":"3537:6:11","nodeType":"YulTypedName","src":"3537:6:11","type":""},{"name":"value3","nativeSrc":"3545:6:11","nodeType":"YulTypedName","src":"3545:6:11","type":""}],"src":"3419:845:11"},{"body":{"nativeSrc":"4302:28:11","nodeType":"YulBlock","src":"4302:28:11","statements":[{"nativeSrc":"4312:12:11","nodeType":"YulAssignment","src":"4312:12:11","value":{"name":"value","nativeSrc":"4319:5:11","nodeType":"YulIdentifier","src":"4319:5:11"},"variableNames":[{"name":"ret","nativeSrc":"4312:3:11","nodeType":"YulIdentifier","src":"4312:3:11"}]}]},"name":"identity","nativeSrc":"4270:60:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4288:5:11","nodeType":"YulTypedName","src":"4288:5:11","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"4298:3:11","nodeType":"YulTypedName","src":"4298:3:11","type":""}],"src":"4270:60:11"},{"body":{"nativeSrc":"4396:82:11","nodeType":"YulBlock","src":"4396:82:11","statements":[{"nativeSrc":"4406:66:11","nodeType":"YulAssignment","src":"4406:66:11","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4464:5:11","nodeType":"YulIdentifier","src":"4464:5:11"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"4446:17:11","nodeType":"YulIdentifier","src":"4446:17:11"},"nativeSrc":"4446:24:11","nodeType":"YulFunctionCall","src":"4446:24:11"}],"functionName":{"name":"identity","nativeSrc":"4437:8:11","nodeType":"YulIdentifier","src":"4437:8:11"},"nativeSrc":"4437:34:11","nodeType":"YulFunctionCall","src":"4437:34:11"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"4419:17:11","nodeType":"YulIdentifier","src":"4419:17:11"},"nativeSrc":"4419:53:11","nodeType":"YulFunctionCall","src":"4419:53:11"},"variableNames":[{"name":"converted","nativeSrc":"4406:9:11","nodeType":"YulIdentifier","src":"4406:9:11"}]}]},"name":"convert_t_uint160_to_t_uint160","nativeSrc":"4336:142:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4376:5:11","nodeType":"YulTypedName","src":"4376:5:11","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"4386:9:11","nodeType":"YulTypedName","src":"4386:9:11","type":""}],"src":"4336:142:11"},{"body":{"nativeSrc":"4544:66:11","nodeType":"YulBlock","src":"4544:66:11","statements":[{"nativeSrc":"4554:50:11","nodeType":"YulAssignment","src":"4554:50:11","value":{"arguments":[{"name":"value","nativeSrc":"4598:5:11","nodeType":"YulIdentifier","src":"4598:5:11"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nativeSrc":"4567:30:11","nodeType":"YulIdentifier","src":"4567:30:11"},"nativeSrc":"4567:37:11","nodeType":"YulFunctionCall","src":"4567:37:11"},"variableNames":[{"name":"converted","nativeSrc":"4554:9:11","nodeType":"YulIdentifier","src":"4554:9:11"}]}]},"name":"convert_t_uint160_to_t_address","nativeSrc":"4484:126:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4524:5:11","nodeType":"YulTypedName","src":"4524:5:11","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"4534:9:11","nodeType":"YulTypedName","src":"4534:9:11","type":""}],"src":"4484:126:11"},{"body":{"nativeSrc":"4695:66:11","nodeType":"YulBlock","src":"4695:66:11","statements":[{"nativeSrc":"4705:50:11","nodeType":"YulAssignment","src":"4705:50:11","value":{"arguments":[{"name":"value","nativeSrc":"4749:5:11","nodeType":"YulIdentifier","src":"4749:5:11"}],"functionName":{"name":"convert_t_uint160_to_t_address","nativeSrc":"4718:30:11","nodeType":"YulIdentifier","src":"4718:30:11"},"nativeSrc":"4718:37:11","nodeType":"YulFunctionCall","src":"4718:37:11"},"variableNames":[{"name":"converted","nativeSrc":"4705:9:11","nodeType":"YulIdentifier","src":"4705:9:11"}]}]},"name":"convert_t_contract$_IEntryPoint_$478_to_t_address","nativeSrc":"4616:145:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4675:5:11","nodeType":"YulTypedName","src":"4675:5:11","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"4685:9:11","nodeType":"YulTypedName","src":"4685:9:11","type":""}],"src":"4616:145:11"},{"body":{"nativeSrc":"4851:85:11","nodeType":"YulBlock","src":"4851:85:11","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4868:3:11","nodeType":"YulIdentifier","src":"4868:3:11"},{"arguments":[{"name":"value","nativeSrc":"4923:5:11","nodeType":"YulIdentifier","src":"4923:5:11"}],"functionName":{"name":"convert_t_contract$_IEntryPoint_$478_to_t_address","nativeSrc":"4873:49:11","nodeType":"YulIdentifier","src":"4873:49:11"},"nativeSrc":"4873:56:11","nodeType":"YulFunctionCall","src":"4873:56:11"}],"functionName":{"name":"mstore","nativeSrc":"4861:6:11","nodeType":"YulIdentifier","src":"4861:6:11"},"nativeSrc":"4861:69:11","nodeType":"YulFunctionCall","src":"4861:69:11"},"nativeSrc":"4861:69:11","nodeType":"YulExpressionStatement","src":"4861:69:11"}]},"name":"abi_encode_t_contract$_IEntryPoint_$478_to_t_address_fromStack","nativeSrc":"4767:169:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4839:5:11","nodeType":"YulTypedName","src":"4839:5:11","type":""},{"name":"pos","nativeSrc":"4846:3:11","nodeType":"YulTypedName","src":"4846:3:11","type":""}],"src":"4767:169:11"},{"body":{"nativeSrc":"5059:143:11","nodeType":"YulBlock","src":"5059:143:11","statements":[{"nativeSrc":"5069:26:11","nodeType":"YulAssignment","src":"5069:26:11","value":{"arguments":[{"name":"headStart","nativeSrc":"5081:9:11","nodeType":"YulIdentifier","src":"5081:9:11"},{"kind":"number","nativeSrc":"5092:2:11","nodeType":"YulLiteral","src":"5092:2:11","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5077:3:11","nodeType":"YulIdentifier","src":"5077:3:11"},"nativeSrc":"5077:18:11","nodeType":"YulFunctionCall","src":"5077:18:11"},"variableNames":[{"name":"tail","nativeSrc":"5069:4:11","nodeType":"YulIdentifier","src":"5069:4:11"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5168:6:11","nodeType":"YulIdentifier","src":"5168:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"5181:9:11","nodeType":"YulIdentifier","src":"5181:9:11"},{"kind":"number","nativeSrc":"5192:1:11","nodeType":"YulLiteral","src":"5192:1:11","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5177:3:11","nodeType":"YulIdentifier","src":"5177:3:11"},"nativeSrc":"5177:17:11","nodeType":"YulFunctionCall","src":"5177:17:11"}],"functionName":{"name":"abi_encode_t_contract$_IEntryPoint_$478_to_t_address_fromStack","nativeSrc":"5105:62:11","nodeType":"YulIdentifier","src":"5105:62:11"},"nativeSrc":"5105:90:11","nodeType":"YulFunctionCall","src":"5105:90:11"},"nativeSrc":"5105:90:11","nodeType":"YulExpressionStatement","src":"5105:90:11"}]},"name":"abi_encode_tuple_t_contract$_IEntryPoint_$478__to_t_address__fromStack_reversed","nativeSrc":"4942:260:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5031:9:11","nodeType":"YulTypedName","src":"5031:9:11","type":""},{"name":"value0","nativeSrc":"5043:6:11","nodeType":"YulTypedName","src":"5043:6:11","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5054:4:11","nodeType":"YulTypedName","src":"5054:4:11","type":""}],"src":"4942:260:11"},{"body":{"nativeSrc":"5251:79:11","nodeType":"YulBlock","src":"5251:79:11","statements":[{"body":{"nativeSrc":"5308:16:11","nodeType":"YulBlock","src":"5308:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5317:1:11","nodeType":"YulLiteral","src":"5317:1:11","type":"","value":"0"},{"kind":"number","nativeSrc":"5320:1:11","nodeType":"YulLiteral","src":"5320:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5310:6:11","nodeType":"YulIdentifier","src":"5310:6:11"},"nativeSrc":"5310:12:11","nodeType":"YulFunctionCall","src":"5310:12:11"},"nativeSrc":"5310:12:11","nodeType":"YulExpressionStatement","src":"5310:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5274:5:11","nodeType":"YulIdentifier","src":"5274:5:11"},{"arguments":[{"name":"value","nativeSrc":"5299:5:11","nodeType":"YulIdentifier","src":"5299:5:11"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"5281:17:11","nodeType":"YulIdentifier","src":"5281:17:11"},"nativeSrc":"5281:24:11","nodeType":"YulFunctionCall","src":"5281:24:11"}],"functionName":{"name":"eq","nativeSrc":"5271:2:11","nodeType":"YulIdentifier","src":"5271:2:11"},"nativeSrc":"5271:35:11","nodeType":"YulFunctionCall","src":"5271:35:11"}],"functionName":{"name":"iszero","nativeSrc":"5264:6:11","nodeType":"YulIdentifier","src":"5264:6:11"},"nativeSrc":"5264:43:11","nodeType":"YulFunctionCall","src":"5264:43:11"},"nativeSrc":"5261:63:11","nodeType":"YulIf","src":"5261:63:11"}]},"name":"validator_revert_t_address","nativeSrc":"5208:122:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5244:5:11","nodeType":"YulTypedName","src":"5244:5:11","type":""}],"src":"5208:122:11"},{"body":{"nativeSrc":"5388:87:11","nodeType":"YulBlock","src":"5388:87:11","statements":[{"nativeSrc":"5398:29:11","nodeType":"YulAssignment","src":"5398:29:11","value":{"arguments":[{"name":"offset","nativeSrc":"5420:6:11","nodeType":"YulIdentifier","src":"5420:6:11"}],"functionName":{"name":"calldataload","nativeSrc":"5407:12:11","nodeType":"YulIdentifier","src":"5407:12:11"},"nativeSrc":"5407:20:11","nodeType":"YulFunctionCall","src":"5407:20:11"},"variableNames":[{"name":"value","nativeSrc":"5398:5:11","nodeType":"YulIdentifier","src":"5398:5:11"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"5463:5:11","nodeType":"YulIdentifier","src":"5463:5:11"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"5436:26:11","nodeType":"YulIdentifier","src":"5436:26:11"},"nativeSrc":"5436:33:11","nodeType":"YulFunctionCall","src":"5436:33:11"},"nativeSrc":"5436:33:11","nodeType":"YulExpressionStatement","src":"5436:33:11"}]},"name":"abi_decode_t_address","nativeSrc":"5336:139:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"5366:6:11","nodeType":"YulTypedName","src":"5366:6:11","type":""},{"name":"end","nativeSrc":"5374:3:11","nodeType":"YulTypedName","src":"5374:3:11","type":""}],"returnVariables":[{"name":"value","nativeSrc":"5382:5:11","nodeType":"YulTypedName","src":"5382:5:11","type":""}],"src":"5336:139:11"},{"body":{"nativeSrc":"5547:263:11","nodeType":"YulBlock","src":"5547:263:11","statements":[{"body":{"nativeSrc":"5593:83:11","nodeType":"YulBlock","src":"5593:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5595:77:11","nodeType":"YulIdentifier","src":"5595:77:11"},"nativeSrc":"5595:79:11","nodeType":"YulFunctionCall","src":"5595:79:11"},"nativeSrc":"5595:79:11","nodeType":"YulExpressionStatement","src":"5595:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5568:7:11","nodeType":"YulIdentifier","src":"5568:7:11"},{"name":"headStart","nativeSrc":"5577:9:11","nodeType":"YulIdentifier","src":"5577:9:11"}],"functionName":{"name":"sub","nativeSrc":"5564:3:11","nodeType":"YulIdentifier","src":"5564:3:11"},"nativeSrc":"5564:23:11","nodeType":"YulFunctionCall","src":"5564:23:11"},{"kind":"number","nativeSrc":"5589:2:11","nodeType":"YulLiteral","src":"5589:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5560:3:11","nodeType":"YulIdentifier","src":"5560:3:11"},"nativeSrc":"5560:32:11","nodeType":"YulFunctionCall","src":"5560:32:11"},"nativeSrc":"5557:119:11","nodeType":"YulIf","src":"5557:119:11"},{"nativeSrc":"5686:117:11","nodeType":"YulBlock","src":"5686:117:11","statements":[{"nativeSrc":"5701:15:11","nodeType":"YulVariableDeclaration","src":"5701:15:11","value":{"kind":"number","nativeSrc":"5715:1:11","nodeType":"YulLiteral","src":"5715:1:11","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5705:6:11","nodeType":"YulTypedName","src":"5705:6:11","type":""}]},{"nativeSrc":"5730:63:11","nodeType":"YulAssignment","src":"5730:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5765:9:11","nodeType":"YulIdentifier","src":"5765:9:11"},{"name":"offset","nativeSrc":"5776:6:11","nodeType":"YulIdentifier","src":"5776:6:11"}],"functionName":{"name":"add","nativeSrc":"5761:3:11","nodeType":"YulIdentifier","src":"5761:3:11"},"nativeSrc":"5761:22:11","nodeType":"YulFunctionCall","src":"5761:22:11"},{"name":"dataEnd","nativeSrc":"5785:7:11","nodeType":"YulIdentifier","src":"5785:7:11"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5740:20:11","nodeType":"YulIdentifier","src":"5740:20:11"},"nativeSrc":"5740:53:11","nodeType":"YulFunctionCall","src":"5740:53:11"},"variableNames":[{"name":"value0","nativeSrc":"5730:6:11","nodeType":"YulIdentifier","src":"5730:6:11"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"5481:329:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5517:9:11","nodeType":"YulTypedName","src":"5517:9:11","type":""},{"name":"dataEnd","nativeSrc":"5528:7:11","nodeType":"YulTypedName","src":"5528:7:11","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5540:6:11","nodeType":"YulTypedName","src":"5540:6:11","type":""}],"src":"5481:329:11"},{"body":{"nativeSrc":"5905:28:11","nodeType":"YulBlock","src":"5905:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5922:1:11","nodeType":"YulLiteral","src":"5922:1:11","type":"","value":"0"},{"kind":"number","nativeSrc":"5925:1:11","nodeType":"YulLiteral","src":"5925:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5915:6:11","nodeType":"YulIdentifier","src":"5915:6:11"},"nativeSrc":"5915:12:11","nodeType":"YulFunctionCall","src":"5915:12:11"},"nativeSrc":"5915:12:11","nodeType":"YulExpressionStatement","src":"5915:12:11"}]},"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nativeSrc":"5816:117:11","nodeType":"YulFunctionDefinition","src":"5816:117:11"},{"body":{"nativeSrc":"6051:153:11","nodeType":"YulBlock","src":"6051:153:11","statements":[{"body":{"nativeSrc":"6091:83:11","nodeType":"YulBlock","src":"6091:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nativeSrc":"6093:77:11","nodeType":"YulIdentifier","src":"6093:77:11"},"nativeSrc":"6093:79:11","nodeType":"YulFunctionCall","src":"6093:79:11"},"nativeSrc":"6093:79:11","nodeType":"YulExpressionStatement","src":"6093:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nativeSrc":"6072:3:11","nodeType":"YulIdentifier","src":"6072:3:11"},{"name":"offset","nativeSrc":"6077:6:11","nodeType":"YulIdentifier","src":"6077:6:11"}],"functionName":{"name":"sub","nativeSrc":"6068:3:11","nodeType":"YulIdentifier","src":"6068:3:11"},"nativeSrc":"6068:16:11","nodeType":"YulFunctionCall","src":"6068:16:11"},{"kind":"number","nativeSrc":"6086:3:11","nodeType":"YulLiteral","src":"6086:3:11","type":"","value":"352"}],"functionName":{"name":"slt","nativeSrc":"6064:3:11","nodeType":"YulIdentifier","src":"6064:3:11"},"nativeSrc":"6064:26:11","nodeType":"YulFunctionCall","src":"6064:26:11"},"nativeSrc":"6061:113:11","nodeType":"YulIf","src":"6061:113:11"},{"nativeSrc":"6183:15:11","nodeType":"YulAssignment","src":"6183:15:11","value":{"name":"offset","nativeSrc":"6192:6:11","nodeType":"YulIdentifier","src":"6192:6:11"},"variableNames":[{"name":"value","nativeSrc":"6183:5:11","nodeType":"YulIdentifier","src":"6183:5:11"}]}]},"name":"abi_decode_t_struct$_UserOperation_$666_calldata_ptr","nativeSrc":"5967:237:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"6029:6:11","nodeType":"YulTypedName","src":"6029:6:11","type":""},{"name":"end","nativeSrc":"6037:3:11","nodeType":"YulTypedName","src":"6037:3:11","type":""}],"returnVariables":[{"name":"value","nativeSrc":"6045:5:11","nodeType":"YulTypedName","src":"6045:5:11","type":""}],"src":"5967:237:11"},{"body":{"nativeSrc":"6255:32:11","nodeType":"YulBlock","src":"6255:32:11","statements":[{"nativeSrc":"6265:16:11","nodeType":"YulAssignment","src":"6265:16:11","value":{"name":"value","nativeSrc":"6276:5:11","nodeType":"YulIdentifier","src":"6276:5:11"},"variableNames":[{"name":"cleaned","nativeSrc":"6265:7:11","nodeType":"YulIdentifier","src":"6265:7:11"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"6210:77:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6237:5:11","nodeType":"YulTypedName","src":"6237:5:11","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"6247:7:11","nodeType":"YulTypedName","src":"6247:7:11","type":""}],"src":"6210:77:11"},{"body":{"nativeSrc":"6336:79:11","nodeType":"YulBlock","src":"6336:79:11","statements":[{"body":{"nativeSrc":"6393:16:11","nodeType":"YulBlock","src":"6393:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6402:1:11","nodeType":"YulLiteral","src":"6402:1:11","type":"","value":"0"},{"kind":"number","nativeSrc":"6405:1:11","nodeType":"YulLiteral","src":"6405:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6395:6:11","nodeType":"YulIdentifier","src":"6395:6:11"},"nativeSrc":"6395:12:11","nodeType":"YulFunctionCall","src":"6395:12:11"},"nativeSrc":"6395:12:11","nodeType":"YulExpressionStatement","src":"6395:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6359:5:11","nodeType":"YulIdentifier","src":"6359:5:11"},{"arguments":[{"name":"value","nativeSrc":"6384:5:11","nodeType":"YulIdentifier","src":"6384:5:11"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"6366:17:11","nodeType":"YulIdentifier","src":"6366:17:11"},"nativeSrc":"6366:24:11","nodeType":"YulFunctionCall","src":"6366:24:11"}],"functionName":{"name":"eq","nativeSrc":"6356:2:11","nodeType":"YulIdentifier","src":"6356:2:11"},"nativeSrc":"6356:35:11","nodeType":"YulFunctionCall","src":"6356:35:11"}],"functionName":{"name":"iszero","nativeSrc":"6349:6:11","nodeType":"YulIdentifier","src":"6349:6:11"},"nativeSrc":"6349:43:11","nodeType":"YulFunctionCall","src":"6349:43:11"},"nativeSrc":"6346:63:11","nodeType":"YulIf","src":"6346:63:11"}]},"name":"validator_revert_t_bytes32","nativeSrc":"6293:122:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6329:5:11","nodeType":"YulTypedName","src":"6329:5:11","type":""}],"src":"6293:122:11"},{"body":{"nativeSrc":"6473:87:11","nodeType":"YulBlock","src":"6473:87:11","statements":[{"nativeSrc":"6483:29:11","nodeType":"YulAssignment","src":"6483:29:11","value":{"arguments":[{"name":"offset","nativeSrc":"6505:6:11","nodeType":"YulIdentifier","src":"6505:6:11"}],"functionName":{"name":"calldataload","nativeSrc":"6492:12:11","nodeType":"YulIdentifier","src":"6492:12:11"},"nativeSrc":"6492:20:11","nodeType":"YulFunctionCall","src":"6492:20:11"},"variableNames":[{"name":"value","nativeSrc":"6483:5:11","nodeType":"YulIdentifier","src":"6483:5:11"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"6548:5:11","nodeType":"YulIdentifier","src":"6548:5:11"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"6521:26:11","nodeType":"YulIdentifier","src":"6521:26:11"},"nativeSrc":"6521:33:11","nodeType":"YulFunctionCall","src":"6521:33:11"},"nativeSrc":"6521:33:11","nodeType":"YulExpressionStatement","src":"6521:33:11"}]},"name":"abi_decode_t_bytes32","nativeSrc":"6421:139:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"6451:6:11","nodeType":"YulTypedName","src":"6451:6:11","type":""},{"name":"end","nativeSrc":"6459:3:11","nodeType":"YulTypedName","src":"6459:3:11","type":""}],"returnVariables":[{"name":"value","nativeSrc":"6467:5:11","nodeType":"YulTypedName","src":"6467:5:11","type":""}],"src":"6421:139:11"},{"body":{"nativeSrc":"6698:711:11","nodeType":"YulBlock","src":"6698:711:11","statements":[{"body":{"nativeSrc":"6744:83:11","nodeType":"YulBlock","src":"6744:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"6746:77:11","nodeType":"YulIdentifier","src":"6746:77:11"},"nativeSrc":"6746:79:11","nodeType":"YulFunctionCall","src":"6746:79:11"},"nativeSrc":"6746:79:11","nodeType":"YulExpressionStatement","src":"6746:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6719:7:11","nodeType":"YulIdentifier","src":"6719:7:11"},{"name":"headStart","nativeSrc":"6728:9:11","nodeType":"YulIdentifier","src":"6728:9:11"}],"functionName":{"name":"sub","nativeSrc":"6715:3:11","nodeType":"YulIdentifier","src":"6715:3:11"},"nativeSrc":"6715:23:11","nodeType":"YulFunctionCall","src":"6715:23:11"},{"kind":"number","nativeSrc":"6740:2:11","nodeType":"YulLiteral","src":"6740:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"6711:3:11","nodeType":"YulIdentifier","src":"6711:3:11"},"nativeSrc":"6711:32:11","nodeType":"YulFunctionCall","src":"6711:32:11"},"nativeSrc":"6708:119:11","nodeType":"YulIf","src":"6708:119:11"},{"nativeSrc":"6837:309:11","nodeType":"YulBlock","src":"6837:309:11","statements":[{"nativeSrc":"6852:45:11","nodeType":"YulVariableDeclaration","src":"6852:45:11","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6883:9:11","nodeType":"YulIdentifier","src":"6883:9:11"},{"kind":"number","nativeSrc":"6894:1:11","nodeType":"YulLiteral","src":"6894:1:11","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6879:3:11","nodeType":"YulIdentifier","src":"6879:3:11"},"nativeSrc":"6879:17:11","nodeType":"YulFunctionCall","src":"6879:17:11"}],"functionName":{"name":"calldataload","nativeSrc":"6866:12:11","nodeType":"YulIdentifier","src":"6866:12:11"},"nativeSrc":"6866:31:11","nodeType":"YulFunctionCall","src":"6866:31:11"},"variables":[{"name":"offset","nativeSrc":"6856:6:11","nodeType":"YulTypedName","src":"6856:6:11","type":""}]},{"body":{"nativeSrc":"6944:83:11","nodeType":"YulBlock","src":"6944:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"6946:77:11","nodeType":"YulIdentifier","src":"6946:77:11"},"nativeSrc":"6946:79:11","nodeType":"YulFunctionCall","src":"6946:79:11"},"nativeSrc":"6946:79:11","nodeType":"YulExpressionStatement","src":"6946:79:11"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"6916:6:11","nodeType":"YulIdentifier","src":"6916:6:11"},{"kind":"number","nativeSrc":"6924:18:11","nodeType":"YulLiteral","src":"6924:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"6913:2:11","nodeType":"YulIdentifier","src":"6913:2:11"},"nativeSrc":"6913:30:11","nodeType":"YulFunctionCall","src":"6913:30:11"},"nativeSrc":"6910:117:11","nodeType":"YulIf","src":"6910:117:11"},{"nativeSrc":"7041:95:11","nodeType":"YulAssignment","src":"7041:95:11","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7108:9:11","nodeType":"YulIdentifier","src":"7108:9:11"},{"name":"offset","nativeSrc":"7119:6:11","nodeType":"YulIdentifier","src":"7119:6:11"}],"functionName":{"name":"add","nativeSrc":"7104:3:11","nodeType":"YulIdentifier","src":"7104:3:11"},"nativeSrc":"7104:22:11","nodeType":"YulFunctionCall","src":"7104:22:11"},{"name":"dataEnd","nativeSrc":"7128:7:11","nodeType":"YulIdentifier","src":"7128:7:11"}],"functionName":{"name":"abi_decode_t_struct$_UserOperation_$666_calldata_ptr","nativeSrc":"7051:52:11","nodeType":"YulIdentifier","src":"7051:52:11"},"nativeSrc":"7051:85:11","nodeType":"YulFunctionCall","src":"7051:85:11"},"variableNames":[{"name":"value0","nativeSrc":"7041:6:11","nodeType":"YulIdentifier","src":"7041:6:11"}]}]},{"nativeSrc":"7156:118:11","nodeType":"YulBlock","src":"7156:118:11","statements":[{"nativeSrc":"7171:16:11","nodeType":"YulVariableDeclaration","src":"7171:16:11","value":{"kind":"number","nativeSrc":"7185:2:11","nodeType":"YulLiteral","src":"7185:2:11","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"7175:6:11","nodeType":"YulTypedName","src":"7175:6:11","type":""}]},{"nativeSrc":"7201:63:11","nodeType":"YulAssignment","src":"7201:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7236:9:11","nodeType":"YulIdentifier","src":"7236:9:11"},{"name":"offset","nativeSrc":"7247:6:11","nodeType":"YulIdentifier","src":"7247:6:11"}],"functionName":{"name":"add","nativeSrc":"7232:3:11","nodeType":"YulIdentifier","src":"7232:3:11"},"nativeSrc":"7232:22:11","nodeType":"YulFunctionCall","src":"7232:22:11"},{"name":"dataEnd","nativeSrc":"7256:7:11","nodeType":"YulIdentifier","src":"7256:7:11"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"7211:20:11","nodeType":"YulIdentifier","src":"7211:20:11"},"nativeSrc":"7211:53:11","nodeType":"YulFunctionCall","src":"7211:53:11"},"variableNames":[{"name":"value1","nativeSrc":"7201:6:11","nodeType":"YulIdentifier","src":"7201:6:11"}]}]},{"nativeSrc":"7284:118:11","nodeType":"YulBlock","src":"7284:118:11","statements":[{"nativeSrc":"7299:16:11","nodeType":"YulVariableDeclaration","src":"7299:16:11","value":{"kind":"number","nativeSrc":"7313:2:11","nodeType":"YulLiteral","src":"7313:2:11","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"7303:6:11","nodeType":"YulTypedName","src":"7303:6:11","type":""}]},{"nativeSrc":"7329:63:11","nodeType":"YulAssignment","src":"7329:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7364:9:11","nodeType":"YulIdentifier","src":"7364:9:11"},{"name":"offset","nativeSrc":"7375:6:11","nodeType":"YulIdentifier","src":"7375:6:11"}],"functionName":{"name":"add","nativeSrc":"7360:3:11","nodeType":"YulIdentifier","src":"7360:3:11"},"nativeSrc":"7360:22:11","nodeType":"YulFunctionCall","src":"7360:22:11"},{"name":"dataEnd","nativeSrc":"7384:7:11","nodeType":"YulIdentifier","src":"7384:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"7339:20:11","nodeType":"YulIdentifier","src":"7339:20:11"},"nativeSrc":"7339:53:11","nodeType":"YulFunctionCall","src":"7339:53:11"},"variableNames":[{"name":"value2","nativeSrc":"7329:6:11","nodeType":"YulIdentifier","src":"7329:6:11"}]}]}]},"name":"abi_decode_tuple_t_struct$_UserOperation_$666_calldata_ptrt_bytes32t_uint256","nativeSrc":"6566:843:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6652:9:11","nodeType":"YulTypedName","src":"6652:9:11","type":""},{"name":"dataEnd","nativeSrc":"6663:7:11","nodeType":"YulTypedName","src":"6663:7:11","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6675:6:11","nodeType":"YulTypedName","src":"6675:6:11","type":""},{"name":"value1","nativeSrc":"6683:6:11","nodeType":"YulTypedName","src":"6683:6:11","type":""},{"name":"value2","nativeSrc":"6691:6:11","nodeType":"YulTypedName","src":"6691:6:11","type":""}],"src":"6566:843:11"},{"body":{"nativeSrc":"7473:40:11","nodeType":"YulBlock","src":"7473:40:11","statements":[{"nativeSrc":"7484:22:11","nodeType":"YulAssignment","src":"7484:22:11","value":{"arguments":[{"name":"value","nativeSrc":"7500:5:11","nodeType":"YulIdentifier","src":"7500:5:11"}],"functionName":{"name":"mload","nativeSrc":"7494:5:11","nodeType":"YulIdentifier","src":"7494:5:11"},"nativeSrc":"7494:12:11","nodeType":"YulFunctionCall","src":"7494:12:11"},"variableNames":[{"name":"length","nativeSrc":"7484:6:11","nodeType":"YulIdentifier","src":"7484:6:11"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"7415:98:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7456:5:11","nodeType":"YulTypedName","src":"7456:5:11","type":""}],"returnVariables":[{"name":"length","nativeSrc":"7466:6:11","nodeType":"YulTypedName","src":"7466:6:11","type":""}],"src":"7415:98:11"},{"body":{"nativeSrc":"7614:73:11","nodeType":"YulBlock","src":"7614:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"7631:3:11","nodeType":"YulIdentifier","src":"7631:3:11"},{"name":"length","nativeSrc":"7636:6:11","nodeType":"YulIdentifier","src":"7636:6:11"}],"functionName":{"name":"mstore","nativeSrc":"7624:6:11","nodeType":"YulIdentifier","src":"7624:6:11"},"nativeSrc":"7624:19:11","nodeType":"YulFunctionCall","src":"7624:19:11"},"nativeSrc":"7624:19:11","nodeType":"YulExpressionStatement","src":"7624:19:11"},{"nativeSrc":"7652:29:11","nodeType":"YulAssignment","src":"7652:29:11","value":{"arguments":[{"name":"pos","nativeSrc":"7671:3:11","nodeType":"YulIdentifier","src":"7671:3:11"},{"kind":"number","nativeSrc":"7676:4:11","nodeType":"YulLiteral","src":"7676:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7667:3:11","nodeType":"YulIdentifier","src":"7667:3:11"},"nativeSrc":"7667:14:11","nodeType":"YulFunctionCall","src":"7667:14:11"},"variableNames":[{"name":"updated_pos","nativeSrc":"7652:11:11","nodeType":"YulIdentifier","src":"7652:11:11"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"7519:168:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"7586:3:11","nodeType":"YulTypedName","src":"7586:3:11","type":""},{"name":"length","nativeSrc":"7591:6:11","nodeType":"YulTypedName","src":"7591:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"7602:11:11","nodeType":"YulTypedName","src":"7602:11:11","type":""}],"src":"7519:168:11"},{"body":{"nativeSrc":"7755:186:11","nodeType":"YulBlock","src":"7755:186:11","statements":[{"nativeSrc":"7766:10:11","nodeType":"YulVariableDeclaration","src":"7766:10:11","value":{"kind":"number","nativeSrc":"7775:1:11","nodeType":"YulLiteral","src":"7775:1:11","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"7770:1:11","nodeType":"YulTypedName","src":"7770:1:11","type":""}]},{"body":{"nativeSrc":"7835:63:11","nodeType":"YulBlock","src":"7835:63:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"7860:3:11","nodeType":"YulIdentifier","src":"7860:3:11"},{"name":"i","nativeSrc":"7865:1:11","nodeType":"YulIdentifier","src":"7865:1:11"}],"functionName":{"name":"add","nativeSrc":"7856:3:11","nodeType":"YulIdentifier","src":"7856:3:11"},"nativeSrc":"7856:11:11","nodeType":"YulFunctionCall","src":"7856:11:11"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"7879:3:11","nodeType":"YulIdentifier","src":"7879:3:11"},{"name":"i","nativeSrc":"7884:1:11","nodeType":"YulIdentifier","src":"7884:1:11"}],"functionName":{"name":"add","nativeSrc":"7875:3:11","nodeType":"YulIdentifier","src":"7875:3:11"},"nativeSrc":"7875:11:11","nodeType":"YulFunctionCall","src":"7875:11:11"}],"functionName":{"name":"mload","nativeSrc":"7869:5:11","nodeType":"YulIdentifier","src":"7869:5:11"},"nativeSrc":"7869:18:11","nodeType":"YulFunctionCall","src":"7869:18:11"}],"functionName":{"name":"mstore","nativeSrc":"7849:6:11","nodeType":"YulIdentifier","src":"7849:6:11"},"nativeSrc":"7849:39:11","nodeType":"YulFunctionCall","src":"7849:39:11"},"nativeSrc":"7849:39:11","nodeType":"YulExpressionStatement","src":"7849:39:11"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"7796:1:11","nodeType":"YulIdentifier","src":"7796:1:11"},{"name":"length","nativeSrc":"7799:6:11","nodeType":"YulIdentifier","src":"7799:6:11"}],"functionName":{"name":"lt","nativeSrc":"7793:2:11","nodeType":"YulIdentifier","src":"7793:2:11"},"nativeSrc":"7793:13:11","nodeType":"YulFunctionCall","src":"7793:13:11"},"nativeSrc":"7785:113:11","nodeType":"YulForLoop","post":{"nativeSrc":"7807:19:11","nodeType":"YulBlock","src":"7807:19:11","statements":[{"nativeSrc":"7809:15:11","nodeType":"YulAssignment","src":"7809:15:11","value":{"arguments":[{"name":"i","nativeSrc":"7818:1:11","nodeType":"YulIdentifier","src":"7818:1:11"},{"kind":"number","nativeSrc":"7821:2:11","nodeType":"YulLiteral","src":"7821:2:11","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7814:3:11","nodeType":"YulIdentifier","src":"7814:3:11"},"nativeSrc":"7814:10:11","nodeType":"YulFunctionCall","src":"7814:10:11"},"variableNames":[{"name":"i","nativeSrc":"7809:1:11","nodeType":"YulIdentifier","src":"7809:1:11"}]}]},"pre":{"nativeSrc":"7789:3:11","nodeType":"YulBlock","src":"7789:3:11","statements":[]},"src":"7785:113:11"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"7918:3:11","nodeType":"YulIdentifier","src":"7918:3:11"},{"name":"length","nativeSrc":"7923:6:11","nodeType":"YulIdentifier","src":"7923:6:11"}],"functionName":{"name":"add","nativeSrc":"7914:3:11","nodeType":"YulIdentifier","src":"7914:3:11"},"nativeSrc":"7914:16:11","nodeType":"YulFunctionCall","src":"7914:16:11"},{"kind":"number","nativeSrc":"7932:1:11","nodeType":"YulLiteral","src":"7932:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"7907:6:11","nodeType":"YulIdentifier","src":"7907:6:11"},"nativeSrc":"7907:27:11","nodeType":"YulFunctionCall","src":"7907:27:11"},"nativeSrc":"7907:27:11","nodeType":"YulExpressionStatement","src":"7907:27:11"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"7693:248:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"7737:3:11","nodeType":"YulTypedName","src":"7737:3:11","type":""},{"name":"dst","nativeSrc":"7742:3:11","nodeType":"YulTypedName","src":"7742:3:11","type":""},{"name":"length","nativeSrc":"7747:6:11","nodeType":"YulTypedName","src":"7747:6:11","type":""}],"src":"7693:248:11"},{"body":{"nativeSrc":"7995:54:11","nodeType":"YulBlock","src":"7995:54:11","statements":[{"nativeSrc":"8005:38:11","nodeType":"YulAssignment","src":"8005:38:11","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"8023:5:11","nodeType":"YulIdentifier","src":"8023:5:11"},{"kind":"number","nativeSrc":"8030:2:11","nodeType":"YulLiteral","src":"8030:2:11","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"8019:3:11","nodeType":"YulIdentifier","src":"8019:3:11"},"nativeSrc":"8019:14:11","nodeType":"YulFunctionCall","src":"8019:14:11"},{"arguments":[{"kind":"number","nativeSrc":"8039:2:11","nodeType":"YulLiteral","src":"8039:2:11","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"8035:3:11","nodeType":"YulIdentifier","src":"8035:3:11"},"nativeSrc":"8035:7:11","nodeType":"YulFunctionCall","src":"8035:7:11"}],"functionName":{"name":"and","nativeSrc":"8015:3:11","nodeType":"YulIdentifier","src":"8015:3:11"},"nativeSrc":"8015:28:11","nodeType":"YulFunctionCall","src":"8015:28:11"},"variableNames":[{"name":"result","nativeSrc":"8005:6:11","nodeType":"YulIdentifier","src":"8005:6:11"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"7947:102:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7978:5:11","nodeType":"YulTypedName","src":"7978:5:11","type":""}],"returnVariables":[{"name":"result","nativeSrc":"7988:6:11","nodeType":"YulTypedName","src":"7988:6:11","type":""}],"src":"7947:102:11"},{"body":{"nativeSrc":"8145:283:11","nodeType":"YulBlock","src":"8145:283:11","statements":[{"nativeSrc":"8155:52:11","nodeType":"YulVariableDeclaration","src":"8155:52:11","value":{"arguments":[{"name":"value","nativeSrc":"8201:5:11","nodeType":"YulIdentifier","src":"8201:5:11"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"8169:31:11","nodeType":"YulIdentifier","src":"8169:31:11"},"nativeSrc":"8169:38:11","nodeType":"YulFunctionCall","src":"8169:38:11"},"variables":[{"name":"length","nativeSrc":"8159:6:11","nodeType":"YulTypedName","src":"8159:6:11","type":""}]},{"nativeSrc":"8216:77:11","nodeType":"YulAssignment","src":"8216:77:11","value":{"arguments":[{"name":"pos","nativeSrc":"8281:3:11","nodeType":"YulIdentifier","src":"8281:3:11"},{"name":"length","nativeSrc":"8286:6:11","nodeType":"YulIdentifier","src":"8286:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"8223:57:11","nodeType":"YulIdentifier","src":"8223:57:11"},"nativeSrc":"8223:70:11","nodeType":"YulFunctionCall","src":"8223:70:11"},"variableNames":[{"name":"pos","nativeSrc":"8216:3:11","nodeType":"YulIdentifier","src":"8216:3:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"8341:5:11","nodeType":"YulIdentifier","src":"8341:5:11"},{"kind":"number","nativeSrc":"8348:4:11","nodeType":"YulLiteral","src":"8348:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8337:3:11","nodeType":"YulIdentifier","src":"8337:3:11"},"nativeSrc":"8337:16:11","nodeType":"YulFunctionCall","src":"8337:16:11"},{"name":"pos","nativeSrc":"8355:3:11","nodeType":"YulIdentifier","src":"8355:3:11"},{"name":"length","nativeSrc":"8360:6:11","nodeType":"YulIdentifier","src":"8360:6:11"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"8302:34:11","nodeType":"YulIdentifier","src":"8302:34:11"},"nativeSrc":"8302:65:11","nodeType":"YulFunctionCall","src":"8302:65:11"},"nativeSrc":"8302:65:11","nodeType":"YulExpressionStatement","src":"8302:65:11"},{"nativeSrc":"8376:46:11","nodeType":"YulAssignment","src":"8376:46:11","value":{"arguments":[{"name":"pos","nativeSrc":"8387:3:11","nodeType":"YulIdentifier","src":"8387:3:11"},{"arguments":[{"name":"length","nativeSrc":"8414:6:11","nodeType":"YulIdentifier","src":"8414:6:11"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"8392:21:11","nodeType":"YulIdentifier","src":"8392:21:11"},"nativeSrc":"8392:29:11","nodeType":"YulFunctionCall","src":"8392:29:11"}],"functionName":{"name":"add","nativeSrc":"8383:3:11","nodeType":"YulIdentifier","src":"8383:3:11"},"nativeSrc":"8383:39:11","nodeType":"YulFunctionCall","src":"8383:39:11"},"variableNames":[{"name":"end","nativeSrc":"8376:3:11","nodeType":"YulIdentifier","src":"8376:3:11"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"8055:373:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8126:5:11","nodeType":"YulTypedName","src":"8126:5:11","type":""},{"name":"pos","nativeSrc":"8133:3:11","nodeType":"YulTypedName","src":"8133:3:11","type":""}],"returnVariables":[{"name":"end","nativeSrc":"8141:3:11","nodeType":"YulTypedName","src":"8141:3:11","type":""}],"src":"8055:373:11"},{"body":{"nativeSrc":"8499:53:11","nodeType":"YulBlock","src":"8499:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8516:3:11","nodeType":"YulIdentifier","src":"8516:3:11"},{"arguments":[{"name":"value","nativeSrc":"8539:5:11","nodeType":"YulIdentifier","src":"8539:5:11"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"8521:17:11","nodeType":"YulIdentifier","src":"8521:17:11"},"nativeSrc":"8521:24:11","nodeType":"YulFunctionCall","src":"8521:24:11"}],"functionName":{"name":"mstore","nativeSrc":"8509:6:11","nodeType":"YulIdentifier","src":"8509:6:11"},"nativeSrc":"8509:37:11","nodeType":"YulFunctionCall","src":"8509:37:11"},"nativeSrc":"8509:37:11","nodeType":"YulExpressionStatement","src":"8509:37:11"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"8434:118:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8487:5:11","nodeType":"YulTypedName","src":"8487:5:11","type":""},{"name":"pos","nativeSrc":"8494:3:11","nodeType":"YulTypedName","src":"8494:3:11","type":""}],"src":"8434:118:11"},{"body":{"nativeSrc":"8702:275:11","nodeType":"YulBlock","src":"8702:275:11","statements":[{"nativeSrc":"8712:26:11","nodeType":"YulAssignment","src":"8712:26:11","value":{"arguments":[{"name":"headStart","nativeSrc":"8724:9:11","nodeType":"YulIdentifier","src":"8724:9:11"},{"kind":"number","nativeSrc":"8735:2:11","nodeType":"YulLiteral","src":"8735:2:11","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8720:3:11","nodeType":"YulIdentifier","src":"8720:3:11"},"nativeSrc":"8720:18:11","nodeType":"YulFunctionCall","src":"8720:18:11"},"variableNames":[{"name":"tail","nativeSrc":"8712:4:11","nodeType":"YulIdentifier","src":"8712:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8759:9:11","nodeType":"YulIdentifier","src":"8759:9:11"},{"kind":"number","nativeSrc":"8770:1:11","nodeType":"YulLiteral","src":"8770:1:11","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8755:3:11","nodeType":"YulIdentifier","src":"8755:3:11"},"nativeSrc":"8755:17:11","nodeType":"YulFunctionCall","src":"8755:17:11"},{"arguments":[{"name":"tail","nativeSrc":"8778:4:11","nodeType":"YulIdentifier","src":"8778:4:11"},{"name":"headStart","nativeSrc":"8784:9:11","nodeType":"YulIdentifier","src":"8784:9:11"}],"functionName":{"name":"sub","nativeSrc":"8774:3:11","nodeType":"YulIdentifier","src":"8774:3:11"},"nativeSrc":"8774:20:11","nodeType":"YulFunctionCall","src":"8774:20:11"}],"functionName":{"name":"mstore","nativeSrc":"8748:6:11","nodeType":"YulIdentifier","src":"8748:6:11"},"nativeSrc":"8748:47:11","nodeType":"YulFunctionCall","src":"8748:47:11"},"nativeSrc":"8748:47:11","nodeType":"YulExpressionStatement","src":"8748:47:11"},{"nativeSrc":"8804:84:11","nodeType":"YulAssignment","src":"8804:84:11","value":{"arguments":[{"name":"value0","nativeSrc":"8874:6:11","nodeType":"YulIdentifier","src":"8874:6:11"},{"name":"tail","nativeSrc":"8883:4:11","nodeType":"YulIdentifier","src":"8883:4:11"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"8812:61:11","nodeType":"YulIdentifier","src":"8812:61:11"},"nativeSrc":"8812:76:11","nodeType":"YulFunctionCall","src":"8812:76:11"},"variableNames":[{"name":"tail","nativeSrc":"8804:4:11","nodeType":"YulIdentifier","src":"8804:4:11"}]},{"expression":{"arguments":[{"name":"value1","nativeSrc":"8942:6:11","nodeType":"YulIdentifier","src":"8942:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"8955:9:11","nodeType":"YulIdentifier","src":"8955:9:11"},{"kind":"number","nativeSrc":"8966:2:11","nodeType":"YulLiteral","src":"8966:2:11","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8951:3:11","nodeType":"YulIdentifier","src":"8951:3:11"},"nativeSrc":"8951:18:11","nodeType":"YulFunctionCall","src":"8951:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"8898:43:11","nodeType":"YulIdentifier","src":"8898:43:11"},"nativeSrc":"8898:72:11","nodeType":"YulFunctionCall","src":"8898:72:11"},"nativeSrc":"8898:72:11","nodeType":"YulExpressionStatement","src":"8898:72:11"}]},"name":"abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed","nativeSrc":"8558:419:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8666:9:11","nodeType":"YulTypedName","src":"8666:9:11","type":""},{"name":"value1","nativeSrc":"8678:6:11","nodeType":"YulTypedName","src":"8678:6:11","type":""},{"name":"value0","nativeSrc":"8686:6:11","nodeType":"YulTypedName","src":"8686:6:11","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8697:4:11","nodeType":"YulTypedName","src":"8697:4:11","type":""}],"src":"8558:419:11"},{"body":{"nativeSrc":"9096:34:11","nodeType":"YulBlock","src":"9096:34:11","statements":[{"nativeSrc":"9106:18:11","nodeType":"YulAssignment","src":"9106:18:11","value":{"name":"pos","nativeSrc":"9121:3:11","nodeType":"YulIdentifier","src":"9121:3:11"},"variableNames":[{"name":"updated_pos","nativeSrc":"9106:11:11","nodeType":"YulIdentifier","src":"9106:11:11"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"8983:147:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"9068:3:11","nodeType":"YulTypedName","src":"9068:3:11","type":""},{"name":"length","nativeSrc":"9073:6:11","nodeType":"YulTypedName","src":"9073:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"9084:11:11","nodeType":"YulTypedName","src":"9084:11:11","type":""}],"src":"8983:147:11"},{"body":{"nativeSrc":"9242:8:11","nodeType":"YulBlock","src":"9242:8:11","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"9136:114:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"9234:6:11","nodeType":"YulTypedName","src":"9234:6:11","type":""}],"src":"9136:114:11"},{"body":{"nativeSrc":"9419:235:11","nodeType":"YulBlock","src":"9419:235:11","statements":[{"nativeSrc":"9429:90:11","nodeType":"YulAssignment","src":"9429:90:11","value":{"arguments":[{"name":"pos","nativeSrc":"9512:3:11","nodeType":"YulIdentifier","src":"9512:3:11"},{"kind":"number","nativeSrc":"9517:1:11","nodeType":"YulLiteral","src":"9517:1:11","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"9436:75:11","nodeType":"YulIdentifier","src":"9436:75:11"},"nativeSrc":"9436:83:11","nodeType":"YulFunctionCall","src":"9436:83:11"},"variableNames":[{"name":"pos","nativeSrc":"9429:3:11","nodeType":"YulIdentifier","src":"9429:3:11"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"9617:3:11","nodeType":"YulIdentifier","src":"9617:3:11"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"9528:88:11","nodeType":"YulIdentifier","src":"9528:88:11"},"nativeSrc":"9528:93:11","nodeType":"YulFunctionCall","src":"9528:93:11"},"nativeSrc":"9528:93:11","nodeType":"YulExpressionStatement","src":"9528:93:11"},{"nativeSrc":"9630:18:11","nodeType":"YulAssignment","src":"9630:18:11","value":{"arguments":[{"name":"pos","nativeSrc":"9641:3:11","nodeType":"YulIdentifier","src":"9641:3:11"},{"kind":"number","nativeSrc":"9646:1:11","nodeType":"YulLiteral","src":"9646:1:11","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9637:3:11","nodeType":"YulIdentifier","src":"9637:3:11"},"nativeSrc":"9637:11:11","nodeType":"YulFunctionCall","src":"9637:11:11"},"variableNames":[{"name":"end","nativeSrc":"9630:3:11","nodeType":"YulIdentifier","src":"9630:3:11"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"9256:398:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"9407:3:11","nodeType":"YulTypedName","src":"9407:3:11","type":""}],"returnVariables":[{"name":"end","nativeSrc":"9415:3:11","nodeType":"YulTypedName","src":"9415:3:11","type":""}],"src":"9256:398:11"},{"body":{"nativeSrc":"9848:191:11","nodeType":"YulBlock","src":"9848:191:11","statements":[{"nativeSrc":"9859:154:11","nodeType":"YulAssignment","src":"9859:154:11","value":{"arguments":[{"name":"pos","nativeSrc":"10009:3:11","nodeType":"YulIdentifier","src":"10009:3:11"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"9866:141:11","nodeType":"YulIdentifier","src":"9866:141:11"},"nativeSrc":"9866:147:11","nodeType":"YulFunctionCall","src":"9866:147:11"},"variableNames":[{"name":"pos","nativeSrc":"9859:3:11","nodeType":"YulIdentifier","src":"9859:3:11"}]},{"nativeSrc":"10023:10:11","nodeType":"YulAssignment","src":"10023:10:11","value":{"name":"pos","nativeSrc":"10030:3:11","nodeType":"YulIdentifier","src":"10030:3:11"},"variableNames":[{"name":"end","nativeSrc":"10023:3:11","nodeType":"YulIdentifier","src":"10023:3:11"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"9660:379:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"9835:3:11","nodeType":"YulTypedName","src":"9835:3:11","type":""}],"returnVariables":[{"name":"end","nativeSrc":"9844:3:11","nodeType":"YulTypedName","src":"9844:3:11","type":""}],"src":"9660:379:11"},{"body":{"nativeSrc":"10141:73:11","nodeType":"YulBlock","src":"10141:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10158:3:11","nodeType":"YulIdentifier","src":"10158:3:11"},{"name":"length","nativeSrc":"10163:6:11","nodeType":"YulIdentifier","src":"10163:6:11"}],"functionName":{"name":"mstore","nativeSrc":"10151:6:11","nodeType":"YulIdentifier","src":"10151:6:11"},"nativeSrc":"10151:19:11","nodeType":"YulFunctionCall","src":"10151:19:11"},"nativeSrc":"10151:19:11","nodeType":"YulExpressionStatement","src":"10151:19:11"},{"nativeSrc":"10179:29:11","nodeType":"YulAssignment","src":"10179:29:11","value":{"arguments":[{"name":"pos","nativeSrc":"10198:3:11","nodeType":"YulIdentifier","src":"10198:3:11"},{"kind":"number","nativeSrc":"10203:4:11","nodeType":"YulLiteral","src":"10203:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10194:3:11","nodeType":"YulIdentifier","src":"10194:3:11"},"nativeSrc":"10194:14:11","nodeType":"YulFunctionCall","src":"10194:14:11"},"variableNames":[{"name":"updated_pos","nativeSrc":"10179:11:11","nodeType":"YulIdentifier","src":"10179:11:11"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"10045:169:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"10113:3:11","nodeType":"YulTypedName","src":"10113:3:11","type":""},{"name":"length","nativeSrc":"10118:6:11","nodeType":"YulTypedName","src":"10118:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"10129:11:11","nodeType":"YulTypedName","src":"10129:11:11","type":""}],"src":"10045:169:11"},{"body":{"nativeSrc":"10326:59:11","nodeType":"YulBlock","src":"10326:59:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"10348:6:11","nodeType":"YulIdentifier","src":"10348:6:11"},{"kind":"number","nativeSrc":"10356:1:11","nodeType":"YulLiteral","src":"10356:1:11","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10344:3:11","nodeType":"YulIdentifier","src":"10344:3:11"},"nativeSrc":"10344:14:11","nodeType":"YulFunctionCall","src":"10344:14:11"},{"hexValue":"5769746864726177206661696c6564","kind":"string","nativeSrc":"10360:17:11","nodeType":"YulLiteral","src":"10360:17:11","type":"","value":"Withdraw failed"}],"functionName":{"name":"mstore","nativeSrc":"10337:6:11","nodeType":"YulIdentifier","src":"10337:6:11"},"nativeSrc":"10337:41:11","nodeType":"YulFunctionCall","src":"10337:41:11"},"nativeSrc":"10337:41:11","nodeType":"YulExpressionStatement","src":"10337:41:11"}]},"name":"store_literal_in_memory_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925","nativeSrc":"10220:165:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"10318:6:11","nodeType":"YulTypedName","src":"10318:6:11","type":""}],"src":"10220:165:11"},{"body":{"nativeSrc":"10537:220:11","nodeType":"YulBlock","src":"10537:220:11","statements":[{"nativeSrc":"10547:74:11","nodeType":"YulAssignment","src":"10547:74:11","value":{"arguments":[{"name":"pos","nativeSrc":"10613:3:11","nodeType":"YulIdentifier","src":"10613:3:11"},{"kind":"number","nativeSrc":"10618:2:11","nodeType":"YulLiteral","src":"10618:2:11","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"10554:58:11","nodeType":"YulIdentifier","src":"10554:58:11"},"nativeSrc":"10554:67:11","nodeType":"YulFunctionCall","src":"10554:67:11"},"variableNames":[{"name":"pos","nativeSrc":"10547:3:11","nodeType":"YulIdentifier","src":"10547:3:11"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"10719:3:11","nodeType":"YulIdentifier","src":"10719:3:11"}],"functionName":{"name":"store_literal_in_memory_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925","nativeSrc":"10630:88:11","nodeType":"YulIdentifier","src":"10630:88:11"},"nativeSrc":"10630:93:11","nodeType":"YulFunctionCall","src":"10630:93:11"},"nativeSrc":"10630:93:11","nodeType":"YulExpressionStatement","src":"10630:93:11"},{"nativeSrc":"10732:19:11","nodeType":"YulAssignment","src":"10732:19:11","value":{"arguments":[{"name":"pos","nativeSrc":"10743:3:11","nodeType":"YulIdentifier","src":"10743:3:11"},{"kind":"number","nativeSrc":"10748:2:11","nodeType":"YulLiteral","src":"10748:2:11","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10739:3:11","nodeType":"YulIdentifier","src":"10739:3:11"},"nativeSrc":"10739:12:11","nodeType":"YulFunctionCall","src":"10739:12:11"},"variableNames":[{"name":"end","nativeSrc":"10732:3:11","nodeType":"YulIdentifier","src":"10732:3:11"}]}]},"name":"abi_encode_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925_to_t_string_memory_ptr_fromStack","nativeSrc":"10391:366:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"10525:3:11","nodeType":"YulTypedName","src":"10525:3:11","type":""}],"returnVariables":[{"name":"end","nativeSrc":"10533:3:11","nodeType":"YulTypedName","src":"10533:3:11","type":""}],"src":"10391:366:11"},{"body":{"nativeSrc":"10934:248:11","nodeType":"YulBlock","src":"10934:248:11","statements":[{"nativeSrc":"10944:26:11","nodeType":"YulAssignment","src":"10944:26:11","value":{"arguments":[{"name":"headStart","nativeSrc":"10956:9:11","nodeType":"YulIdentifier","src":"10956:9:11"},{"kind":"number","nativeSrc":"10967:2:11","nodeType":"YulLiteral","src":"10967:2:11","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10952:3:11","nodeType":"YulIdentifier","src":"10952:3:11"},"nativeSrc":"10952:18:11","nodeType":"YulFunctionCall","src":"10952:18:11"},"variableNames":[{"name":"tail","nativeSrc":"10944:4:11","nodeType":"YulIdentifier","src":"10944:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10991:9:11","nodeType":"YulIdentifier","src":"10991:9:11"},{"kind":"number","nativeSrc":"11002:1:11","nodeType":"YulLiteral","src":"11002:1:11","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10987:3:11","nodeType":"YulIdentifier","src":"10987:3:11"},"nativeSrc":"10987:17:11","nodeType":"YulFunctionCall","src":"10987:17:11"},{"arguments":[{"name":"tail","nativeSrc":"11010:4:11","nodeType":"YulIdentifier","src":"11010:4:11"},{"name":"headStart","nativeSrc":"11016:9:11","nodeType":"YulIdentifier","src":"11016:9:11"}],"functionName":{"name":"sub","nativeSrc":"11006:3:11","nodeType":"YulIdentifier","src":"11006:3:11"},"nativeSrc":"11006:20:11","nodeType":"YulFunctionCall","src":"11006:20:11"}],"functionName":{"name":"mstore","nativeSrc":"10980:6:11","nodeType":"YulIdentifier","src":"10980:6:11"},"nativeSrc":"10980:47:11","nodeType":"YulFunctionCall","src":"10980:47:11"},"nativeSrc":"10980:47:11","nodeType":"YulExpressionStatement","src":"10980:47:11"},{"nativeSrc":"11036:139:11","nodeType":"YulAssignment","src":"11036:139:11","value":{"arguments":[{"name":"tail","nativeSrc":"11170:4:11","nodeType":"YulIdentifier","src":"11170:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925_to_t_string_memory_ptr_fromStack","nativeSrc":"11044:124:11","nodeType":"YulIdentifier","src":"11044:124:11"},"nativeSrc":"11044:131:11","nodeType":"YulFunctionCall","src":"11044:131:11"},"variableNames":[{"name":"tail","nativeSrc":"11036:4:11","nodeType":"YulIdentifier","src":"11036:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"10763:419:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10914:9:11","nodeType":"YulTypedName","src":"10914:9:11","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10929:4:11","nodeType":"YulTypedName","src":"10929:4:11","type":""}],"src":"10763:419:11"},{"body":{"nativeSrc":"11294:59:11","nodeType":"YulBlock","src":"11294:59:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"11316:6:11","nodeType":"YulIdentifier","src":"11316:6:11"},{"kind":"number","nativeSrc":"11324:1:11","nodeType":"YulLiteral","src":"11324:1:11","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11312:3:11","nodeType":"YulIdentifier","src":"11312:3:11"},"nativeSrc":"11312:14:11","nodeType":"YulFunctionCall","src":"11312:14:11"},{"hexValue":"4f6e6c7920456e747279506f696e74","kind":"string","nativeSrc":"11328:17:11","nodeType":"YulLiteral","src":"11328:17:11","type":"","value":"Only EntryPoint"}],"functionName":{"name":"mstore","nativeSrc":"11305:6:11","nodeType":"YulIdentifier","src":"11305:6:11"},"nativeSrc":"11305:41:11","nodeType":"YulFunctionCall","src":"11305:41:11"},"nativeSrc":"11305:41:11","nodeType":"YulExpressionStatement","src":"11305:41:11"}]},"name":"store_literal_in_memory_8081059fb7da58d2423f5ba8138b19c21678a526efdfea15067fdffa2fe858c5","nativeSrc":"11188:165:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"11286:6:11","nodeType":"YulTypedName","src":"11286:6:11","type":""}],"src":"11188:165:11"},{"body":{"nativeSrc":"11505:220:11","nodeType":"YulBlock","src":"11505:220:11","statements":[{"nativeSrc":"11515:74:11","nodeType":"YulAssignment","src":"11515:74:11","value":{"arguments":[{"name":"pos","nativeSrc":"11581:3:11","nodeType":"YulIdentifier","src":"11581:3:11"},{"kind":"number","nativeSrc":"11586:2:11","nodeType":"YulLiteral","src":"11586:2:11","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"11522:58:11","nodeType":"YulIdentifier","src":"11522:58:11"},"nativeSrc":"11522:67:11","nodeType":"YulFunctionCall","src":"11522:67:11"},"variableNames":[{"name":"pos","nativeSrc":"11515:3:11","nodeType":"YulIdentifier","src":"11515:3:11"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"11687:3:11","nodeType":"YulIdentifier","src":"11687:3:11"}],"functionName":{"name":"store_literal_in_memory_8081059fb7da58d2423f5ba8138b19c21678a526efdfea15067fdffa2fe858c5","nativeSrc":"11598:88:11","nodeType":"YulIdentifier","src":"11598:88:11"},"nativeSrc":"11598:93:11","nodeType":"YulFunctionCall","src":"11598:93:11"},"nativeSrc":"11598:93:11","nodeType":"YulExpressionStatement","src":"11598:93:11"},{"nativeSrc":"11700:19:11","nodeType":"YulAssignment","src":"11700:19:11","value":{"arguments":[{"name":"pos","nativeSrc":"11711:3:11","nodeType":"YulIdentifier","src":"11711:3:11"},{"kind":"number","nativeSrc":"11716:2:11","nodeType":"YulLiteral","src":"11716:2:11","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11707:3:11","nodeType":"YulIdentifier","src":"11707:3:11"},"nativeSrc":"11707:12:11","nodeType":"YulFunctionCall","src":"11707:12:11"},"variableNames":[{"name":"end","nativeSrc":"11700:3:11","nodeType":"YulIdentifier","src":"11700:3:11"}]}]},"name":"abi_encode_t_stringliteral_8081059fb7da58d2423f5ba8138b19c21678a526efdfea15067fdffa2fe858c5_to_t_string_memory_ptr_fromStack","nativeSrc":"11359:366:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"11493:3:11","nodeType":"YulTypedName","src":"11493:3:11","type":""}],"returnVariables":[{"name":"end","nativeSrc":"11501:3:11","nodeType":"YulTypedName","src":"11501:3:11","type":""}],"src":"11359:366:11"},{"body":{"nativeSrc":"11902:248:11","nodeType":"YulBlock","src":"11902:248:11","statements":[{"nativeSrc":"11912:26:11","nodeType":"YulAssignment","src":"11912:26:11","value":{"arguments":[{"name":"headStart","nativeSrc":"11924:9:11","nodeType":"YulIdentifier","src":"11924:9:11"},{"kind":"number","nativeSrc":"11935:2:11","nodeType":"YulLiteral","src":"11935:2:11","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11920:3:11","nodeType":"YulIdentifier","src":"11920:3:11"},"nativeSrc":"11920:18:11","nodeType":"YulFunctionCall","src":"11920:18:11"},"variableNames":[{"name":"tail","nativeSrc":"11912:4:11","nodeType":"YulIdentifier","src":"11912:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11959:9:11","nodeType":"YulIdentifier","src":"11959:9:11"},{"kind":"number","nativeSrc":"11970:1:11","nodeType":"YulLiteral","src":"11970:1:11","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11955:3:11","nodeType":"YulIdentifier","src":"11955:3:11"},"nativeSrc":"11955:17:11","nodeType":"YulFunctionCall","src":"11955:17:11"},{"arguments":[{"name":"tail","nativeSrc":"11978:4:11","nodeType":"YulIdentifier","src":"11978:4:11"},{"name":"headStart","nativeSrc":"11984:9:11","nodeType":"YulIdentifier","src":"11984:9:11"}],"functionName":{"name":"sub","nativeSrc":"11974:3:11","nodeType":"YulIdentifier","src":"11974:3:11"},"nativeSrc":"11974:20:11","nodeType":"YulFunctionCall","src":"11974:20:11"}],"functionName":{"name":"mstore","nativeSrc":"11948:6:11","nodeType":"YulIdentifier","src":"11948:6:11"},"nativeSrc":"11948:47:11","nodeType":"YulFunctionCall","src":"11948:47:11"},"nativeSrc":"11948:47:11","nodeType":"YulExpressionStatement","src":"11948:47:11"},{"nativeSrc":"12004:139:11","nodeType":"YulAssignment","src":"12004:139:11","value":{"arguments":[{"name":"tail","nativeSrc":"12138:4:11","nodeType":"YulIdentifier","src":"12138:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_8081059fb7da58d2423f5ba8138b19c21678a526efdfea15067fdffa2fe858c5_to_t_string_memory_ptr_fromStack","nativeSrc":"12012:124:11","nodeType":"YulIdentifier","src":"12012:124:11"},"nativeSrc":"12012:131:11","nodeType":"YulFunctionCall","src":"12012:131:11"},"variableNames":[{"name":"tail","nativeSrc":"12004:4:11","nodeType":"YulIdentifier","src":"12004:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_8081059fb7da58d2423f5ba8138b19c21678a526efdfea15067fdffa2fe858c5__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"11731:419:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11882:9:11","nodeType":"YulTypedName","src":"11882:9:11","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11897:4:11","nodeType":"YulTypedName","src":"11897:4:11","type":""}],"src":"11731:419:11"},{"body":{"nativeSrc":"12230:271:11","nodeType":"YulBlock","src":"12230:271:11","statements":[{"body":{"nativeSrc":"12276:83:11","nodeType":"YulBlock","src":"12276:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"12278:77:11","nodeType":"YulIdentifier","src":"12278:77:11"},"nativeSrc":"12278:79:11","nodeType":"YulFunctionCall","src":"12278:79:11"},"nativeSrc":"12278:79:11","nodeType":"YulExpressionStatement","src":"12278:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"12251:7:11","nodeType":"YulIdentifier","src":"12251:7:11"},{"name":"headStart","nativeSrc":"12260:9:11","nodeType":"YulIdentifier","src":"12260:9:11"}],"functionName":{"name":"sub","nativeSrc":"12247:3:11","nodeType":"YulIdentifier","src":"12247:3:11"},"nativeSrc":"12247:23:11","nodeType":"YulFunctionCall","src":"12247:23:11"},{"kind":"number","nativeSrc":"12272:2:11","nodeType":"YulLiteral","src":"12272:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"12243:3:11","nodeType":"YulIdentifier","src":"12243:3:11"},"nativeSrc":"12243:32:11","nodeType":"YulFunctionCall","src":"12243:32:11"},"nativeSrc":"12240:119:11","nodeType":"YulIf","src":"12240:119:11"},{"nativeSrc":"12369:125:11","nodeType":"YulBlock","src":"12369:125:11","statements":[{"nativeSrc":"12384:15:11","nodeType":"YulVariableDeclaration","src":"12384:15:11","value":{"kind":"number","nativeSrc":"12398:1:11","nodeType":"YulLiteral","src":"12398:1:11","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"12388:6:11","nodeType":"YulTypedName","src":"12388:6:11","type":""}]},{"nativeSrc":"12413:71:11","nodeType":"YulAssignment","src":"12413:71:11","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12456:9:11","nodeType":"YulIdentifier","src":"12456:9:11"},{"name":"offset","nativeSrc":"12467:6:11","nodeType":"YulIdentifier","src":"12467:6:11"}],"functionName":{"name":"add","nativeSrc":"12452:3:11","nodeType":"YulIdentifier","src":"12452:3:11"},"nativeSrc":"12452:22:11","nodeType":"YulFunctionCall","src":"12452:22:11"},{"name":"dataEnd","nativeSrc":"12476:7:11","nodeType":"YulIdentifier","src":"12476:7:11"}],"functionName":{"name":"abi_decode_t_address_payable","nativeSrc":"12423:28:11","nodeType":"YulIdentifier","src":"12423:28:11"},"nativeSrc":"12423:61:11","nodeType":"YulFunctionCall","src":"12423:61:11"},"variableNames":[{"name":"value0","nativeSrc":"12413:6:11","nodeType":"YulIdentifier","src":"12413:6:11"}]}]}]},"name":"abi_decode_tuple_t_address_payable","nativeSrc":"12156:345:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12200:9:11","nodeType":"YulTypedName","src":"12200:9:11","type":""},{"name":"dataEnd","nativeSrc":"12211:7:11","nodeType":"YulTypedName","src":"12211:7:11","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"12223:6:11","nodeType":"YulTypedName","src":"12223:6:11","type":""}],"src":"12156:345:11"},{"body":{"nativeSrc":"12633:206:11","nodeType":"YulBlock","src":"12633:206:11","statements":[{"nativeSrc":"12643:26:11","nodeType":"YulAssignment","src":"12643:26:11","value":{"arguments":[{"name":"headStart","nativeSrc":"12655:9:11","nodeType":"YulIdentifier","src":"12655:9:11"},{"kind":"number","nativeSrc":"12666:2:11","nodeType":"YulLiteral","src":"12666:2:11","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12651:3:11","nodeType":"YulIdentifier","src":"12651:3:11"},"nativeSrc":"12651:18:11","nodeType":"YulFunctionCall","src":"12651:18:11"},"variableNames":[{"name":"tail","nativeSrc":"12643:4:11","nodeType":"YulIdentifier","src":"12643:4:11"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12723:6:11","nodeType":"YulIdentifier","src":"12723:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"12736:9:11","nodeType":"YulIdentifier","src":"12736:9:11"},{"kind":"number","nativeSrc":"12747:1:11","nodeType":"YulLiteral","src":"12747:1:11","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12732:3:11","nodeType":"YulIdentifier","src":"12732:3:11"},"nativeSrc":"12732:17:11","nodeType":"YulFunctionCall","src":"12732:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12679:43:11","nodeType":"YulIdentifier","src":"12679:43:11"},"nativeSrc":"12679:71:11","nodeType":"YulFunctionCall","src":"12679:71:11"},"nativeSrc":"12679:71:11","nodeType":"YulExpressionStatement","src":"12679:71:11"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"12804:6:11","nodeType":"YulIdentifier","src":"12804:6:11"},{"arguments":[{"name":"headStart","nativeSrc":"12817:9:11","nodeType":"YulIdentifier","src":"12817:9:11"},{"kind":"number","nativeSrc":"12828:2:11","nodeType":"YulLiteral","src":"12828:2:11","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12813:3:11","nodeType":"YulIdentifier","src":"12813:3:11"},"nativeSrc":"12813:18:11","nodeType":"YulFunctionCall","src":"12813:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12760:43:11","nodeType":"YulIdentifier","src":"12760:43:11"},"nativeSrc":"12760:72:11","nodeType":"YulFunctionCall","src":"12760:72:11"},"nativeSrc":"12760:72:11","nodeType":"YulExpressionStatement","src":"12760:72:11"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"12507:332:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12597:9:11","nodeType":"YulTypedName","src":"12597:9:11","type":""},{"name":"value1","nativeSrc":"12609:6:11","nodeType":"YulTypedName","src":"12609:6:11","type":""},{"name":"value0","nativeSrc":"12617:6:11","nodeType":"YulTypedName","src":"12617:6:11","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12628:4:11","nodeType":"YulTypedName","src":"12628:4:11","type":""}],"src":"12507:332:11"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_enum$_PostOpMode_$505(value) {\n        if iszero(lt(value, 3)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_PostOpMode_$505(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_PostOpMode_$505(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_enum$_PostOpMode_$505t_bytes_calldata_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_PostOpMode_$505(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IEntryPoint_$478_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IEntryPoint_$478_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IEntryPoint_$478_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IEntryPoint_$478__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IEntryPoint_$478_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() {\n        revert(0, 0)\n    }\n\n    // struct UserOperation\n    function abi_decode_t_struct$_UserOperation_$666_calldata_ptr(offset, end) -> value {\n        if slt(sub(end, offset), 352) { revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() }\n        value := offset\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_struct$_UserOperation_$666_calldata_ptrt_bytes32t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_struct$_UserOperation_$666_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925(memPtr) {\n\n        mstore(add(memPtr, 0), \"Withdraw failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8081059fb7da58d2423f5ba8138b19c21678a526efdfea15067fdffa2fe858c5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only EntryPoint\")\n\n    }\n\n    function abi_encode_t_stringliteral_8081059fb7da58d2423f5ba8138b19c21678a526efdfea15067fdffa2fe858c5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_8081059fb7da58d2423f5ba8138b19c21678a526efdfea15067fdffa2fe858c5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8081059fb7da58d2423f5ba8138b19c21678a526efdfea15067fdffa2fe858c5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8081059fb7da58d2423f5ba8138b19c21678a526efdfea15067fdffa2fe858c5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1137":[{"length":32,"start":670},{"length":32,"start":830},{"length":32,"start":1004}]},"linkReferences":{},"object":"6080604052600436106100745760003560e01c8063a9a234091161004e578063a9a23409146100eb578063b0d691fe14610114578063f2fde38b1461013f578063f465c77e146101685761007b565b8063205c287814610080578063715018a6146100a95780638da5cb5b146100c05761007b565b3661007b57005b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a2919061072e565b6101a6565b005b3480156100b557600080fd5b506100be61025f565b005b3480156100cc57600080fd5b506100d5610273565b6040516100e2919061078f565b60405180910390f35b3480156100f757600080fd5b50610112600480360381019061010d9190610834565b61029c565b005b34801561012057600080fd5b5061012961033c565b6040516101369190610907565b60405180910390f35b34801561014b57600080fd5b506101666004803603810190610161919061094e565b610360565b005b34801561017457600080fd5b5061018f600480360381019061018a91906109d6565b6103e6565b60405161019d929190610ae4565b60405180910390f35b6101ae61048f565b60008273ffffffffffffffffffffffffffffffffffffffff16826040516101d490610b45565b60006040518083038185875af1925050503d8060008114610211576040519150601f19603f3d011682016040523d82523d6000602084013e610216565b606091505b505090508061025a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025190610bb7565b60405180910390fd5b505050565b61026761048f565b6102716000610516565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461032a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032190610c23565b60405180910390fd5b610336848484846105da565b50505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b61036861048f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103da5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016103d1919061078f565b60405180910390fd5b6103e381610516565b50565b606060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610478576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046f90610c23565b60405180910390fd5b610483858585610644565b91509150935093915050565b610497610688565b73ffffffffffffffffffffffffffffffffffffffff166104b5610273565b73ffffffffffffffffffffffffffffffffffffffff1614610514576104d8610688565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161050b919061078f565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600083838101906105eb9190610c43565b90508073ffffffffffffffffffffffffffffffffffffffff167fb3d8da13e2eec10930982ae94cc39cd56a1e686b864a50f632765647bdfe622b8342604051610635929190610c70565b60405180910390a25050505050565b6060600084600001602081019061065b919061094e565b60405160200161066b919061078f565b604051602081830303815290604052600091509150935093915050565b600033905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106c58261069a565b9050919050565b6106d5816106ba565b81146106e057600080fd5b50565b6000813590506106f2816106cc565b92915050565b6000819050919050565b61070b816106f8565b811461071657600080fd5b50565b60008135905061072881610702565b92915050565b6000806040838503121561074557610744610690565b5b6000610753858286016106e3565b925050602061076485828601610719565b9150509250929050565b60006107798261069a565b9050919050565b6107898161076e565b82525050565b60006020820190506107a46000830184610780565b92915050565b600381106107b757600080fd5b50565b6000813590506107c9816107aa565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126107f4576107f36107cf565b5b8235905067ffffffffffffffff811115610811576108106107d4565b5b60208301915083600182028301111561082d5761082c6107d9565b5b9250929050565b6000806000806060858703121561084e5761084d610690565b5b600061085c878288016107ba565b945050602085013567ffffffffffffffff81111561087d5761087c610695565b5b610889878288016107de565b9350935050604061089c87828801610719565b91505092959194509250565b6000819050919050565b60006108cd6108c86108c38461069a565b6108a8565b61069a565b9050919050565b60006108df826108b2565b9050919050565b60006108f1826108d4565b9050919050565b610901816108e6565b82525050565b600060208201905061091c60008301846108f8565b92915050565b61092b8161076e565b811461093657600080fd5b50565b60008135905061094881610922565b92915050565b60006020828403121561096457610963610690565b5b600061097284828501610939565b91505092915050565b600080fd5b600061016082840312156109975761099661097b565b5b81905092915050565b6000819050919050565b6109b3816109a0565b81146109be57600080fd5b50565b6000813590506109d0816109aa565b92915050565b6000806000606084860312156109ef576109ee610690565b5b600084013567ffffffffffffffff811115610a0d57610a0c610695565b5b610a1986828701610980565b9350506020610a2a868287016109c1565b9250506040610a3b86828701610719565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a7f578082015181840152602081019050610a64565b60008484015250505050565b6000601f19601f8301169050919050565b6000610aa782610a45565b610ab18185610a50565b9350610ac1818560208601610a61565b610aca81610a8b565b840191505092915050565b610ade816106f8565b82525050565b60006040820190508181036000830152610afe8185610a9c565b9050610b0d6020830184610ad5565b9392505050565b600081905092915050565b50565b6000610b2f600083610b14565b9150610b3a82610b1f565b600082019050919050565b6000610b5082610b22565b9150819050919050565b600082825260208201905092915050565b7f5769746864726177206661696c65640000000000000000000000000000000000600082015250565b6000610ba1600f83610b5a565b9150610bac82610b6b565b602082019050919050565b60006020820190508181036000830152610bd081610b94565b9050919050565b7f4f6e6c7920456e747279506f696e740000000000000000000000000000000000600082015250565b6000610c0d600f83610b5a565b9150610c1882610bd7565b602082019050919050565b60006020820190508181036000830152610c3c81610c00565b9050919050565b600060208284031215610c5957610c58610690565b5b6000610c67848285016106e3565b91505092915050565b6000604082019050610c856000830185610ad5565b610c926020830184610ad5565b939250505056fea26469706673582212205e077ec2a1df553b2bab3130dc349a73e01d2b63fdd99751d6e7e6994e15db9764736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x74 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA9A23409 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xA9A23409 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0xF465C77E EQ PUSH2 0x168 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x205C2878 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC0 JUMPI PUSH2 0x7B JUMP JUMPDEST CALLDATASIZE PUSH2 0x7B JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x72E JUMP JUMPDEST PUSH2 0x1A6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBE PUSH2 0x25F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD5 PUSH2 0x273 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x78F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x112 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x834 JUMP JUMPDEST PUSH2 0x29C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH2 0x33C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x907 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x94E JUMP JUMPDEST PUSH2 0x360 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x9D6 JUMP JUMPDEST PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP3 SWAP2 SWAP1 PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH2 0x48F JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP1 PUSH2 0xB45 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x211 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x216 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x25A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x251 SWAP1 PUSH2 0xBB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x267 PUSH2 0x48F JUMP JUMPDEST PUSH2 0x271 PUSH1 0x0 PUSH2 0x516 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x32A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x321 SWAP1 PUSH2 0xC23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x336 DUP5 DUP5 DUP5 DUP5 PUSH2 0x5DA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x368 PUSH2 0x48F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3DA JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0x78F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3E3 DUP2 PUSH2 0x516 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x478 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46F SWAP1 PUSH2 0xC23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x483 DUP6 DUP6 DUP6 PUSH2 0x644 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x497 PUSH2 0x688 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4B5 PUSH2 0x273 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x514 JUMPI PUSH2 0x4D8 PUSH2 0x688 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP2 SWAP1 PUSH2 0x78F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 DUP2 ADD SWAP1 PUSH2 0x5EB SWAP2 SWAP1 PUSH2 0xC43 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB3D8DA13E2EEC10930982AE94CC39CD56A1E686B864A50F632765647BDFE622B DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x635 SWAP3 SWAP2 SWAP1 PUSH2 0xC70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP5 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x65B SWAP2 SWAP1 PUSH2 0x94E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x66B SWAP2 SWAP1 PUSH2 0x78F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C5 DUP3 PUSH2 0x69A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6D5 DUP2 PUSH2 0x6BA JUMP JUMPDEST DUP2 EQ PUSH2 0x6E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6F2 DUP2 PUSH2 0x6CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x70B DUP2 PUSH2 0x6F8 JUMP JUMPDEST DUP2 EQ PUSH2 0x716 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x728 DUP2 PUSH2 0x702 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x745 JUMPI PUSH2 0x744 PUSH2 0x690 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x753 DUP6 DUP3 DUP7 ADD PUSH2 0x6E3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x764 DUP6 DUP3 DUP7 ADD PUSH2 0x719 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x779 DUP3 PUSH2 0x69A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x789 DUP2 PUSH2 0x76E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7A4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x780 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x7B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7C9 DUP2 PUSH2 0x7AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x7F4 JUMPI PUSH2 0x7F3 PUSH2 0x7CF JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x811 JUMPI PUSH2 0x810 PUSH2 0x7D4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x82D JUMPI PUSH2 0x82C PUSH2 0x7D9 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x84E JUMPI PUSH2 0x84D PUSH2 0x690 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x85C DUP8 DUP3 DUP9 ADD PUSH2 0x7BA JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x87D JUMPI PUSH2 0x87C PUSH2 0x695 JUMP JUMPDEST JUMPDEST PUSH2 0x889 DUP8 DUP3 DUP9 ADD PUSH2 0x7DE JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x40 PUSH2 0x89C DUP8 DUP3 DUP9 ADD PUSH2 0x719 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8CD PUSH2 0x8C8 PUSH2 0x8C3 DUP5 PUSH2 0x69A JUMP JUMPDEST PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0x69A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8DF DUP3 PUSH2 0x8B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F1 DUP3 PUSH2 0x8D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x901 DUP2 PUSH2 0x8E6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x91C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x92B DUP2 PUSH2 0x76E JUMP JUMPDEST DUP2 EQ PUSH2 0x936 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x948 DUP2 PUSH2 0x922 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x964 JUMPI PUSH2 0x963 PUSH2 0x690 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x972 DUP5 DUP3 DUP6 ADD PUSH2 0x939 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x997 JUMPI PUSH2 0x996 PUSH2 0x97B JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9B3 DUP2 PUSH2 0x9A0 JUMP JUMPDEST DUP2 EQ PUSH2 0x9BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9D0 DUP2 PUSH2 0x9AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9EF JUMPI PUSH2 0x9EE PUSH2 0x690 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA0D JUMPI PUSH2 0xA0C PUSH2 0x695 JUMP JUMPDEST JUMPDEST PUSH2 0xA19 DUP7 DUP3 DUP8 ADD PUSH2 0x980 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xA2A DUP7 DUP3 DUP8 ADD PUSH2 0x9C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xA3B DUP7 DUP3 DUP8 ADD PUSH2 0x719 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA7F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA64 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAA7 DUP3 PUSH2 0xA45 JUMP JUMPDEST PUSH2 0xAB1 DUP2 DUP6 PUSH2 0xA50 JUMP JUMPDEST SWAP4 POP PUSH2 0xAC1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA61 JUMP JUMPDEST PUSH2 0xACA DUP2 PUSH2 0xA8B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xADE DUP2 PUSH2 0x6F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAFE DUP2 DUP6 PUSH2 0xA9C JUMP JUMPDEST SWAP1 POP PUSH2 0xB0D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAD5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB2F PUSH1 0x0 DUP4 PUSH2 0xB14 JUMP JUMPDEST SWAP2 POP PUSH2 0xB3A DUP3 PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB50 DUP3 PUSH2 0xB22 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5769746864726177206661696C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBA1 PUSH1 0xF DUP4 PUSH2 0xB5A JUMP JUMPDEST SWAP2 POP PUSH2 0xBAC DUP3 PUSH2 0xB6B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBD0 DUP2 PUSH2 0xB94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C7920456E747279506F696E740000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC0D PUSH1 0xF DUP4 PUSH2 0xB5A JUMP JUMPDEST SWAP2 POP PUSH2 0xC18 DUP3 PUSH2 0xBD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC3C DUP2 PUSH2 0xC00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC59 JUMPI PUSH2 0xC58 PUSH2 0x690 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC67 DUP5 DUP3 DUP6 ADD PUSH2 0x6E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC85 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xAD5 JUMP JUMPDEST PUSH2 0xC92 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAD5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MCOPY SMOD PUSH31 0xC2A1DF553B2BAB3130DC349A73E01D2B63FDD99751D6E7E6994E15DB976473 PUSH16 0x6C634300081C00330000000000000000 ","sourceMap":"153:1106:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1076:181;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:7;;;;;;;;;;;;;:::i;:::-;;1638:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;875:205:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;322:39;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;573:296:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1076:181:9;1531:13:7;:11;:13::i;:::-;1162:12:9::1;1179:2;:7;;1194:6;1179:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1161:44;;;1223:7;1215:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;1151:106;1076:181:::0;;:::o;2293:101:7:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;875:205:10:-;518:10;496:33;;:10;:33;;;488:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;1036:37:::1;1044:4;1050:7;;1059:13;1036:7;:37::i;:::-;875:205:::0;;;;:::o;322:39::-;;;:::o;2543:215:7:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;573:296:10:-;746:20;768:22;518:10;496:33;;:10;:33;;;488:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;809:53:::1;834:6;842:10;854:7;809:24;:53::i;:::-;802:60;;;;573:296:::0;;;;;;:::o;1796:162:7:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;815:255:9:-;949:14;977:7;;966:30;;;;;;;:::i;:::-;949:47;;1024:6;1011:52;;;1032:13;1047:15;1011:52;;;;;;;:::i;:::-;;;;;;;;939:131;815:255;;;;:::o;472:337::-;617:20;639:22;784:6;:13;;;;;;;;;;:::i;:::-;773:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;800:1;765:37;;;;472:337;;;;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;88:117:11:-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:104::-;511:7;540:24;558:5;540:24;:::i;:::-;529:35;;466:104;;;:::o;576:138::-;657:32;683:5;657:32;:::i;:::-;650:5;647:43;637:71;;704:1;701;694:12;637:71;576:138;:::o;720:155::-;774:5;812:6;799:20;790:29;;828:41;863:5;828:41;:::i;:::-;720:155;;;;:::o;881:77::-;918:7;947:5;936:16;;881:77;;;:::o;964:122::-;1037:24;1055:5;1037:24;:::i;:::-;1030:5;1027:35;1017:63;;1076:1;1073;1066:12;1017:63;964:122;:::o;1092:139::-;1138:5;1176:6;1163:20;1154:29;;1192:33;1219:5;1192:33;:::i;:::-;1092:139;;;;:::o;1237:490::-;1313:6;1321;1370:2;1358:9;1349:7;1345:23;1341:32;1338:119;;;1376:79;;:::i;:::-;1338:119;1496:1;1521:61;1574:7;1565:6;1554:9;1550:22;1521:61;:::i;:::-;1511:71;;1467:125;1631:2;1657:53;1702:7;1693:6;1682:9;1678:22;1657:53;:::i;:::-;1647:63;;1602:118;1237:490;;;;;:::o;1733:96::-;1770:7;1799:24;1817:5;1799:24;:::i;:::-;1788:35;;1733:96;;;:::o;1835:118::-;1922:24;1940:5;1922:24;:::i;:::-;1917:3;1910:37;1835:118;;:::o;1959:222::-;2052:4;2090:2;2079:9;2075:18;2067:26;;2103:71;2171:1;2160:9;2156:17;2147:6;2103:71;:::i;:::-;1959:222;;;;:::o;2187:113::-;2274:1;2267:5;2264:12;2254:40;;2290:1;2287;2280:12;2254:40;2187:113;:::o;2306:167::-;2366:5;2404:6;2391:20;2382:29;;2420:47;2461:5;2420:47;:::i;:::-;2306:167;;;;:::o;2479:117::-;2588:1;2585;2578:12;2602:117;2711:1;2708;2701:12;2725:117;2834:1;2831;2824:12;2861:552;2918:8;2928:6;2978:3;2971:4;2963:6;2959:17;2955:27;2945:122;;2986:79;;:::i;:::-;2945:122;3099:6;3086:20;3076:30;;3129:18;3121:6;3118:30;3115:117;;;3151:79;;:::i;:::-;3115:117;3265:4;3257:6;3253:17;3241:29;;3319:3;3311:4;3303:6;3299:17;3289:8;3285:32;3282:41;3279:128;;;3326:79;;:::i;:::-;3279:128;2861:552;;;;;:::o;3419:845::-;3521:6;3529;3537;3545;3594:2;3582:9;3573:7;3569:23;3565:32;3562:119;;;3600:79;;:::i;:::-;3562:119;3720:1;3745:67;3804:7;3795:6;3784:9;3780:22;3745:67;:::i;:::-;3735:77;;3691:131;3889:2;3878:9;3874:18;3861:32;3920:18;3912:6;3909:30;3906:117;;;3942:79;;:::i;:::-;3906:117;4055:64;4111:7;4102:6;4091:9;4087:22;4055:64;:::i;:::-;4037:82;;;;3832:297;4168:2;4194:53;4239:7;4230:6;4219:9;4215:22;4194:53;:::i;:::-;4184:63;;4139:118;3419:845;;;;;;;:::o;4270:60::-;4298:3;4319:5;4312:12;;4270:60;;;:::o;4336:142::-;4386:9;4419:53;4437:34;4446:24;4464:5;4446:24;:::i;:::-;4437:34;:::i;:::-;4419:53;:::i;:::-;4406:66;;4336:142;;;:::o;4484:126::-;4534:9;4567:37;4598:5;4567:37;:::i;:::-;4554:50;;4484:126;;;:::o;4616:145::-;4685:9;4718:37;4749:5;4718:37;:::i;:::-;4705:50;;4616:145;;;:::o;4767:169::-;4873:56;4923:5;4873:56;:::i;:::-;4868:3;4861:69;4767:169;;:::o;4942:260::-;5054:4;5092:2;5081:9;5077:18;5069:26;;5105:90;5192:1;5181:9;5177:17;5168:6;5105:90;:::i;:::-;4942:260;;;;:::o;5208:122::-;5281:24;5299:5;5281:24;:::i;:::-;5274:5;5271:35;5261:63;;5320:1;5317;5310:12;5261:63;5208:122;:::o;5336:139::-;5382:5;5420:6;5407:20;5398:29;;5436:33;5463:5;5436:33;:::i;:::-;5336:139;;;;:::o;5481:329::-;5540:6;5589:2;5577:9;5568:7;5564:23;5560:32;5557:119;;;5595:79;;:::i;:::-;5557:119;5715:1;5740:53;5785:7;5776:6;5765:9;5761:22;5740:53;:::i;:::-;5730:63;;5686:117;5481:329;;;;:::o;5816:117::-;5925:1;5922;5915:12;5967:237;6045:5;6086:3;6077:6;6072:3;6068:16;6064:26;6061:113;;;6093:79;;:::i;:::-;6061:113;6192:6;6183:15;;5967:237;;;;:::o;6210:77::-;6247:7;6276:5;6265:16;;6210:77;;;:::o;6293:122::-;6366:24;6384:5;6366:24;:::i;:::-;6359:5;6356:35;6346:63;;6405:1;6402;6395:12;6346:63;6293:122;:::o;6421:139::-;6467:5;6505:6;6492:20;6483:29;;6521:33;6548:5;6521:33;:::i;:::-;6421:139;;;;:::o;6566:843::-;6675:6;6683;6691;6740:2;6728:9;6719:7;6715:23;6711:32;6708:119;;;6746:79;;:::i;:::-;6708:119;6894:1;6883:9;6879:17;6866:31;6924:18;6916:6;6913:30;6910:117;;;6946:79;;:::i;:::-;6910:117;7051:85;7128:7;7119:6;7108:9;7104:22;7051:85;:::i;:::-;7041:95;;6837:309;7185:2;7211:53;7256:7;7247:6;7236:9;7232:22;7211:53;:::i;:::-;7201:63;;7156:118;7313:2;7339:53;7384:7;7375:6;7364:9;7360:22;7339:53;:::i;:::-;7329:63;;7284:118;6566:843;;;;;:::o;7415:98::-;7466:6;7500:5;7494:12;7484:22;;7415:98;;;:::o;7519:168::-;7602:11;7636:6;7631:3;7624:19;7676:4;7671:3;7667:14;7652:29;;7519:168;;;;:::o;7693:248::-;7775:1;7785:113;7799:6;7796:1;7793:13;7785:113;;;7884:1;7879:3;7875:11;7869:18;7865:1;7860:3;7856:11;7849:39;7821:2;7818:1;7814:10;7809:15;;7785:113;;;7932:1;7923:6;7918:3;7914:16;7907:27;7755:186;7693:248;;;:::o;7947:102::-;7988:6;8039:2;8035:7;8030:2;8023:5;8019:14;8015:28;8005:38;;7947:102;;;:::o;8055:373::-;8141:3;8169:38;8201:5;8169:38;:::i;:::-;8223:70;8286:6;8281:3;8223:70;:::i;:::-;8216:77;;8302:65;8360:6;8355:3;8348:4;8341:5;8337:16;8302:65;:::i;:::-;8392:29;8414:6;8392:29;:::i;:::-;8387:3;8383:39;8376:46;;8145:283;8055:373;;;;:::o;8434:118::-;8521:24;8539:5;8521:24;:::i;:::-;8516:3;8509:37;8434:118;;:::o;8558:419::-;8697:4;8735:2;8724:9;8720:18;8712:26;;8784:9;8778:4;8774:20;8770:1;8759:9;8755:17;8748:47;8812:76;8883:4;8874:6;8812:76;:::i;:::-;8804:84;;8898:72;8966:2;8955:9;8951:18;8942:6;8898:72;:::i;:::-;8558:419;;;;;:::o;8983:147::-;9084:11;9121:3;9106:18;;8983:147;;;;:::o;9136:114::-;;:::o;9256:398::-;9415:3;9436:83;9517:1;9512:3;9436:83;:::i;:::-;9429:90;;9528:93;9617:3;9528:93;:::i;:::-;9646:1;9641:3;9637:11;9630:18;;9256:398;;;:::o;9660:379::-;9844:3;9866:147;10009:3;9866:147;:::i;:::-;9859:154;;10030:3;10023:10;;9660:379;;;:::o;10045:169::-;10129:11;10163:6;10158:3;10151:19;10203:4;10198:3;10194:14;10179:29;;10045:169;;;;:::o;10220:165::-;10360:17;10356:1;10348:6;10344:14;10337:41;10220:165;:::o;10391:366::-;10533:3;10554:67;10618:2;10613:3;10554:67;:::i;:::-;10547:74;;10630:93;10719:3;10630:93;:::i;:::-;10748:2;10743:3;10739:12;10732:19;;10391:366;;;:::o;10763:419::-;10929:4;10967:2;10956:9;10952:18;10944:26;;11016:9;11010:4;11006:20;11002:1;10991:9;10987:17;10980:47;11044:131;11170:4;11044:131;:::i;:::-;11036:139;;10763:419;;;:::o;11188:165::-;11328:17;11324:1;11316:6;11312:14;11305:41;11188:165;:::o;11359:366::-;11501:3;11522:67;11586:2;11581:3;11522:67;:::i;:::-;11515:74;;11598:93;11687:3;11598:93;:::i;:::-;11716:2;11711:3;11707:12;11700:19;;11359:366;;;:::o;11731:419::-;11897:4;11935:2;11924:9;11920:18;11912:26;;11984:9;11978:4;11974:20;11970:1;11959:9;11955:17;11948:47;12012:131;12138:4;12012:131;:::i;:::-;12004:139;;11731:419;;;:::o;12156:345::-;12223:6;12272:2;12260:9;12251:7;12247:23;12243:32;12240:119;;;12278:79;;:::i;:::-;12240:119;12398:1;12423:61;12476:7;12467:6;12456:9;12452:22;12423:61;:::i;:::-;12413:71;;12369:125;12156:345;;;;:::o;12507:332::-;12628:4;12666:2;12655:9;12651:18;12643:26;;12679:71;12747:1;12736:9;12732:17;12723:6;12679:71;:::i;:::-;12760:72;12828:2;12817:9;12813:18;12804:6;12760:72;:::i;:::-;12507:332;;;;;:::o"},"methodIdentifiers":{"entryPoint()":"b0d691fe","owner()":"8da5cb5b","postOp(uint8,bytes,uint256)":"a9a23409","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"f465c77e","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entryPoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"GasSponsored\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postOp(uint8,bytes,uint256)\":{\"params\":{\"actualGasCost\":\"- actual gas used so far (without this postOp call).\",\"context\":\"- the context value returned by validatePaymasterUserOp\",\"mode\":\"enum with the following options:      opSucceeded - user operation succeeded.      opReverted  - user op reverted. still has to pay for gas.      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.                       Now this is the 2nd call, after user's op was deliberately reverted.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"the maximum cost of this transaction (based on maximum gas and gas price from userOp)\",\"userOp\":\"the user operation\",\"userOpHash\":\"hash of the user's request data.\"},\"returns\":{\"context\":\"value to send to a postOp      zero length to signify postOp is not required.\",\"validationData\":\"signature and time-range of this operation, encoded the same as the return value of validateUserOperation      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,         otherwise, an address of an \\\"authorizer\\\" contract.      <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"      <6-byte> validAfter - first timestamp this operation is valid      Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"postOp(uint8,bytes,uint256)\":{\"notice\":\"post-operation handler. Must verify sender is the entryPoint\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted) The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SmartPayPaymaster.sol\":\"SmartPayPaymaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746\",\"dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU\"]},\"@account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b\",\"dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP\"]},\"@account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x3a90bf308819ed125fa4202f880999caff8a8686633b8ddb79a30ca240d5b8f8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d2d21cc92c2fdab2b58d21bc25d4cd0e8c284b922528a186b087b818d54bc6cf\",\"dweb:/ipfs/QmT1qrfuBjsv2rmRCDn8mgPXHp94hARJwzbcDuBLDTbFWd\"]},\"@account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2\",\"dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b\"]},\"@account-abstraction/contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x36858ba8685024974f533530420688da3454d29996ebc42e410673a1ed2ec456\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://616cbcf51778b1961b7f20a547bec7efae6d1d565df0f651926241ed8bde9ad8\",\"dweb:/ipfs/QmaVsgffUUmeUJYgStvRr8cNZ1LBbrc3FYNLW4JT1dVLia\"]},\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3\",\"dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ\"]},\"@account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c\",\"dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/SmartPayPaymaster.sol\":{\"keccak256\":\"0x525baf95ebf30a0a9189af54f73a300e374e796f2cadfb9cd69fa2ebbee7e745\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bd623a9b2f23c1019fd169f85583c92444215af2e80d77b6ad5613e70663425\",\"dweb:/ipfs/QmRyy2od4x39RzuS7EhdxUs9TuiQ3TNLuT43iJeityiNdB\"]},\"contracts/base/CustomBasePaymaster.sol\":{\"keccak256\":\"0xa38a7ccd539e965c35f59a1acfa1d6ec748ac1b49f4fea716edfa1cba878e04a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://247d01756bd4fd28721d455c8c7f8b65b487d598b14232b6fbf3d72a52c41906\",\"dweb:/ipfs/QmNaJetQyBqj9tuQWq7wk1nVKYCpS9CsmdpvCvCYA3HFYS\"]}},\"version\":1}"}},"contracts/base/CustomBasePaymaster.sol":{"CustomBasePaymaster":{"abi":[{"inputs":[],"name":"entryPoint","outputs":[{"internalType":"contract IEntryPoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum IPaymaster.PostOpMode","name":"mode","type":"uint8"},{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"actualGasCost","type":"uint256"}],"name":"postOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"maxCost","type":"uint256"}],"name":"validatePaymasterUserOp","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"entryPoint()":"b0d691fe","postOp(uint8,bytes,uint256)":"a9a23409","validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"f465c77e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"postOp(uint8,bytes,uint256)\":{\"params\":{\"actualGasCost\":\"- actual gas used so far (without this postOp call).\",\"context\":\"- the context value returned by validatePaymasterUserOp\",\"mode\":\"enum with the following options:      opSucceeded - user operation succeeded.      opReverted  - user op reverted. still has to pay for gas.      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.                       Now this is the 2nd call, after user's op was deliberately reverted.\"}},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"the maximum cost of this transaction (based on maximum gas and gas price from userOp)\",\"userOp\":\"the user operation\",\"userOpHash\":\"hash of the user's request data.\"},\"returns\":{\"context\":\"value to send to a postOp      zero length to signify postOp is not required.\",\"validationData\":\"signature and time-range of this operation, encoded the same as the return value of validateUserOperation      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,         otherwise, an address of an \\\"authorizer\\\" contract.      <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"      <6-byte> validAfter - first timestamp this operation is valid      Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"postOp(uint8,bytes,uint256)\":{\"notice\":\"post-operation handler. Must verify sender is the entryPoint\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted) The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/CustomBasePaymaster.sol\":\"CustomBasePaymaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746\",\"dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU\"]},\"@account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b\",\"dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP\"]},\"@account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x3a90bf308819ed125fa4202f880999caff8a8686633b8ddb79a30ca240d5b8f8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d2d21cc92c2fdab2b58d21bc25d4cd0e8c284b922528a186b087b818d54bc6cf\",\"dweb:/ipfs/QmT1qrfuBjsv2rmRCDn8mgPXHp94hARJwzbcDuBLDTbFWd\"]},\"@account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2\",\"dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b\"]},\"@account-abstraction/contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x36858ba8685024974f533530420688da3454d29996ebc42e410673a1ed2ec456\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://616cbcf51778b1961b7f20a547bec7efae6d1d565df0f651926241ed8bde9ad8\",\"dweb:/ipfs/QmaVsgffUUmeUJYgStvRr8cNZ1LBbrc3FYNLW4JT1dVLia\"]},\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3\",\"dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ\"]},\"@account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c\",\"dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN\"]},\"contracts/base/CustomBasePaymaster.sol\":{\"keccak256\":\"0xa38a7ccd539e965c35f59a1acfa1d6ec748ac1b49f4fea716edfa1cba878e04a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://247d01756bd4fd28721d455c8c7f8b65b487d598b14232b6fbf3d72a52c41906\",\"dweb:/ipfs/QmNaJetQyBqj9tuQWq7wk1nVKYCpS9CsmdpvCvCYA3HFYS\"]}},\"version\":1}"}}}}}